CREATE OR REPLACE PACKAGE BODY CUSTOMER."ALZ_LITIGATION_UTILS"
is

    procedure process_result (p_process_no      number,
                              p_error_no        number,
                              p_severity        number,
                              p_type            number,
                              p_code            varchar2,
                              p_reason          varchar2,
                              p_action          varchar2,
                              p_key_value1      varchar2,
                              p_key_value2      varchar2,
                              p_error_origin    varchar2,
                              p_process_results in out customer.process_result_table)
    is
        v_count number := 0;

    begin
        begin
            v_count := p_process_results.count;
        exception when others then
            p_process_results := customer.process_result_table ();
        end;

        p_process_results.extend;
        v_count := p_process_results.count;

        p_process_results (v_count) :=
            customer.process_result_type(
                p_process_no,
                p_error_no,
                p_severity,
                p_type,
                p_code,
                substr(p_reason,1,1000),
                substr(p_action,1,500),
                p_key_value1,
                p_key_value2,
                p_error_origin
        );

    end process_result;

    procedure tmp_log(p_package_name         varchar2,
                      p_procedure_name       varchar2,
                      p_log_text             varchar2)
    is
    pragma autonomous_transaction;

        v_loop_end           number;
        v_written_text       varchar2(500);

    begin

        v_loop_end:= length(p_log_text) / 500;

        for i in 0 .. v_loop_end loop
            v_written_text := null;

            v_written_text := substr(p_log_text, i * 500 + 1, 500);

            if length(trim(v_written_text)) > 0 then
                insert into tmp_koc_errors(reference_code, process, error, process_date, script_name, sira)
                     values(p_package_name, p_procedure_name, v_written_text, sysdate, null, i);
            end if;

            commit;
        end loop;
    end;

    procedure reassign_related_tickets(p_old_owner in varchar2 default null,
                                       p_old_owner_group in varchar default null,
                                       p_law_file_no in varchar2 default null ,
                                       p_user_name in varchar2,
                                       p_ticket_id in number default 0,
                                       p_ref_code in varchar2 default 'REASSIGN_TICKET',
                                       p_operation_code in varchar2 default null,
                                       p_process_results in out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_count number;
    begin

        if p_old_owner is null
            and p_old_owner_group is null
            and p_law_file_no is null
            and p_ticket_id = 0
        then
            rollback;
            v_error_msg := p_ref_code||': Beklenmeyen kullaným. Ýþ sahibi, iþ sahibi grubu, dosya numarasý, iþ numarasý bilgilerinden en az birinin dolu olmasý gerekiyor.' ;
            process_result(
                        31,
                        0,
                        9,
                        -1,
                        p_ref_code ,
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.REASSIGN_RELATED_TICKETS',
                        p_process_results
                    );
            return;
        end if;
        for x_rec in ( select t.lawfile_no , t.law_court_enf , t.uyap_birim_id, t.court_file_no,t.ticket_id
                            from alz_law_ticket t,
                            alz_law_ticket_process tp
                            where nvl(t.lawfile_no, 'X') = nvl( p_law_file_no , nvl(t.lawfile_no, 'X') )
                            and t.ticket_id = decode( nvl( p_ticket_id,0) , 0, t.ticket_id , p_ticket_id)
                            and t.ticket_id = tp.ticket_id
                            and tp.owner = nvl( p_old_owner,tp.owner)
                            and tp.owner_group = nvl( p_old_owner_group,tp.owner_group )
                            and tp.status = 'OPEN' )
        loop
            alz_law_ticket_process_utils.reassign_ticket(  p_ticket_id => x_rec.ticket_id ,
                            p_law_file_no     => x_rec.lawfile_no ,
                            p_court_enf_type  => x_rec.law_court_enf ,
                            p_court_no     => x_rec.uyap_birim_id ,
                            p_court_file_no  => x_rec.court_file_no ,
                            p_operation => p_operation_code,
                            p_user_name    => p_user_name,
                            p_process_results   =>  p_process_results);
                begin
                    v_count := p_process_results.count;
                exception when others then
                    v_count := 0;
                end;
                if v_count > 0 then
                    if p_process_results(1).type = -1 then
                        rollback;
                        v_error_msg := p_ref_code||':Ýþin yeniden atamasý yapýlýrken sorun oluþtu.' ;
                        process_result(
                                    31,
                                    0,
                                    9,
                                    -1,
                                    p_ref_code ,
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.REASSIGN_RELATED_TICKETS',
                                    p_process_results
                                );
                        return;
                    end if;
                end if;
        end loop;
    end;

    function get_com_sender_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin

        open v_list for
        select parameter,
               explanation
          from alz_look_up
         where code = 'LAW_COM_SENDER'
          and sysdate between nvl(validity_start_date, sysdate) and nvl(validity_end_date, sysdate)
        order by explanation;

        return v_list;
    end get_com_sender_list;

    function get_law_doc_side_list(p_user_name varchar2,
                                    p_law_file_no varchar2 default null,
                                    p_uyap_id number default null,
                                    p_company varchar2 default null,
                                    p_ticket_id number default null,
                                    p_ext_reference varchar2 default null) return law_documents_tbl
    is
        v_liste law_documents_tbl;
        v_ret_liste law_documents_tbl;
        v_supplier_type varchar2(100);
    begin
        v_liste := get_law_documents_list( p_user_name ,
                                    p_law_file_no ,
                                    p_uyap_id ,
                                    p_company ,
                                    p_ticket_id ,
                                    p_ext_reference );
        if v_liste is not null and p_law_file_no is not null
        then
                select supplier_type
                into v_supplier_type
                from koc_law_bases
                where law_file_no = p_law_file_no;

                if v_supplier_type = 'HM' then

                    select customer.law_documents_typ( DOCUMENT_ID, UYAP_ID, UYAP_FILE_TYPE, TYPE_CODE, TYPE, IS_ORIGINAL, IS_ORIGINAL_DESC, DOCUMENT_DATE, RECEIVE_DATE, CREATION_DATE, SOURCE, DESCRIPTION, FILENET_ID, MIMETYPE, COMPANY, DEPARTMENT, LAW_FILE_NO, SENDER, IS_ATTACHMENT, GG_DOCUMENT_ID, IS_PRIVACY )
                    bulk collect into v_ret_liste
                    from
                    (
                    select *
                    from
                    (
                        select *
                        from table(v_liste )
                        where source in ( select parameter from alz_look_up where code = 'ALZ_LAW_DOC_SORT_KDT_TOP_SRC' )
                        order by is_attachment, receive_date desc
                        )
                        where rownum <=  TO_NUMBER( ( select parameter from alz_look_up where code = 'ALZ_LAW_DOC_SORT_KDT_TOP_LEVEL'AND NVL(VALIDITY_END_DATE,SYSDATE+1) > SYSDATE AND ROWNUM=1 ) )
                        union all
                        select *
                        from
                        (
                        select docs.*
                        from table( v_liste ) docs,
                        alz_look_up typ
                        where lower( docs.type )  = lower( typ.parameter )
                        and typ.code = 'ALZ_LAW_DOC_SORT_KDT_TYPES'
                        order by is_attachment, typ.explanation, receive_date
                        )
                    ) abc;
                else
                    select customer.law_documents_typ( DOCUMENT_ID, UYAP_ID, UYAP_FILE_TYPE, TYPE_CODE, TYPE, IS_ORIGINAL, IS_ORIGINAL_DESC, DOCUMENT_DATE, RECEIVE_DATE, CREATION_DATE, SOURCE, DESCRIPTION, FILENET_ID, MIMETYPE, COMPANY, DEPARTMENT, LAW_FILE_NO, SENDER, IS_ATTACHMENT, GG_DOCUMENT_ID, IS_PRIVACY)
                    bulk collect into v_ret_liste
                        from
                        (
                        select docs.*
                        from table( v_liste ) docs,
                        alz_look_up typ
                        where lower( docs.type )  = lower( typ.parameter(+) )
                        and typ.code(+) = 'ALZ_LAW_DOC_SORT_HDT_TYPES'
                        order by typ.explanation, docs.is_attachment, receive_date
                        ) abc ;
                end if;

        end if;

        return v_ret_liste ;
    end;

    function uyap_to_date(p_input varchar2, p_format varchar2) return date
    is

    begin

        return to_date(p_input, p_format);

    exception when others then
        return null;
    end uyap_to_date;

    function get_law_documents_list(p_user_name varchar2,
                                    p_law_file_no varchar2 default null,
                                    p_uyap_id number default null,
                                    p_company varchar2 default null,
                                    p_ticket_id number default null,
                                    p_ext_reference varchar2 default null) return law_documents_tbl
    is
        v_list law_documents_tbl;

        v_lawyer_control number;
        v_com_control number;
        v_ext_control number;
        v_ext_reference varchar2(20);
    begin

        select nvl(sum(decode(role_code,
                                'LMRDA', 1,
                                'LMRHO', 1,
                                'LMROM', 1,
                                'LMRSY', 1,
                                'LMRHA', 1,
                                0
                      )
                   ),
               0) as lawyer_control,
               nvl(sum(decode(role_code,
                                'LMRMH', 1,
                                'LMRAR', 1,
                                0
                      )
                   ),
               0) as com_control,
               nvl(sum(decode(role_code,
                                'LMRTP', 1,
                                0
                      )
                   ),
               0) as ext_control
          into v_lawyer_control,
               v_com_control,
               v_ext_control
          from koc_auth_user_role_rel
         where username = p_user_name;


        if p_ext_reference is not null then

            begin
                select clm_ext_reference
                  into v_ext_reference
                  from koc_clm_recourse_detail
                 where ext_reference = p_ext_reference;

            exception when others then
                v_ext_reference := p_ext_reference;
            end;

            select customer.LAW_DOCUMENTS_TYP(
                        document_id,
                        uyap_id,
                        uyap_file_type,
                        type_code,
                        type,
                        is_original,
                        is_original_desc,
                        document_date,
                        arrival_date,
                        creation_date,
                        source,
                        description,
                        filenet_id,
                        mimetype,
                        company,
                        department,
                        law_file_no,
                        sender,
                        is_attachment,
                        gg_document_id,
                        is_privacy
                   ) BULK COLLECT
              into v_list
              from
              (
            select null as document_id,
                   null as uyap_id,
                   null as uyap_file_type,
                   a.doc_code as type_code,
                   d.explanation as type,
                   nvl(a.is_original, 0) as is_original,
                   decode(a.is_original, 0, 'Hayýr', 'Evet') as is_original_desc,
                   a.transfer_date as document_date,
                   a.transfer_date as arrival_date, -- arrival_date
                   a.transfer_date as creation_date, -- creation_date
                   'HASAR' as source,
                   substr(a.doc_notes, 1, 250) as description, -- açýklama
                   b.dm_sys_id as filenet_id,
                   c.mime_type as mimetype,
                   null as company, -- company
                   null as department, -- department
                   null as law_file_no,
                   null as sender, -- sender
                   0 as is_attachment,
                   null as gg_document_id,
                   0 as is_privacy
              from alz_clm_docs a,
                   alz_docs b,
                   alz_doc_infos c,
                   koc_clm_doc_ref d
             where a.ext_reference = v_ext_reference
               and a.object_id = b.object_id
               and a.object_id = c.object_id
               and a.doc_code = d.doc_code
              )
              order by creation_date desc;

        elsif p_ticket_id is not null then

            select LAW_DOCUMENTS_TYP(
                    document_id,
                    uyap_id,
                    uyap_file_type,
                    type_code,
                    type,
                    is_original,
                    is_original_desc,
                    document_date,
                    arrival_date,
                    creation_date,
                    source,
                    description,
                    filenet_id,
                    mimetype,
                    company,
                    department,
                    law_file_no,
                    sender,
                    is_attachment,
                    gg_document_id,
                    is_privacy
                   ) BULK COLLECT
              into v_list
              from
                (
                    select null as document_id,
                           null as uyap_id,
                           null as uyap_file_type,
                           to_char(ltd.document_code) as type_code,
                           ldtd.doc_desc as type,
                           ltd.is_original,
                           decode(ltd.is_original, 0, 'Hayýr', 'Evet') as is_original_desc,
                           ltd.document_date,
                           ltd.document_date as arrival_date,
                           null as creation_date,
                           'TICKET' as source,
                           null as description,
                           ltd.filenet_id,
                           ltd.mimetype,
                           lt.sirket_adi as company,
                           ltp.department as department,
                           lt.lawfile_no as law_file_no,
                           ltd.sender,
                           0 as is_attachment,
                           null as gg_document_id,
                           decode(tpd.filenet_id, null, 1, 0) as is_privacy
                      from alz_law_ticket lt,
                           alz_law_ticket_process ltp,
                           alz_law_ticket_documents ltd,
                           alz_law_doc_type_def ldtd,
                           alz_third_party_documents tpd
                     where ( lt.ticket_id = p_ticket_id or lt.parent = p_ticket_id )
                       and lt.ticket_id = ltp.ticket_id
                       and lt.ticket_id = ltd.ticket_id
                       and ltd.document_code = ldtd.code
                       and ltd.ticket_id = tpd.ticket_id(+)
                       and ltd.filenet_id = tpd.filenet_id(+)
                       and (v_lawyer_control > 0 or ltd.created_by = p_user_name or (v_ext_control > 0 and tpd.filenet_id is not null))   --or lbd.created_by = p_user_name)
                     union
                    select distinct
                           aue.evrak_id as document_id,
                           audl.dosya_id as uyap_id,
                           audl.dosyatur_kod as uyap_file_type,
                           null as type_code,
                           aue.turu as type,
                           null as is_original,
                           null as is_original_desc,
                           uyap_to_date(aue.birim_evrak_tarihi, 'DD.MM.YYYY') as document_date,
                           uyap_to_date(aue.gelen_tarih, 'DD.MM.YYYY') as arrival_date,
                           aue.kayit_tarihi as creation_date,
                           'UYAP' as source,
                           aue.aciklama as description,
                           auei.filenet_id,
                           auei.mimetype,
                           aue.sirket_adi as company,
                           ltp.department as department,
                           lt.lawfile_no as law_file_no,
                           aue.gonderen_yer_kisi as sender,
                           decode(nvl(auei.ek_evrak, 'N'), 'N', 0, 1) as is_attachment,
                           aue.gg_evrak_id as gg_document_id,
                           0 as is_privacy
                      from alz_law_ticket lt,
                           alz_law_ticket_process ltp,
                           alz_uyap_dosya_listesi audl,
                           alz_uyap_evraklar aue,
                           alz_uyap_evrak_icerik auei
                     where ( lt.ticket_id = p_ticket_id or lt.parent = p_ticket_id )
                       and lt.source = 'UYAP'
                       and lt.ticket_id = ltp.ticket_id
                       and lt.uyap_dosya_id = audl.dosya_id
                       and audl.dosya_id = aue.dosya_id
                       and audl.sirket_adi = aue.sirket_adi
                       and lt.uyap_evrak_unique_id = aue.unique_id
                       and audl.guncel_versiyon = 'Y'
                       and aue.guncel_versiyon = 'Y'
                       and aue.dosya_id = auei.dosya_id(+)
                       and aue.evrak_id = auei.evrak_id(+)
                       and (
                            v_lawyer_control > 0 or
                            (
                                v_ext_control > 0 and
                                exists (
                                    select 1
                                      from alz_third_party_documents
                                     where ticket_id = lt.ticket_id
                                       and auei.filenet_id is not null
                                       and filenet_id = auei.filenet_id
                                )
                            )
                       )
                     union
                    select null as document_id,
                           null as uyap_id,
                           null as uyap_file_type,
                           to_char(d.document_code) as type_code,
                           ldtd.doc_desc as type,
                           null as is_original,
                           null as is_original_desc,
                           d.document_date as document_date,
                           null as arrival_date,
                           h.creation_date as creation_date,
                           'TAHKIM' as source,
                           h.description as description,
                           d.filenet_id,
                           d.mimetype,
                           h.company as company,
                           ltp.department as department,
                           lt.lawfile_no as law_file_no,
                           h.sender as sender,
                           0 as is_attachment,
                           null as gg_document_id,
                           0 as is_privacy
                      from alz_law_ticket lt,
                           alz_law_ticket_process ltp,
                           koc_law_ext_documents_hdr h,
                           koc_law_ext_documents_dtl d,
                           alz_law_doc_type_def ldtd
                     where ( lt.ticket_id = p_ticket_id or lt.parent = p_ticket_id )
                       and lt.source = 'TAHKIM'
                       and lt.ticket_id = ltp.ticket_id
                       and lt.header_id = h.header_id
                       and h.header_id = d.header_id
                       and d.document_code = ldtd.code(+)
                       and d.filenet_id <> 'NO_DOCUMENT'
                       and (
                            v_lawyer_control > 0 or
                            (
                                v_ext_control > 0 and
                                exists (
                                    select 1
                                      from alz_third_party_documents
                                     where ticket_id = lt.ticket_id
                                       and d.filenet_id is not null
                                       and filenet_id = d.filenet_id
                                )
                            )
                       )
                     union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(dit.document_code), -- type_code
                           dtd.doc_desc,
                           dit.is_orginal,
                           decode(dit.is_orginal, 0, 'Hayýr', 'Evet'),
                           dit.law_doc_date,
                           lct.arrival_date, -- arrival_date
                           lct.creation_date, -- creation_date
                           'MUHABERAT',
                           lct.description, -- açýklama
                           dit.filenet_id,
                           null, -- mime_type
                           lct.company, -- company
                           dit.department_code, -- department
                           lct.law_file_no,
                           lct.send_from, -- sender
                           0, -- is_attachment
                           null, -- gg_document_id
                           0 as is_privacy
                      from alz_law_ticket lt,
                           alz_law_ticket_process ltp,
                           alz_clm_com_docs_index_tbl dit,
                           alz_law_com_tbl lct,
                           alz_law_doc_type_def dtd
                     where ( lt.ticket_id = p_ticket_id or lt.parent = p_ticket_id )
                       and lt.source = 'MUHABERAT'
                       and lt.ticket_id = ltp.ticket_id
                       and lt.filenet_id = dit.filenet_id
                       and dit.communication_no = lct.communication_no
                       and dit.archive_no = lct.archive_no
                       and nvl(dit.activepassive, 0) != 0
                       and dit.document_code = dtd.code(+)
                       and (
                            v_lawyer_control > 0 or
                            v_com_control > 0 or
                            (
                                v_ext_control > 0 and
                                exists (
                                    select 1
                                      from alz_third_party_documents
                                     where ticket_id = lt.ticket_id
                                       and dit.filenet_id is not null
                                       and filenet_id = dit.filenet_id
                                )
                            )
                       )
                     union
                    select null as document_id,
                           null as uyap_id,
                           null as uyap_file_type,
                           a.doc_code as type_code,
                           d.explanation as type,
                           nvl(a.is_original, 0) as is_original,
                           decode(a.is_original, 0, 'Hayýr', 'Evet') as is_original_desc,
                           a.transfer_date as document_date,
                           a.transfer_date as arrival_date, -- arrival_date
                           a.transfer_date as creation_date, -- creation_date
                           'HASAR' as source,
                           substr(a.doc_notes, 1, 250) as description, -- açýklama
                           b.dm_sys_id as filenet_id,
                           c.mime_type as mimetype,
                           null as company, -- company
                           null as department, -- department
                           null as law_file_no,
                           null as sender, -- sender
                           0 as is_attachment,
                           null as gg_document_id,
                           0 as is_privacy
                      from alz_law_ticket alt1,
                           alz_law_ticket alt2,
                           koc_clm_recourse_detail crd,
                           alz_clm_docs a,
                           alz_docs b,
                           alz_doc_infos c,
                           koc_clm_doc_ref d
                     where 1 = 1
                       and alt1.ticket_id = p_ticket_id
                       and alt1.source = 'RUCU'
                       and alt1.ticket_id = alt2.parent(+)
                       and (
                            (alt2.ticket_id is not null and alt2.rucu_file_no = crd.ext_reference)
                         or (alt2.ticket_id is null and alt1.rucu_file_no = crd.ext_reference)
                       )
                       and crd.clm_ext_reference = a.ext_reference
                       and a.object_id = b.object_id
                       and a.object_id = c.object_id
                       and a.doc_code = d.doc_code
                )
              order by is_attachment, creation_date desc;

        elsif p_uyap_id is not null then
            select LAW_DOCUMENTS_TYP(
                    document_id,
                    uyap_id,
                    uyap_file_type,
                    type_code,
                    type,
                    is_original,
                    is_original_desc,
                    document_date,
                    arrival_date,
                    creation_date,
                    source,
                    description,
                    filenet_id,
                    mimetype,
                    company,
                    department,
                    law_file_no,
                    sender,
                    is_attachment,
                    gg_document_id,
                    is_privacy
                   ) BULK COLLECT
              into v_list
              from
                (
                    select aue.evrak_id as document_id,
                           audl.dosya_id as uyap_id,
                           audl.dosyatur_kod as uyap_file_type,
                           null as type_code,
                           aue.turu as type,
                           null as is_original, -- asýl mý?
                           null as is_original_desc, -- asýl mý açýklama
                           uyap_to_date(aue.birim_evrak_tarihi, 'DD.MM.YYYY') as document_date,
                           uyap_to_date(aue.gelen_tarih, 'DD.MM.YYYY') as arrival_date,
                           sysdate as creation_date,
                           'UYAP' as source,
                           aue.aciklama as description,
                           auei.filenet_id,
                           auei.mimetype,
                           aue.sirket_adi as company,
                           null as department,
                           null as law_file_no,
                           aue.gonderen_yer_kisi as sender,
                           decode(nvl(auei.ek_evrak, 'N'), 'N', 0, 1) as is_attachment,
                           aue.gg_evrak_id as gg_document_id,
                           0 as is_privacy
                      from alz_uyap_dosya_listesi audl,
                           alz_uyap_evraklar aue,
                           alz_uyap_evrak_icerik auei
                     where audl.dosya_id = p_uyap_id
                       and audl.sirket_adi = p_company
                       and audl.dosya_id = aue.dosya_id
                       and audl.sirket_adi = aue.sirket_adi
                       and audl.guncel_versiyon = 'Y'
                       and aue.guncel_versiyon = 'Y'
                       and aue.dosya_id = auei.dosya_id(+)
                       and aue.evrak_id = auei.evrak_id(+)
                       and v_lawyer_control > 0
                     union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(dit.document_code), -- type_code
                           dtd.doc_desc,
                           dit.is_orginal,
                           decode(dit.is_orginal, 0, 'Hayýr', 'Evet'),
                           dit.law_doc_date,
                           lct.arrival_date, -- arrival_date
                           lct.creation_date, -- creation_date
                           'MUHABERAT',
                           lct.description, -- açýklama
                           dit.filenet_id,
                           null, -- mime_type
                           lct.company, -- company
                           dit.department_code, -- department
                           lct.law_file_no,
                           lct.send_from, -- sender
                           0, -- is_attachment
                           null, -- gg_document_id
                           0 as is_privacy
                      from alz_law_com_tbl lct,
                           alz_clm_com_docs_index_tbl dit,
                           alz_law_doc_type_def dtd
                     where lct.uyap_id = p_uyap_id
                       and lct.communication_no = dit.communication_no
                       and lct.archive_no = dit.archive_no
                       and nvl(dit.activepassive, 0) != 0
                       and dit.document_code = dtd.code(+)
                       and (v_lawyer_control > 0 or v_com_control > 0)
                )
              order by is_attachment, creation_date desc;
        elsif p_law_file_no is not null then --TO DO:PREP

            select LAW_DOCUMENTS_TYP(
                    document_id,
                    uyap_id,
                    uyap_file_type,
                    type_code,
                    type,
                    is_original,
                    is_original_desc,
                    document_date,
                    arrival_date,
                    creation_date,
                    source,
                    description,
                    filenet_id,
                    mimetype,
                    company,
                    department,
                    law_file_no,
                    sender,
                    is_attachment,
                    gg_document_id,
                    is_privacy
                   ) BULK COLLECT
              into v_list
              from
                (
                    select distinct
                           aue.evrak_id as document_id,
                           audl.dosya_id as uyap_id,
                           audl.dosyatur_kod as uyap_file_type,
                           null as type_code,
                           aue.turu as type,
                           null as is_original, -- asýl mý?
                           null as is_original_desc, -- asýl mý açýklama
                           uyap_to_date(aue.birim_evrak_tarihi, 'DD.MM.YYYY') as document_date,
                           uyap_to_date(aue.gelen_tarih, 'DD.MM.YYYY') as arrival_date,
                           aue.kayit_tarihi as creation_date,
                           'UYAP' as source,
                           aue.aciklama as description,
                           auei.filenet_id,
                           auei.mimetype,
                           aue.sirket_adi as company,
                           decode(lb.supplier_type, 'HM', 'KDT', lb.supplier_type) as department,
                           lb.law_file_no,
                           aue.gonderen_yer_kisi as sender,
                           decode(nvl(auei.ek_evrak, 'N'), 'N', 0, 1) as is_attachment,
                           aue.gg_evrak_id as gg_document_id,
                           0 as is_privacy
                      from koc_law_base_uyap_rel lbur,
                           koc_law_bases lb,
                           alz_uyap_dosya_listesi audl,
                           alz_uyap_evraklar aue,
                           alz_uyap_evrak_icerik auei
                     where lbur.law_file_no = p_law_file_no
                       and nvl(lbur.deleted_flag, 'N') = 'N'
                       and lbur.law_file_no = lb.law_file_no
                       and lbur.uyap_id = audl.dosya_id
                       and audl.dosya_id = aue.dosya_id
                       and audl.sirket_adi = aue.sirket_adi
                       and audl.guncel_versiyon = 'Y'
                       and aue.guncel_versiyon = 'Y'
                       and aue.dosya_id = auei.dosya_id(+)
                       and aue.evrak_id = auei.evrak_id(+)
                       and (v_lawyer_control > 0 or v_ext_control > 0)
                    union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(ltd.document_code), -- type_code
                           ldtd.doc_desc,
                           ltd.is_original,
                           decode(ltd.is_original, 0, 'Hayýr', 'Evet'),
                           ltd.document_date,
                           ltd.document_date, -- arrival_date
                           null, -- creation_date
                           'TICKET',
                           null, -- açýklama
                           ltd.filenet_id,
                           ltd.mimetype,
                           lt.sirket_adi,
                           decode(lb.supplier_type, 'HM', 'KDT', lb.supplier_type) as department, -- department
                           lb.law_file_no,
                           ltd.sender,
                           0, -- is_attachment
                           null, -- gg_document_id
                           decode(tpd.filenet_id, null, 1, 0) as is_privacy
                      from koc_law_bases lb,
                           alz_law_ticket lt,
                           alz_law_ticket_documents ltd,
                           alz_law_doc_type_def ldtd,
                           alz_third_party_documents tpd
                     where lb.law_file_no = p_law_file_no
                       and lb.law_file_no = lt.lawfile_no
                       and lt.ticket_id = ltd.ticket_id
                       and ltd.document_code = ldtd.code
                       and ltd.ticket_id = tpd.ticket_id(+)
                       and ltd.filenet_id = tpd.filenet_id(+)
                       and (v_lawyer_control > 0 or ltd.created_by = p_user_name  or (v_ext_control > 0 and tpd.filenet_id is not null))
                    union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(lbd.document_code), -- type_code
                           dtd.doc_desc as document_desc,
                           lbd.is_original,
                           decode(lbd.is_original, 0, 'Hayýr', 'Evet'),
                           lbd.document_date,
                           lbd.document_date, -- arrival_date
                           lbd.creation_date, -- creation_date
                           'DOSYA',
                           null, -- açýklama
                           lbd.filenet_id,
                           null, -- mime_type
                           null, -- company
                           decode(lb.supplier_type, 'HM', 'KDT', lb.supplier_type) as department, -- department
                           lb.law_file_no,
                           lbd.sender,
                           0, -- is_attachment
                           null, -- gg_document_id
                           lbd.is_privacy
                      from koc_law_bases lb,
                           koc_law_base_documents lbd,
                           alz_law_doc_type_def dtd
                     where lb.law_file_no = p_law_file_no
                       and lb.law_file_no = lbd.law_file_no
                       and nvl(lbd.deleted_flag, 'N') = 'N'
                       and lbd.document_code = dtd.code
                       and (v_lawyer_control > 0 or lbd.created_by = p_user_name or (v_ext_control > 0 and lbd.is_privacy = 0))
                    union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(dit.document_code), -- type_code
                           dtd.doc_desc,
                           dit.is_orginal,
                           decode(dit.is_orginal, 0, 'Hayýr', 'Evet'),
                           dit.law_doc_date,
                           lct.arrival_date, -- arrival_date
                           lct.creation_date, -- creation_date
                           'MUHABERAT',
                           lct.description, -- açýklama
                           dit.filenet_id,
                           null, -- mime_type
                           lct.company, -- company
                           dit.department_code, -- department
                           lct.law_file_no,
                           lct.send_from, -- sender
                           0, -- is_attachment
                           null, -- gg_document_id
                           0 as is_privacy
                      from koc_law_bases lb,
                           alz_law_ticket lt,
                           alz_clm_com_docs_index_tbl dit,
                           alz_law_com_tbl lct,
                           alz_law_doc_type_def dtd
                     where lb.law_file_no = p_law_file_no
                       and lb.law_file_no = lt.lawfile_no
                       and lt.filenet_id = dit.filenet_id
                       and dit.communication_no = lct.communication_no
                       and dit.archive_no = lct.archive_no
                       and nvl(dit.activepassive, 0) != 0
                       and dit.document_code = dtd.code
                       and (v_lawyer_control > 0 or v_com_control > 0)
                     union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(dit.document_code), -- type_code
                           dtd.doc_desc,
                           dit.is_orginal,
                           decode(dit.is_orginal, 0, 'Hayýr', 'Evet'),
                           dit.law_doc_date,
                           lct.arrival_date, -- arrival_date
                           lct.creation_date, -- creation_date
                           'MUHABERAT',
                           lct.description, -- açýklama
                           dit.filenet_id,
                           null, -- mime_type
                           lct.company, -- company
                           dit.department_code, -- department
                           lct.law_file_no,
                           lct.send_from, -- sender
                           0, -- is_attachment
                           null, -- gg_document_id
                           0 as is_privacy
                      from koc_law_bases lb,
                           alz_law_com_tbl lct,
                           alz_clm_com_docs_index_tbl dit,
                           alz_law_ticket lt,
                           alz_law_doc_type_def dtd
                     where lb.law_file_no = p_law_file_no
                       and lb.law_file_no = lct.law_file_no
                       and lct.communication_no = dit.communication_no
                       and lct.archive_no = dit.archive_no
                       and nvl(dit.activepassive, 0) != 0
                       and dit.filenet_id = lt.filenet_id(+)
                       and lt.filenet_id is null
                       and dit.document_code = dtd.code(+)
                       and (v_lawyer_control > 0 or v_com_control > 0)
                     union
                    select null, -- evrak_id
                           null, -- uyap_id
                           null, -- uyap_file_type
                           to_char(dit.document_code), -- type_code
                           dtd.doc_desc,
                           dit.is_orginal,
                           decode(dit.is_orginal, 0, 'Hayýr', 'Evet'),
                           dit.law_doc_date,
                           lct.arrival_date, -- arrival_date
                           lct.creation_date, -- creation_date
                           'MUHABERAT',
                           lct.description, -- açýklama
                           dit.filenet_id,
                           null, -- mime_type
                           lct.company, -- company
                           dit.department_code, -- department
                           lct.law_file_no,
                           lct.send_from, -- sender
                           0, -- is_attachment
                           null, -- gg_document_id
                           0 as is_privacy
                      from koc_law_base_uyap_rel lbur,
                           alz_law_com_tbl lct,
                           alz_clm_com_docs_index_tbl dit,
                           alz_law_doc_type_def dtd
                     where lbur.law_file_no = p_law_file_no
                       and nvl(lbur.deleted_flag, 'N') = 'N'
                       and lbur.uyap_id = lct.uyap_id
                       and lct.communication_no = dit.communication_no
                       and lct.archive_no = dit.archive_no
                       and nvl(dit.activepassive, 0) != 0
                       and dit.document_code = dtd.code(+)
                       and v_lawyer_control > 0
                     union
                    select null as document_id,
                           null as uyap_id,
                           null as uyap_file_type,
                           to_char(d.document_code) as type_code,
                           ldtd.doc_desc as type,
                           null as is_original,
                           null as is_original_desc,
                           d.document_date as document_date,
                           null as arrival_date,
                           h.creation_date as creation_date,
                           'TAHKIM' as source,
                           h.description as description,
                           d.filenet_id,
                           d.mimetype,
                           nvl(h.company, 'AZS') as company,
                           decode(nvl(h.company, 'AZS'), 'AZS', 'HDT', 'KDT') as department,
                           h.law_file_no as law_file_no,
                           h.sender as sender,
                           0 as is_attachment,
                           null as gg_document_id,
                           0 as is_privacy
                      from koc_law_ext_documents_hdr h,
                           alz_law_ticket lt,
                           koc_law_ext_documents_dtl d,
                           alz_law_doc_type_def ldtd
                     where h.header_id = lt.header_id(+)
                       and p_law_file_no = nvl(lt.lawfile_no, h.law_file_no)
                       and h.header_id = d.header_id
                       and d.document_code = ldtd.code(+)
                       and d.filenet_id <> 'NO_DOCUMENT'
                       and v_lawyer_control > 0
                )
              order by is_attachment, creation_date desc;

        end if;

        return v_list;
    end get_law_documents_list;

    procedure save_law_document(p_type in varchar2,
                                p_user_name in varchar2,
                                p_process_results out customer.process_result_table,
                                p_create_ticket_id out number,
                                p_law_file_no in varchar2 default null,
                                p_ticket_id in number default null,
                                p_doc_list in law_documents_tbl default null,
                                p_com in law_com_tbl default null,
                                p_com_party in law_com_party_tbl default null,
                                p_com_reference in law_com_reference_tbl default null,
                                p_com_doc_list in law_com_doc_tbl default null,
                                p_ext_rec in law_ext_documents_hdr_typ default null)
    is
        v_error_msg varchar2(1000);
        v_company_name varchar2(30);
        v_header_id number;
        v_count number;
        v_flag varchar2(250);
        v_department varchar2(20);
        v_ticket_type number;

        cursor c_doc
        is

        select *
          from table(p_doc_list);

        cursor c_com_doc is
        select a.archive_no,
               a.communication_no,
               a.document_name,
               a.document_code,
               (
                 select count(*)
                   from alz_clm_com_docs_index_tbl
                  where communication_no = a.communication_no
                    and archive_no = a.archive_no
                    and document_code = a.document_code
               ) + row_number() over (partition by a.archive_no, a.communication_no, a.document_code order by a.archive_no, a.communication_no, a.document_code) as order_no,
               a.department_code,
               a.is_copy,
               a.filenet_id,
               a.doc_date
          from table(p_com_doc_list) a
         order by a.doc_date;

        cursor c_company_name(v_ticket_id number)
        is
        select sirket_adi
          from alz_law_ticket
         where ticket_id = v_ticket_id;

    begin
        if p_user_name is null then
            v_error_msg := 'Kullanýcý bilgisi boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAW_DOCUMENT',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                p_process_results
            );
            return;
        end if;

        if p_type = 'MUHABERAT' then
            --Muhaberat bilgileri kontrolü
            begin
                if p_com.count = 0 then
                    rollback;
                    v_error_msg := 'Muhaberat genel bilgileri boþ olamaz.';

                    process_result(
                        3, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                if nvl(p_com(1).communication_no, 0) = 0 or nvl(p_com(1).archive_no, 0) = 0 then
                    rollback;
                    v_error_msg := 'Ýcmal No ve Muhaberat No 0 olamaz!';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;
            exception when others then
                rollback;
                v_error_msg := 'Muhaberat genel bilgileri boþ olamaz.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end;

            if p_com.count > 1 then
                rollback;
                v_error_msg := 'Muhaberat genel bilgileri birden fazla olamaz.';

                process_result(
                    6, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            --Evrak bilgileri kontrolü
            begin
                if p_com_doc_list.count = 0 then
                    rollback;
                    v_error_msg := 'Evrak bilgileri boþ olamaz.';

                    process_result(
                        7, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;
            exception when others then
                rollback;
                v_error_msg := 'Evrak bilgileri boþ olamaz.';

                process_result(
                    8, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end;

            --Muhaberat genel bilgiler
            begin
                select 1
                  into v_count
                  from alz_law_com_tbl
                 where communication_no = p_com(1).communication_no
                   and archive_no = p_com(1).archive_no;

            exception when no_data_found then

                insert into alz_law_com_tbl
                (
                    communication_no,
                    archive_no,
                    law_court_no,
                    law_court_type,
                    court_file_no,
                    law_file_no,
                    arrival_date,
                    send_from,
                    company,
                    description,
                    barcode_no,
                    folder_no,
                    department,
                    uyap_id,
                    created_by,
                    creation_date
                )
                select communication_no,
                       archive_no,
                       law_court_no,
                       law_court_type,
                       court_file_no,
                       law_file_no,
                       arrival_date,
                       send_from,
                       company,
                       description,
                       barcode_no,
                       folder_no,
                       department,
                       uyap_id,
                       P_USER_NAME,
                       SYSDATE
                  from table(p_com);

                --Muhaberat Taraf bilgileri
                insert into alz_law_com_party_tbl
                (
                    communication_no,
                    party_type,
                    tax_number,
                    full_name,
                    created_by,
                    creation_date
                )
                select communication_no,
                       party_type,
                       tax_number,
                       full_name,
                       P_USER_NAME,
                       SYSDATE
                  from table(p_com_party);

                --Muhaberat Taraf bilgileri
                insert into alz_law_com_reference_tbl
                (
                    communication_no,
                    policy_reference,
                    ext_reference,
                    created_by,
                    creation_date
                )
                select communication_no,
                       policy_reference,
                       ext_reference,
                       P_USER_NAME,
                       SYSDATE
                  from table(p_com_reference);

            when others then
                rollback;
                v_error_msg := 'Muhaberat Genel Bilgileri bulunurken hata oldu: '||substr(sqlerrm, 1, 950);

                process_result(
                    9, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end;

--            begin
--                TMP_LOG('ALZ_LITIGATION_UTILS', 'SAVE_LAW_DOCUMENT', 'law_court_no: '||p_com(1).law_court_no);
--            exception when others then
--                null;
--            end;

            --Muhaberat Dosya bilgileri
            for rec_doc in c_com_doc loop
                begin
                    insert into alz_clm_com_docs_index_tbl(
                        archive_no,
                        communication_no,
                        explanation,
                        ext_reference,
                        document_code,
                        order_no,
                        department_code,
                        is_scanned,
                        is_orginal,
                        filenet_id,
                        law_doc_date,
                        comm_user_name,
                        activepassive,
                        index_date
                    )
                    values(
                        rec_doc.archive_no,
                        rec_doc.communication_no,
                        rec_doc.document_name,
                        'N', --ext_reference
                        rec_doc.document_code,
                        rec_doc.order_no, --order_no
                        rec_doc.department_code,
                        DECODE(rec_doc.is_copy, 1, 1, 0), --is_scanned
                        DECODE(rec_doc.is_copy, 1, 0, 1), --is_orginal
                        rec_doc.filenet_id,
                        rec_doc.doc_date,
                        p_user_name,
                        1,
                        sysdate
                    );

                    --Sadece Muhaberat grubundaki kullanýcýlar tarama yaptýðýnda iþ oluþturulacak
                    select count(1)
                      into v_count
                      from alz_law_group_user_rel
                     where group_code = 'LMMUNAUZ'
                       and username = p_user_name;

--                    TMP_LOG('ALZ_LITIGATION_UTILS', 'SAVE_LAW_DOCUMENT', 'filenet_id: '||rec_doc.filenet_id);
--
--                    TMP_LOG('ALZ_LITIGATION_UTILS', 'SAVE_LAW_DOCUMENT', 'communication_no: '||rec_doc.communication_no);

                    if v_count > 0 then
                        alz_law_ticket_process_utils.create_ticket(
                                                            p_source_type       => 'MUHABERAT',
                                                            p_assigned_user     => null,
                                                            p_param_id          => rec_doc.filenet_id,
                                                            p_deadline          => null,
                                                            p_subject           => null,
                                                            p_create_user       => p_user_name,
                                                            p_arrival_date      => p_com(1).arrival_date,
                                                            p_department        => rec_doc.department_code,
                                                            p_new_ticket_id     => p_create_ticket_id,
                                                            p_process_results   => p_process_results);

                        begin
                            v_count := p_process_results.count;
                        exception when others then
                            v_count := 0;
                        end;

                        if v_count > 0 then
                            if p_process_results(1).type = -1 then
                                rollback;
                                v_error_msg := 'Ýþ listesine kayýt atýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;

                                process_result(
                                    9, --p_process_no
                                    0,
                                    9,
                                    -1,
                                    'SAVE_LAW_DOCUMENT',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                                    p_process_results
                                );
                                return;
                            end if;
                        end if;

                        begin
                            select ticket_type_id
                              into v_ticket_type
                              from alz_law_ticket_process
                             where ticket_id = p_create_ticket_id;

                            if v_ticket_type != 2 then
                                rollback;
                                v_error_msg := 'Ýþ oluþmayan evrak türü seçtiðiniz için bu evrak kaydedilemedi!';

                                process_result(
                                    10, --p_process_no
                                    0,
                                    9,
                                    -1,
                                    'SAVE_LAW_DOCUMENT',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                                    p_process_results
                                );
                                return;
                            end if;

                        exception when others then
                            rollback;
                            v_error_msg := 'Ýþ oluþmayan evrak türü seçtiðiniz için bu evrak kaydedilemedi!';

                            process_result(
                                11, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DOCUMENT',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                                p_process_results
                            );
                            return;
                        end;
                    end if;

                exception when others then
                    rollback;
                    v_error_msg := 'Evrak bilgileri kaydedilirken hata oldu: '||substr(sqlerrm, 1, 900);

                    process_result(
                        10, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end;

            end loop;

            --java tarafýndaki iþlerin yarým kalmamasý için commit prosedürün çaðrýldýðý yerde yapýlacak
        elsif p_type = 'DOSYA' then
            if p_law_file_no is null then
                v_error_msg := 'Hukuk Dosya No boþ olamaz.';

                process_result(
                    11, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            if p_doc_list is null or p_doc_list.count = 0 then
                v_error_msg := 'Evrak listesi boþ olamaz.';

                process_result(
                    12, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            for rec_doc in c_doc loop
                if rec_doc.filenet_id is null then
                    v_error_msg := 'Evrak bilgileri boþ olamaz.';

                    process_result(
                        13, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                insert into koc_law_base_documents
                (
                    law_file_no,
                    filenet_id,
                    sender,
                    document_code,
                    document_date,
                    is_original,
                    mimetype,
                    is_privacy,
                    created_by
                )
                values
                (
                    p_law_file_no,
                    rec_doc.filenet_id,
                    rec_doc.sender,
                    rec_doc.type_code,
                    rec_doc.document_date,
                    nvl(rec_doc.is_original, 0),
                    rec_doc.mimetype,
                    rec_doc.is_privacy,
                    p_user_name
                );
            end loop;

        elsif p_type = 'TICKET' then

            if p_ticket_id is null then
                v_error_msg := 'ticket_id boþ olamaz.';

                process_result(
                    14, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;

            end if;

            if p_doc_list is null or p_doc_list.count = 0 then
                v_error_msg := 'Evrak listesi boþ olamaz.';

                process_result(
                    15, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            open c_company_name(p_ticket_id);
            fetch c_company_name into v_company_name;
            close c_company_name;

            for rec_doc in c_doc loop
                if rec_doc.filenet_id is null then
                    v_error_msg := 'Evrak bilgileri boþ olamaz.';

                    process_result(
                        16, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                insert into alz_law_ticket_documents
                (
                    ticket_id,
                    filenet_id,
                    sender,
                    company_name,
                    document_code,
                    document_date,
                    is_original,
                    is_scanned,
                    mimetype,
                    created_by
                )
                values
                (
                    p_ticket_id,
                    rec_doc.filenet_id,
                    rec_doc.sender,
                    v_company_name,
                    rec_doc.type_code,
                    sysdate,
                    nvl(rec_doc.is_original, 0),
                    decode(nvl(rec_doc.is_original, 0), 0, 1, 0),
                    rec_doc.mimetype,
                    p_user_name
                );
            end loop;

        elsif p_type = 'TAHKIM' then

            if p_ext_rec.description is null then
                v_error_msg := 'Tahkim bilgileri boþ olamaz.';

                process_result(
                    17, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            begin
                select customer.law_ext_documents_hdr_seq.nextval
                  into v_header_id
                  from dual;

                insert into koc_law_ext_documents_hdr
                (
                    header_id,
                    law_file_no,
                    court_file_no,
                    description,
                    sender,
                    company,
                    created_by
                )
                values
                (
                    v_header_id,
                    p_law_file_no,
                    p_ext_rec.court_file_no,
                    p_ext_rec.description,
                    p_ext_rec.sender,
                    nvl(p_ext_rec.company, 'AZS'),
                    p_user_name
                );

                for rec_doc in c_doc loop
                    if rec_doc.filenet_id is null then
                        rollback;
                        v_error_msg := 'Evrak bilgileri boþ olamaz.';

                        process_result(
                            19, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DOCUMENT',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                            p_process_results
                        );
                        return;
                    end if;

                    insert into koc_law_ext_documents_dtl
                    (
                        header_id,
                        detail_id,
                        filenet_id,
                        mimetype,
                        document_code,
                        document_date,
                        is_original,
                        created_by
                    )
                    values
                    (
                        v_header_id,
                        customer.law_ext_documents_dtl_seq.nextval,
                        rec_doc.filenet_id,
                        rec_doc.mimetype,
                        rec_doc.type_code,
                        rec_doc.document_date,
                        nvl(rec_doc.is_original, 0),
                        p_user_name
                    );
                end loop;

                if nvl(p_ext_rec.company, 'AZS') =  'AZS' then
                    v_department := 'HDT';
                else
                    v_department := 'KDT';
                end if;

                alz_law_ticket_process_utils.create_ticket(
                                                    p_source_type       => 'TAHKIM',
                                                    p_assigned_user     => null,
                                                    p_param_id          => v_header_id,
                                                    p_deadline          => null,
                                                    p_subject           => p_ext_rec.description,
                                                    p_create_user       => p_user_name,
                                                    p_arrival_date      => sysdate,
                                                    p_department        => v_department,
                                                    p_new_ticket_id     => p_create_ticket_id,
                                                    p_process_results   => p_process_results);

                begin
                    v_count := p_process_results.count;
                exception when others then
                    v_count := 0;
                end;

                if v_count > 0 then
                    if p_process_results(1).type = -1 then
                        rollback;
                        v_error_msg := 'Ýþ listesine Tahkim kaydý atýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;

                        process_result(
                            19, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DOCUMENT',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                            p_process_results
                        );
                        return;
                    end if;
                end if;

                /*
                if p_create_ticket_id > 0 then

                    insert into alz_law_ticket_note
                    (
                        id,
                        ticket_id,
                        note,
                        internal,
                        create_user,
                        create_date
                    )
                    values
                    (
                        alz_law_ticket_detail_seq.nextval,
                        p_create_ticket_id,
                        p_ext_rec.mail_body,
                        0,
                        p_user_name,
                        sysdate
                    );
                end if;
                */

            exception when others then
                rollback;
                v_error_msg := 'Tahkim Evrak bilgileri kaydedilirken hata oldu: '||substr(sqlerrm, 1, 900);

                process_result(
                    20, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end;

        else

            v_error_msg := 'Yanlýþ tipte iþlem.';

            process_result(
                21, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAW_DOCUMENT',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
                p_process_results
            );
            return;

        end if;

    exception when others then
        rollback;
        v_error_msg := 'Evrak kaydedilirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'SAVE_LAW_DOCUMENT',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_LAW_DOCUMENT',
            p_process_results
        );
        return;
    end save_law_document;

    procedure modify_law_document(p_type in varchar2,
                                  p_modify_type in varchar2,
                                  p_filenet_id in varchar2,
                                  p_user_name in varchar2,
                                  p_process_results out customer.process_result_table,
                                  p_law_file_no in varchar2 default null,
                                  p_com_doc in law_com_doc_typ default null,
                                  p_ticket_id in varchar2 default null)
    is
        v_error_msg varchar2(1000);
        v_count number;
        v_error_count number;
        v_open_count number := 0;

    begin

        if p_user_name is null then
            v_error_msg := 'Kullanýcý bilgisi boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_DOCUMENT',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                p_process_results
            );
            return;
        end if;

        if not(p_type = 'MUHABERAT' and p_modify_type = 'UPDATE') then
            select count(1)
              into v_count
              from alz_law_ticket a,
                   alz_law_ticket_process b
             where a.filenet_id = p_com_doc.filenet_id
               and a.ticket_id = b.ticket_id
               and b.close_date is null;

            if v_count > 0 then
                v_error_msg := 'Ýþ oluþturan evraklarý güncelleyemez ya da silemezsiniz.';

                process_result(
                    2, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;
        end if;

        if p_type = 'MUHABERAT' then

            if p_modify_type = 'DELETE' then

                select count(1)
                  into v_count
                  from alz_law_com_tbl a,
                       alz_clm_com_docs_index_tbl b,
                       koc_auth_user_role_rel c
                 where a.archive_no = b.archive_no
                   and a.communication_no = b.communication_no
                   and b.filenet_id = p_com_doc.filenet_id
                   and a.created_by = c.username
                   and c.role_code = 'LMRMH';

                if v_count > 0 then
                    v_error_msg := 'Muhaberat departmanýnýn yüklediði evraklarý silemezsiniz.';

                    process_result(
                        2, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                update alz_clm_com_docs_index_tbl
                   set activepassive = 0
                 where filenet_id = p_com_doc.filenet_id
                   and nvl(activepassive, 0) != 0;

                if sql%rowcount = 0 then
                    v_error_msg := 'Silinecek evrak kaydý bulunamadý.';

                    process_result(
                        2, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;

                elsif sql%rowcount > 1 then
                    v_error_msg := 'Silinecek evrakýn birden fazla kaydý olduðu için silinemez.';

                    process_result(
                        3, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

            elsif p_modify_type = 'UPDATE' then

                select count(1)
                  into v_open_count
                  from alz_law_com_tbl a,
                       alz_clm_com_docs_index_tbl b,
                       alz_law_ticket c,
                       alz_law_ticket_process d
                 where a.archive_no = b.archive_no
                   and a.communication_no = b.communication_no
                   and b.filenet_id = p_com_doc.filenet_id
                   and b.filenet_id = c.filenet_id
                   and c.ticket_id = d.ticket_id
                   and d.close_date is null;

                if v_open_count > 0 and
                   p_ticket_id is null
                then
                    v_error_msg := 'Muhaberat departmanýnýn yüklediði açýk iþi olan evraklarý güncelleyemezsiniz.';

                    process_result(
                        2, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                if p_com_doc is null then
                    v_error_msg := 'Evrak bilgisi boþ olamaz.';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                update alz_clm_com_docs_index_tbl x
                   set document_code = p_com_doc.document_code,
                       order_no = (select count(*)+1 from alz_clm_com_docs_index_tbl where archive_no = x.archive_no and communication_no = x.communication_no and document_code = p_com_doc.document_code and filenet_id != x.filenet_id)
                 where filenet_id = p_com_doc.filenet_id
                   and nvl(activepassive, 0) != 0;

                if sql%rowcount = 0 then
                    v_error_msg := 'Güncellenecek evrak kaydý bulunamadý.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                elsif sql%rowcount > 1 then
                    v_error_msg := 'Güncellenecek evrakýn birden fazla kaydý olduðu için güncellenemez.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                if v_open_count > 0 then
                    update alz_law_ticket
                       set code = p_com_doc.document_code
                     where ticket_id = p_ticket_id;

                    -- reassign_ticket
                    reassign_related_tickets(p_ticket_id => p_ticket_id,
                                             p_user_name => p_user_name,
                                             p_ref_code => 'DOC_TYPE_CHANGE',
                                             p_operation_code=>'UPDATE_DOC_TYPE',
                                             p_process_results => p_process_results);

                    if p_process_results is not null then
                        select count(1)
                          into v_error_count
                          from table(p_process_results)
                         where type = -1;

                        if v_error_count > 0 then
                            rollback;
                            return;
                        end if;
                    end if;
                    -- reassign_ticket
                end if;

            else

                v_error_msg := 'Tanýmsýz iþlem tipi.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;

            end if;

        elsif p_type = 'TAHKIM' then

            if p_modify_type = 'UPDATE' then
                if p_com_doc is null then
                    v_error_msg := 'Evrak bilgisi boþ olamaz.';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                if p_com_doc.document_code = 1011 then -- UYAP Mail Yazýþmasý
                    v_error_msg := 'Tahkim dokümanlarýný Mail Yazýþmasý türüne güncelleyemezsiniz.';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                if p_ticket_id is null then
                    v_error_msg := 'Tahkim dokümanlarý sadece Ýþ Listesinden güncellenebilir.';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                select count(1)
                  into v_count
                  from alz_law_ticket al,
                       koc_law_ext_documents_dtl kle
                 where al.ticket_id = p_ticket_id
                   and al.header_id = kle.header_id
                   and kle.filenet_id = p_filenet_id
                   and kle.document_code = 1011;

                if v_count > 0 then
                    v_error_msg := 'Tahkim Mail Yazýþmasý evrak türünü güncelleyemezsiniz.';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                update alz_law_ticket
                   set code = p_com_doc.document_code
                 where ticket_id = p_ticket_id;

                update koc_law_ext_documents_dtl
                   set document_code = p_com_doc.document_code
                 where header_id = (select header_id from alz_law_ticket where ticket_id = p_ticket_id and header_id is not null)
                   and document_code <> 1011;

                if sql%rowcount = 0 then
                    v_error_msg := 'Güncellenecek tahkim evrak kaydý bulunamadý.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                -- reassign_ticket
                reassign_related_tickets(p_ticket_id => p_ticket_id,
                                         p_user_name => p_user_name,
                                         p_ref_code => 'DOC_TYPE_CHANGE_THK',
                                         p_operation_code => 'UPDATE_DOC_TYPE',
                                         p_process_results => p_process_results);

                if p_process_results is not null then
                    select count(1)
                      into v_error_count
                      from table(p_process_results)
                     where type = -1;

                    if v_error_count > 0 then
                        rollback;
                        return;
                    end if;
                end if;
                -- reassign_ticket
            else

                v_error_msg := 'Tanýmsýz iþlem tipi.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;

            end if;

        elsif p_type = 'TICKET' then

            if p_modify_type = 'DELETE' then

                delete from alz_law_ticket_documents
                 where filenet_id = p_com_doc.filenet_id;

            elsif p_modify_type = 'UPDATE' then
                if p_com_doc is null then
                    v_error_msg := 'Evrak bilgisi boþ olamaz.';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;

                update alz_law_ticket_documents
                   set document_code = p_com_doc.document_code
                 where filenet_id = p_com_doc.filenet_id;

                if sql%rowcount = 0 then
                    v_error_msg := 'Güncellenecek evrak kaydý bulunamadý.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                elsif sql%rowcount > 1 then
                    v_error_msg := 'Güncellenecek evrakýn birden fazla kaydý olduðu için güncellenemez.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'MODIFY_LAW_DOCUMENT',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                        p_process_results
                    );
                    return;
                end if;
            else

                v_error_msg := 'Tanýmsýz iþlem tipi.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

        elsif p_type = 'DOSYA' then

            if p_law_file_no is null then
                v_error_msg := 'Hukuk Dosya No boþ olamaz.';

                process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            if p_user_name is null then
                v_error_msg := 'Kullanýcý bilgisi boþ olamaz.';

                process_result(
                    2, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            if p_filenet_id is null then
                v_error_msg := 'Evrak bilgisi boþ olamaz.';

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;
            end if;

            update koc_law_base_documents
               set deleted_flag = 'Y',
                   last_update_date = sysdate,
                   last_updated_by = p_user_name
             where law_file_no = p_law_file_no
               and filenet_id = p_filenet_id;

            if sql%rowcount = 0 then
                v_error_msg := 'Silinecek evrak kaydý bulunamadý.';

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_DOCUMENT',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                    p_process_results
                );
                return;

            end if;
        else

            v_error_msg := 'Yanlýþ tipte iþlem.';

            process_result(
                15, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_DOCUMENT',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
                p_process_results
            );
            return;
        end if;
    exception when others then

        v_error_msg := 'Evrak silinirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'MODIFY_LAW_DOCUMENT',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.MODIFY_LAW_DOCUMENT',
            p_process_results
        );
        return;
    end modify_law_document;

    function get_uyap_law_file_list(p_uyap_id number) return varchar2
    is
        v_return varchar2(4000);
    begin
        select substr(listagg(law_file_no, ', ') within group (order by law_file_no desc), 1, 4000)
          into v_return
          from
          (
            select law_file_no
              from koc_law_base_uyap_rel
             where uyap_id = p_uyap_id
               and nvl(deleted_flag, 'N') = 'N'
             union
            select distinct law_file_no
              from alz_uyap_dosya_listesi audl,
                   koc_law_base_courts lbc
             where audl.dosya_id = p_uyap_id
               and audl.guncel_versiyon = 'Y'
               and audl.birim_id = lbc.court_id
               and audl.dosya_no = lbc.court_file_no
               and lbc.court_type = 'U'
          );

        return v_return;
    end get_uyap_law_file_list;

    --Rücu Sevk ekranýndan Hukuk departmanýna yapýlan sevk iþlemi
    procedure send_file(p_ext_reference in varchar2,
                        p_name in varchar2,
                        p_user_name in varchar2, --OPUS user
                        p_dest_supp_type in varchar2,
                        p_ticket_id out number,
                        p_error_msg out varchar2)
    is
        v_count number;
        v_process_results customer.process_result_table;
        v_sf_type varchar2(5);
        v_total_recourse_amount number;
        v_dest_supp_type varchar2(5) := p_dest_supp_type;

    begin

        --TODO melih KDT için BRE eklemesine kadar yapýlacak
        begin

            select crd.sf_type
              into v_sf_type
              from koc_clm_recourse_detail crd
             where ext_reference = p_ext_reference;

        exception when others then
            v_sf_type := null;
        end;

        begin
            select nvl(crd.total_recourse_amount, 0) * nvl(koc_curr_utils.retrieve_effective_parity(cri.swf_code, base_swift_code, trunc(sysdate), 36), 0)
              into v_total_recourse_amount
              from koc_clm_recourse_detail crd,
                   koc_clm_recourse_insurance cri
             where ext_reference = p_ext_reference
               and crd.claim_id = cri.claim_id
               and crd.sf_no = cri.sf_no;

        exception when others then
            v_total_recourse_amount := 0;
        end;

        if v_sf_type = 'R' or-- saðlýk
           nvl(v_total_recourse_amount, 0) > 1000000
        then
            v_dest_supp_type := 'KDT';
        end if;

        begin
            alz_law_ticket_process_utils.create_ticket(
                p_source_type       => 'RUCU',
                p_assigned_user     => null,
                p_param_id          => p_ext_reference,
                p_deadline          => null,
                p_subject           => p_name,
                p_create_user       => p_user_name,
                p_arrival_date      => sysdate,
                p_department        => v_dest_supp_type,
                p_new_ticket_id     => p_ticket_id,
                p_process_results   => v_process_results
            );

            begin
                v_count := v_process_results.count;
            exception when others then
                v_count := 0;
            end;

            if v_count > 0 then
                if v_process_results(1).type = -1 then
                    p_error_msg := 'Ýþ oluþuturulurken hata oldu:'||chr(10)||v_process_results(1).reason;
                    return;
                end if;
            end if;

            if nvl(p_ticket_id, 0) <= 0 then
                p_error_msg := 'Ýþ oluþturulamamýþtýr.';
                return;
            end if;

        exception when others then
            p_error_msg := 'Ýþ listesi paketini çaðýrýken hata oldu: '||substr(sqlerrm, 1, 900);
            return;
        end;

    end send_file;

    --Rücu Sevk ekranýndan Rücu departmanýna yapýlan sevk(iade) iþlemi
    procedure reject_file(p_ext_reference in varchar2,
                          p_user_name in varchar2,
                          p_source_supp_type in varchar2,
                          p_reason_code in number,
                          p_process_results out customer.process_result_table)
    is
        v_claim_id number;
        v_sf_no number;
        v_file_desc varchar2(1000);
        v_user_name varchar2(30);

        v_dest_sub_type varchar2(10) := 'RUCU';
        v_send_date date := sysdate;
        v_error_msg varchar2(1000);
        v_sqlerrm varchar2(1000);

        v_doubtful number;
        max_dest_supp_type varchar2(10);
        tmp_supp_type varchar2(10);
        if_end_date_filled number;
        v_max_order_no number;
        v_clm_line_id number;

        v_ass_id_seq number(10);
        v_supp_id number(10);
        v_source_supp_name varchar2(30);
        v_approval_type number;
        v_approval_date date;
        v_approval_explanation varchar2(100);
        v_status_id number;

        cursor c_supp_id(p_opus_username varchar2) is
        select b.supp_id
          from sec_v_system_users a,
               clm_suppliers b
         where a.customer_partner_id = b.part_id
           and a.oracle_username = p_opus_username
           and b.supp_type = v_dest_sub_type;

        cursor c_source_supp_name is
        select d.long_name
         from clm_supp_types c,
              inf_v_lang_trans_api d
        where c.supp_type = p_source_supp_type
          and d.short_code = 'SUP_TYPES'
          and c.desc_int_id = d.desc_int_id;

        cursor c_max_dest(p_claim_id number, p_sf_no number) is
        select destination_supp_type
          from koc_clm_examination_trans
         where claim_id = p_claim_id
           and sf_no = p_sf_no
         order by exm_order_no desc;

        cursor c_is_file_on(p_max_dest_supp_type varchar2, p_opus_username varchar2) is
        select supp_type
          from sec_v_system_users a,
               clm_suppliers b
         where a.customer_partner_id = b.part_id
           and a.oracle_username = p_opus_username
           and b.supp_type = p_max_dest_supp_type;

        cursor c_if_examined(p_claim_id number, p_sf_no number) is
        select 1
          from koc_clm_examination_trans
         where claim_id = p_claim_id
           and sf_no = p_sf_no;

        cursor c_max_order_no(p_claim_id number, p_sf_no number) is
        select nvl(max(exm_order_no),0)+1
          from koc_clm_examination_trans
         where claim_id = p_claim_id
           and sf_no = p_sf_no;

        cursor c_clm_line_id(p_claim_id number) is
        select clm_line_id
          from clm_bases
         where claim_id= p_claim_id;

    begin
        begin
            select crd.claim_id,
                   crd.sf_no
              into v_claim_id,
                   v_sf_no
              from koc_clm_recourse_detail crd
             where crd.ext_reference = p_ext_reference;

        exception when others then
            select replace(message_text, '*1', 'Hasar Dosya Numarasý')
              into v_error_msg
              from opus_core.error_text
             where em_error_mess_id = 160197
               and language = 'TR';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );

            return;
        end;

        begin
            select reference_opus_user
              into v_user_name
              from web_sec_system_users
             where user_name = p_user_name
               and reference_opus_user is not null;
        exception when others then
            v_error_msg := 'OPUS kullanýcý adý bulunamadý. AZNET kullanýcý tanýmýný kontrol ediniz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );
            return;
        end;

        --Sadece Hasar Dava servisindeki dosyalar iade edilebilir
        if nvl(p_source_supp_type, 'X') != 'HDT' then
            v_error_msg := 'Sadece Hasar Dava servisindeki dosyalarý iade edilebilirsiniz.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );
            return;
        end if;

        --Sadece Rücu Servisine iade edebilebilir
        if nvl(v_dest_sub_type, 'X') != 'RUCU' then
            v_error_msg := 'Sadece Rücu Servisine iade edilebilirsiniz.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );
            return;
        end if;

        begin
            select b.doubtful_debt
              into v_doubtful
              from koc_law_bases b,
                   koc_law_bases_detail d,
                   clm_subfiles t,
                   koc_clm_recourse_detail r
             where b.law_file_no = d.law_file_no
               and b.doubtful_debt = 1
               and d.claim_id = t.claim_id
               and d.sf_no = t.sf_no
               and t.ext_reference = r.clm_ext_reference
               and r.ext_reference = p_ext_reference;

        exception when others then --Kayýt bulunamadýysa hukukta þüpheli alacak deðil sorun yok
            v_doubtful := 0;
        end;

        --Þüpheli alacak kontrolü
        if v_doubtful = 1 and p_source_supp_type = 'HDT' and v_dest_sub_type = 'RUCU' then --sadece müdür yetkisi ile sevk yapilabiliyor.
            if v_user_name not in ('HCAVDAR','HCAVDAR_RUCU') then
                v_error_msg := 'Hukukta Þüpheli alacak olmuþ dosyalarý Rücu Servisine sevk yapamazsýnýz.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE',
                    p_process_results
                );
                return;
            end if;
        end if;

        open c_max_dest(v_claim_id, v_sf_no);
        fetch c_max_dest into max_dest_supp_type;

        if c_max_dest%found then
            --Dosya servis kontrolü
            if nvl(max_dest_supp_type, 'X') != 'HDT' then
                v_error_msg := 'Sadece Hasar Dava servisindeki dosyalarý iade edilebilirsiniz.';

                process_result(
                    6, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE',
                    p_process_results
                );
                return;
            end if;

            open c_is_file_on(max_dest_supp_type, v_user_name);
            fetch c_is_file_on into tmp_supp_type;

            if c_is_file_on%found then -- dosya ilgili birimde
                open c_if_examined(v_claim_id, v_sf_no);
                fetch c_if_examined into if_end_date_filled;

                if c_if_examined%notfound then -- dosya ilgili birimde ama incelenmemiþ
                    select message_text
                      into v_error_msg
                      from opus_core.error_text
                     where em_error_mess_id = 160223
                       and language = 'TR';

                    process_result(
                        7, --p_process_no
                        0,
                        9,
                        -1,
                        'REJECT_FILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.REJECT_FILE',
                        p_process_results
                    );
                    return;
                end if;

                close c_if_examined;
            else -- dosya ilgili birimde deðil
                select message_text
                  into v_error_msg
                  from opus_core.error_text
                 where em_error_mess_id = 160224
                   and language = 'TR';

                process_result(
                    8, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE',
                    p_process_results
                );
                return;
            end if;

            close c_is_file_on;
        end if;
        close c_max_dest;

        open c_clm_line_id(v_claim_id);
        fetch c_clm_line_id into v_clm_line_id;
        close c_clm_line_id;

        koc_clm_utils.insert_claim_status
            (v_claim_id,
             v_clm_line_id,
             'SUBFILE',
             'INCL',
             pme_public.opus_date,
             v_user_name,
             v_sf_no,
             null,
             inf_poplist.screen_value('SUPP_TYPES', p_source_supp_type, 'TR')||'-'||
             inf_poplist.screen_value('SUPP_TYPES', v_dest_sub_type, 'TR')||
             ' sevkedildi.'
        );

        open c_max_order_no(v_claim_id, v_sf_no);
        fetch c_max_order_no into v_max_order_no;
        close c_max_order_no;

        insert into koc_clm_examination_trans(
            claim_id,
            sf_no,
            exm_order_no,
            source_supp_type,
            destination_supp_type,
            send_date
        )
        values(
            v_claim_id,
            v_sf_no,
            v_max_order_no,
            p_source_supp_type,
            v_dest_sub_type,
            v_send_date
        );

        --post_insert iþlemleri
        begin
            select clm_ass_id_seq.nextval
              into v_ass_id_seq
              from dual;
        exception when others then
            rollback;
            v_error_msg := 'clm_ass_id bulunurken hata oldu: '||substr(sqlerrm, 1, 900);

            process_result(
                9, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );
            return;
        end;

        open c_supp_id(v_user_name);
        fetch c_supp_id into v_supp_id;
        close c_supp_id;

        begin
            insert into clm_assignments(
                ass_id,
                org_unit,
                start_date,
                org_authorised,
                override_limit,
                assignor_username,
                claim_id,
                sf_group_no,
                sf_no,
                supp_id,
                end_date,
                assignee_username
            )
            values(
                v_ass_id_seq,
                null,
                v_send_date,
                null,
                null,
                v_user_name,
                v_claim_id,
                null,
                v_sf_no,
                v_supp_id, -- eskiden 34 olan yer
                null,
                null
            );

        exception when others then
            rollback;
            v_sqlerrm := substr(sqlerrm, 1, 1000);

            select replace(replace(message_text, '*1', 'CLM_ASSIGNMENTS'), '*2', v_sqlerrm)
              into v_error_msg
              from opus_core.error_text
             where em_error_mess_id = 160217
               and language = 'TR';

            process_result(
                10, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );
            return;
        end;

        begin
            if v_dest_sub_type not in ('INTK','3TNK') then
                v_approval_type := 4;
                v_approval_date := trunc(sysdate);
                v_approval_explanation := 'dosya sevkedildi.';
            else
                v_approval_type := null;
                v_approval_date := null;
                v_approval_explanation := null;
            end if;

            insert into koc_clm_assignments_ext(
                ass_id,
                ass_ip_order_no,
                ass_ip_no,
                approval_type,
                approval_date,
                explanation,
                examination_type,
                exm_order_no
            )
            values(
                v_ass_id_seq,
                1,
                1,
                v_approval_type,
                v_approval_date,
                v_approval_explanation,
                v_dest_sub_type,
                v_max_order_no
            );

            if v_dest_sub_type != 'INTK' then

                open c_source_supp_name;
                fetch c_source_supp_name into v_source_supp_name;
                close c_source_supp_name;

                koc_clm_utils.insert_claim_status(
                    v_claim_id,
                    v_clm_line_id,
                    'SUBFILE',
                    'INCL',
                    sysdate,
                    v_user_name,
                    v_sf_no,
                    null ,
                    to_char(sysdate,'dd/mm/yyyy')||', '||v_source_supp_name||', sevkedildi.'
                );
            end if;

        exception when others then
            rollback;
            v_sqlerrm := substr(sqlerrm, 1, 1000);

            select replace(replace(message_text, '*1', 'KOC_CLM_ASSIGNMENTS_EXT'), '*2', v_sqlerrm)
              into v_error_msg
              from opus_core.error_text
             where em_error_mess_id = 160217
               and language = 'TR';

            process_result(
                11, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE',
                p_process_results
            );
            return;
        end;

        --Ýade iþlemleri
        update koc_clm_recourse_detail
           set law_reason = p_reason_code,
               law_status = 2
         where claim_id = v_claim_id
           and sf_no  = v_sf_no;

        --Dava açýlmadýysa yapýlmasý gerekenler
        if nvl(p_reason_code,0) = 2 then
            update koc_clm_recourse_detail
               set recourse_status = 'CLOSED'
             where claim_id = v_claim_id
               and sf_no = v_sf_no;

            select nvl(max(order_no),0)+1
            into v_max_order_no
            from koc_clm_subfile_closed_rel
            where claim_id = v_claim_id
             and sf_no = v_sf_no;

            insert into koc_clm_subfile_closed_rel
            values(
                v_claim_id,
                v_sf_no,
                v_max_order_no,
                5,
                v_user_name,
                sysdate,
                null
            );

            koc_clm_utils.insert_claim_status(
                v_claim_id,
                1,
                'TRANS',
                'FILECLOSE',
                sysdate,
                v_user_name,
                v_sf_no,
                null,
                'Dosya kapatildi',
                v_status_id
            );

            insert into koc_clm_status_history_ext(
                status_id,
                claim_id,
                sf_no,
                clm_status,
                process_date,
                explanation
            )
            values(
                v_status_id,
                v_claim_id,
                v_sf_no,
                'CLOSED',
                sysdate,
                null
            );
        end if;

        --java tarafýndaki iþlerin yarým kalmamasý için commit prosedürün çaðrýldýðý yerde yapýlacak

    end reject_file;

    --Hukuk Departmanýndan Harici Avukatlara yönlendirilen rücu dosyalarý iþlemi
    procedure send_file_to_ext_lawyer(p_ticket_id in number,
                                      p_user_name in varchar2,
                                      p_lawyer_user in varchar2,
                                      p_process_results out customer.process_result_table)

    is
        v_user_name varchar2(30);
        v_count number := 0;
        v_req_count number := 0;
        v_error_msg varchar2(1000);
        v_case_no number;
        v_interest_type varchar2(1);
        v_lawyer_id number;
        v_lawyer_name varchar2(100);
        v_temp varchar2(100);

        cursor c1 is
        select a.ext_reference,
               a.old_ext_reference,
               a.sf_type,
               a.claim_id,
               a.sf_no,
               c.claim_id h_claim_id,
               c.sf_no h_sf_no,
               c.ext_reference h_dosya_no,
               sum(nvl(b.recourse_amount,0)) rucu_tutar,
               b.swf_code,
               a.recourse_date rucu_tarih,
               sum(nvl(koc_clm_recourse.koc_clm_rucu_tahsilat(a.claim_id,a.sf_no,to_date('01/01/1900','DD/MM/YYYY'),last_day(sysdate),b.recourse_type,b.insurance_comp_code,1),0))
               - sum(nvl(koc_clm_recourse.koc_clm_tazminat (a.claim_id,a.sf_no,to_date('01/01/1900','DD/MM/YYYY'),last_day(sysdate),b.recourse_type,b.insurance_comp_code,1),0)) rucu_tahsilat_tutar,
                (
                select max(ticket_date) tazminat_tarih
                  from koc_clm_v_trans t
                 where t.claim_id= c.claim_id
                   and t.sf_no= c.sf_no
                   and t.ticket_date is not null
                   and t.sf_total_type = '11'
                   and t.trans_amt > 0
                ) pdd
          from alz_law_ticket alt1,
               alz_law_ticket alt2,
               koc_clm_recourse_detail a,
               koc_clm_recourse_insurance b,
               clm_subfiles c
         where alt1.ticket_id = p_ticket_id
           and alt1.ticket_id = alt2.parent(+)
           and (
                (alt2.ticket_id is not null and alt2.rucu_file_no = a.ext_reference)
             or (alt2.ticket_id is null and alt1.rucu_file_no = a.ext_reference)
           )
           and nvl(a.law_status,0) = 1
           and a.claim_id = b.claim_id
           and a.sf_no = b.sf_no
           and a.recourse_order_no = b.recourse_order_no
           and a.clm_ext_reference = c.ext_reference
         group by a.ext_reference,
                  a.old_ext_reference,
                  a.sf_type,
                  a.claim_id,
                  a.sf_no,
                  c.claim_id,
                  c.sf_no,
                  c.ext_reference,
                  b.swf_code,
                  a.recourse_date;

    begin

        begin
            select reference_opus_user
              into v_user_name
              from web_sec_system_users
             where user_name = p_user_name
               and reference_opus_user is not null;
        exception when others then
            v_error_msg := 'OPUS kullanýcý adý bulunamadý. AZNET kullanýcý tanýmýný kontrol ediniz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SEND_TO_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                p_process_results
            );
            return;
        end;

        if p_lawyer_user is null then
            v_error_msg := 'Yönlendirilecek Avukat bilgisi boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SEND_TO_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                p_process_results
            );
            return;
        end if;

        begin
            select cs.part_id,
                   substr(koc_clm_utils.partner_name_bul(cs.part_id),1,100)
              into v_lawyer_id,
                   v_lawyer_name
              from koc_clm_suppliers_ext kcse,
                   clm_suppliers cs
             where kcse.web_userid = p_lawyer_user
               and kcse.supp_id = cs.supp_id
               and cs.supp_type = 'AVKT'
               and cs.exp_date is null;
        exception when others then
            v_error_msg := 'Yönlendirilecek Avukat bilgileri bulunamadý.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'SEND_TO_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                p_process_results
            );
            return;
        end;

        select count(1)
          into v_count
          from alz_law_ticket alt1,
               alz_law_ticket alt2
         where alt1.ticket_id = p_ticket_id
           and alt1.ticket_id = alt2.parent(+)
           and (
                (alt2.ticket_id is not null and alt2.rucu_file_no is null)
             or (alt2.ticket_id is null and alt1.rucu_file_no is null)
           );

        if v_count > 0 then
            v_error_msg := 'Harici Avukata yönlendirilecek iþlerin Rücu Dosya Numarasý boþ olmamalýdýr.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'SEND_TO_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                p_process_results
            );
            return;
        end if;

        v_req_count := 0;
        for rec1 in c1 loop

            select count(1)
              into v_count
              from koc_law_ext_bases_detail
             where claim_id = rec1.claim_id
               and sf_no = rec1.sf_no
               and cancel_reason_code is null;

            if v_count > 0 then
                v_error_msg := rec1.ext_reference||' Rücu dosyasý Harici Avukata daha önceden yönlendirilmiþ.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'SEND_TO_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                    p_process_results
                );
                return;
            end if;

            select count(1)
              into v_count
              from koc_clm_examination_trans e
             where e.claim_id = rec1.claim_id
               and e.sf_no = rec1.sf_no
               and e.destination_supp_type ='ARSV'
               and e.exm_order_no = (select max(f.exm_order_no)
                                       from koc_clm_examination_trans f
                                      where f.claim_id = e.claim_id
                                        and f.sf_no = e.sf_no);


            if v_count > 0 then
                v_error_msg := rec1.ext_reference||' Rücu dosyasý Arþive gönderildiði için yönlendirilemez.';

                process_result(
                    6, --p_process_no
                    0,
                    9,
                    -1,
                    'SEND_TO_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                    p_process_results
                );
                return;
            end if;

            --Rücu dosya kontrolleri
            begin
                select d.ext_reference
                  into v_temp
                  from koc_clm_recourse_detail d
                 where d.ext_reference = rec1.ext_reference
                   and d.recourse_status != 'CLOSED'
                   and rownum < 2;

            exception when no_data_found then
                begin
                  select d.ext_reference
                    into v_temp
                    from koc_clm_recourse_detail d
                   where d.clm_ext_reference = rec1.h_dosya_no
                     and d.recourse_status != 'CLOSED'
                     and rownum < 2;

                exception when others then
                    rollback;
                    v_error_msg := rec1.ext_reference||' Rücu dosyasý açýlmamýþ, harici avukata yönlendirilemez.';

                    process_result(
                        7, --p_process_no
                        0,
                        9,
                        -1,
                        'SEND_TO_EXT_LAWYER',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                        p_process_results
                    );
                    return;
                end;

                begin
                    select 1
                      into v_temp
                      from koc_clm_recourse_detail a
                     where a.ext_reference = v_temp
                       and exists
                            (
                                select e.claim_id,e.sf_no
                                  from koc_clm_examination_trans e
                                 where e.claim_id= a.claim_id
                                   and e.sf_no   = a.sf_no
                                   and e.destination_supp_type in ('HDT','HUKK')
                                   and e.exm_order_no = (select max(f.exm_order_no)
                                                           from koc_clm_examination_trans f
                                                          where f.claim_id = e.claim_id
                                                            and f.sf_no = e.sf_no
                                                        )
                            );
                exception when others then
                    rollback;
                    v_error_msg := 'Rücu dosyasý sevk edilmemiþ, harici avukata yönlendirilemez.';

                    process_result(
                        8, --p_process_no
                        0,
                        9,
                        -1,
                        'SEND_TO_EXT_LAWYER',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                        p_process_results
                    );
                    return;
                end;
            end;
            -- rucu tutarý 0 dan kucukse uyar
            if ( rec1.rucu_tutar - rec1.rucu_tahsilat_tutar ) <= 0 then
                rollback;
                v_error_msg := 'Rücu dosyasýnýn dava/icra tutarý 0''dan küçüktür. Bu dosya yönlendirilemez.';

                process_result(
                    8, --p_process_no
                    0,
                    9,
                    -1,
                    'SEND_TO_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                    p_process_results
                );
                return;
            end if;

            if v_case_no is null then
                select koc_law_related_case_seq.nextval
                  into v_case_no
                  from dual;
            end if;

            if  rec1.sf_type not in ('NE','NT','NH') then
                v_interest_type := 'Y';
            else
                v_interest_type := 'A';
            end if;

            insert into koc_law_ext_bases_detail(
                ext_reference,
                old_ext_reference,
                sf_type,
                claim_id,
                sf_no,
                h_claim_id,
                h_sf_no,
                h_dosya_no,
                recourse_amount,
                swift_code,
                recourse_date,
                law_send_date,
                part_id,
                low_name,
                policy_ref,
                user_name,
                process_date,
                durum,
                ext_lawyer_send_date,
                supplier_type,
                related_case_no,
                payment_denounce_date,
                interest_type,
                law_file_type
            )
            values(
                rec1.ext_reference,
                rec1.old_ext_reference,
                rec1.sf_type,
                rec1.claim_id,
                rec1.sf_no,
                rec1.h_claim_id,
                rec1.h_sf_no,
                rec1.h_dosya_no,
                rec1.rucu_tutar - rec1.rucu_tahsilat_tutar,
                rec1.swf_code,
                rec1.rucu_tarih,
                null, -- LAW_SEND_DATE
                v_lawyer_id,
                v_lawyer_name,
                null, -- POLICY_REF,
                v_user_name, --USER_NAME
                pme_public.opus_date, --PROCESS_DATE
                null, -- DURUM
                sysdate, --EXT_LAWYER_SEND_DATE
                'HDT', --SUPPLIER_TYPE
                v_case_no, --RELATED_CASE_NO
                rec1.pdd, --PAYMENT_DENOUNCE_DATE
                v_interest_type,
                'L'
            );

            v_req_count := v_req_count + 1;
        end loop;

        if v_req_count = 0 then
            rollback;
            v_error_msg := 'Avukata yönlendirilecek Rücu dosyasý bilgileri çekilemedi.';

            process_result(
                7, --p_process_no
                0,
                9,
                -1,
                'SEND_TO_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SEND_TO_EXT_LAWYER',
                p_process_results
            );
            return;
        end if;

        --java tarafýndaki iþlerin yarým kalmamasý için commit prosedürün çaðrýldýðý yerde yapýlacak

        --Formda Harici Avukata mail gönderimi yapýlýyor,
        --yeni süreçte iþ listesi üzerinden yönlendirme yapýlacaðý için mail gönderimi yapýlmayacaktýr

    end send_file_to_ext_lawyer;

/* Harici Avukata gönderilen dosyayý geri almak için aþaðýdaki kod kullanýlýyor.
    delete from KOC_LAW_ext_BASES_DETAIL a
     where a.EXT_REFERENCE=:CONTROL.V_RUCU_DOSYA_NO;
*/
    --Harici Avukatlarýn dosya iade iþlemi
    procedure reject_file_by_ext_lawyer(p_ticket_id in number,
                                        p_reason_code in number,
                                        p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_reason_desc varchar2(240);
        v_count number;
        v_source varchar2(30);
        v_law_file_no varchar2(30);
        v_owner varchar2(100);

        cursor c1 is

        select klla.avukat_no,
               klla.dosya_sevk_tarihi,
               klla.dosya_no
          from alz_law_ticket alt1,
               alz_law_ticket alt2,
               alz_law_ticket_process altp,
               koc_clm_suppliers_ext kcse,
               clm_suppliers cs,
               koc_law_v_lawyer_assign klla
         where alt1.ticket_id = p_ticket_id
           and alt1.ticket_id = alt2.parent(+)
           and (
                (alt2.ticket_id is not null and alt2.ticket_id = altp.ticket_id)
             or (alt2.ticket_id is null and alt1.ticket_id = altp.ticket_id)
           )
--           and altp.status = 'OPEN'
           and altp.old_owner = kcse.web_userid
           and kcse.supp_id = cs.supp_id
           and cs.supp_type = 'AVKT'
           and cs.exp_date is null
           and cs.part_id = klla.avukat_no
           and (
                (alt2.ticket_id is not null and alt2.rucu_file_no = klla.dosya_no)
             or (alt2.ticket_id is null and alt1.rucu_file_no = klla.dosya_no)
           );

    begin

        begin
            select t.lawfile_no,
                   t.source,
                   tp.old_owner
              into v_law_file_no,
                   v_source,
                   v_owner
              from alz_law_ticket t,
              alz_law_ticket_process tp
             where t.ticket_id = p_ticket_id
             and t.ticket_id = tp.ticket_id;
        exception when others then
            v_error_msg := 'Ýþ numarasý bulunamadý.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE_BY_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                p_process_results
            );
            return;
        end;

        if v_source = 'RUCU' then

            begin
                select description
                  into v_reason_desc
                  from koc_law_ticket_reason
                 where type = 'HARICI_IADE'
                  and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
                  and parameter = p_reason_code;

            exception when others then
                v_error_msg := 'Rücu iade nedenini kontrol ediniz.';

                process_result(
                    2, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE_BY_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                    p_process_results
                );
                return;
            end;

            select count(1)
              into v_count
              from alz_law_ticket alt1,
                   alz_law_ticket alt2
             where alt1.ticket_id = p_ticket_id
               and alt1.ticket_id = alt2.parent(+)
               and (
                    (alt2.ticket_id is not null and alt2.rucu_file_no is null)
                 or (alt2.ticket_id is null and alt1.rucu_file_no is null)
               );

            if v_count > 0 then
                v_error_msg := 'Ýade edilecek iþlerin Rücu Dosya Numarasý boþ olmamalýdýr.';

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE_BY_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                    p_process_results
                );
                return;
            end if;

            v_count := 0;
            for rec1 in c1 loop

                update koc_law_ext_bases_detail
                   set cancel_reason_code =  p_reason_code,
                       cancel_reason_exp  =  v_reason_desc
                 where ext_reference = rec1.dosya_no
                   and part_id = rec1.avukat_no
                   and ext_lawyer_send_date = rec1.dosya_sevk_tarihi;

                if sql%rowcount > 0 then
                    v_count := v_count + 1;
                end if;
            end loop;

            if v_count = 0 then
                v_error_msg := 'Ýade edilecek Rücu dosyasý bilgileri çekilemedi.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE_BY_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                    p_process_results
                );
                return;
            end if;

        elsif v_source = 'DOSYA' then

            begin
                select description
                  into v_reason_desc
                  from koc_law_ticket_reason
                 where type = 'HARICI_DOSYA_IADE'
                  and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
                  and parameter = p_reason_code;

            exception when others then
                v_error_msg := 'Dosya iade nedenini kontrol ediniz.';

                process_result(
                    2, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE_BY_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                    p_process_results
                );
                return;
            end;

            update koc_law_bases
               set is_approved = 2,
                   lawyer = null,
                   lawyer_assign_date = null
             where law_file_no = v_law_file_no;

            reassign_related_tickets( p_old_owner => v_owner,
                                      p_law_file_no => v_law_file_no,
                                      p_user_name => v_owner,
                                      p_ref_code => 'REJECTED_FILE_REASSIGN',
                                      p_process_results => p_process_results);

            save_lawfile_log(v_law_file_no, p_process_results);
        else

            v_error_msg := 'Kaynaðý RUCU ve DOSYA olmayan iþler için iade iþlemi yapýlamaz.';

            process_result(
                5, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE_BY_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                p_process_results
            );
            return;
        end if;
        --java tarafýndaki iþlerin yarým kalmamasý için commit prosedürün çaðrýldýðý yerde yapýlacak

    end reject_file_by_ext_lawyer;

    procedure approve_file_by_ext_lawyer(p_ticket_id in number,
                                         p_user_name in varchar2,
                                         p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_source varchar2(30);
        v_law_file_no varchar2(30);
        v_is_approved number;
        v_status varchar2(10);
        v_part_id number;
        v_lawyer_id number;
    begin

        begin
            select lt.lawfile_no,
                   lt.source,
                   ltp.status,
                   wu.customer_partner_id
              into v_law_file_no,
                   v_source,
                   v_status,
                   v_part_id
              from alz_law_ticket lt,
                   alz_law_ticket_process ltp,
                   web_sec_system_users wu
             where lt.ticket_id = p_ticket_id
               and lt.ticket_id = ltp.ticket_id
               and ltp.owner = wu.user_name;
        exception when others then
            v_error_msg := 'Ýþ numarasý bulunamadý.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE_BY_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                p_process_results
            );
            return;
        end;

        if v_status = 'CANCELLED' then
            v_error_msg := 'Ýþ iptal edildiði için kabul iþlemi yapýlmadý.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE_BY_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                p_process_results
            );
            return;
        end if;

        if v_source = 'DOSYA' then

            begin
                select is_approved,
                       lawyer
                  into v_is_approved,
                       v_lawyer_id
                  from koc_law_bases
                 where law_file_no = v_law_file_no;

                if nvl(v_part_id, -2) <> nvl(v_lawyer_id, -1) then
                    v_error_msg := 'Dosya size atalý olmadýðý için dosya kabul iþlemi yapýlmadý.';

                    process_result(
                        3, --p_process_no
                        0,
                        9,
                        -1,
                        'REJECT_FILE_BY_EXT_LAWYER',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                        p_process_results
                    );
                    return;
                end if;

                if v_is_approved is null then
                    update koc_law_bases
                       set is_approved = 1
                     where law_file_no = v_law_file_no;

                    save_lawfile_log(v_law_file_no, p_process_results);

                    alz_law_ticket_process_utils.update_ticket_status(p_ticket_id, 'CLOSED', p_user_name, p_process_results);

                elsif v_is_approved = 0 then
                    v_error_msg := v_law_file_no||' nolu Hukuk Dosyasýnda onayda bekleyen otorizasyonlar olduðu için dosya kabul iþlemi yapamazsýnýz.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'REJECT_FILE_BY_EXT_LAWYER',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                        p_process_results
                    );
                    return;

                elsif v_is_approved = 2 then
                    v_error_msg := v_law_file_no||' nolu Hukuk Dosyasý dosya açýlýþ otorizasyonunda beklediði için dosya kabul iþlemi yapamazsýnýz.';

                    process_result(
                        5, --p_process_no
                        0,
                        9,
                        -1,
                        'REJECT_FILE_BY_EXT_LAWYER',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                        p_process_results
                    );
                    return;

                elsif v_is_approved = 3 then
                    v_error_msg := v_law_file_no||' nolu Hukuk Dosyasý dosya açýlýþ otorizasyonu reddedildiði için dosya kabul iþlemi yapamazsýnýz.';

                    process_result(
                        6, --p_process_no
                        0,
                        9,
                        -1,
                        'REJECT_FILE_BY_EXT_LAWYER',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                        p_process_results
                    );
                    return;
                end if;

            exception when others then
                v_error_msg := v_law_file_no||' nolu Hukuk Dosyasý bulunamamýþtýr.';

                process_result(
                    7, --p_process_no
                    0,
                    9,
                    -1,
                    'REJECT_FILE_BY_EXT_LAWYER',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                    p_process_results
                );
                return;
            end;

        else

            v_error_msg := 'Kaynaðý DOSYA olmayan iþler için dosya kabul iþlemi yapýlamaz.';

            process_result(
                5, --p_process_no
                0,
                9,
                -1,
                'REJECT_FILE_BY_EXT_LAWYER',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.REJECT_FILE_BY_EXT_LAWYER',
                p_process_results
            );
            return;
        end if;

    end approve_file_by_ext_lawyer;

    function get_law_file_status(p_law_file_no varchar2) return number
    is
        v_return number;
    begin

        select is_approved
          into v_return
          from koc_law_bases
         where law_file_no = p_law_file_no;

        if v_return is not null then
            return 1;
        else
            return v_return;
        end if;

    exception when others then
        return -1;
    end get_law_file_status;

    -- Rücuya Ýade Nedenleri
    function get_reason_code_list(p_from_group varchar2, p_to_group varchar2, p_type varchar2 default null) return sys_refcursor
    is
        v_list sys_refcursor;

    begin

        -- Rücu
        if p_to_group = 'LMRUNAUZ' then

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'RUCU'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
             order by parameter;

        -- Muhaberat
        elsif p_to_group = 'LMMUNAUZ' then

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'MUHABERAT'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
             order by parameter;

        -- Harici Avukat yönlendirme
        elsif p_to_group = 'LMHA' then

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'HARICI'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
             order by parameter;

        -- Harici Avukat iade
        elsif p_from_group = 'LMHA' and p_type = 'RUCU'
        then

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'HARICI_IADE'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
             order by parameter;

        elsif p_from_group = 'LMHA' and p_type = 'DOSYA'
        then

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'HARICI_DOSYA_IADE'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
             order by parameter;

        -- Muhaberat iade
        elsif p_from_group = 'LMMUNAUZ' then

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'MUHABERAT_IADE'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
            order by parameter;

        -- Diðer
        else

            open v_list for
            select parameter,
                   description
              from koc_law_ticket_reason
             where type = 'DIGER'
              and sysdate between nvl(start_date, sysdate) and nvl(end_date, sysdate)
             order by parameter;

        end if;

        return v_list;

    end get_reason_code_list;

    function match_uyap_law_file(p_uyap_id number, p_birim_id varchar2, p_court_file_no varchar2) return varchar2
    is
        v_return varchar2(30);

        cursor c1 is

        select law_file_no,
               p_uyap_id as uyap_id,
               'UYAP' as source,
               'SYSTEM' as created_by
          from koc_law_base_courts lbc
         where lbc.court_type = 'U'
           and lbc.court_id = p_birim_id
           and lbc.court_file_no = p_court_file_no
           and not exists
           (
             select 1
               from koc_law_base_uyap_rel
              where law_file_no = lbc.law_file_no
                and uyap_id = p_uyap_id
           )
           and not exists
           (
             select 1
               from koc_law_base_uyap_rel
              where uyap_id = p_uyap_id
                and nvl(deleted_flag, 'N') = 'N'
           )
          order by law_file_no desc;

    begin

        select max(law_file_no)
          into v_return
          from koc_law_base_uyap_rel
         where uyap_id = p_uyap_id
           and nvl(deleted_flag, 'N') = 'N';

        if v_return is null then
            for rec1 in c1 loop
                insert into koc_law_base_uyap_rel
                (
                    law_file_no,
                    uyap_id,
                    source,
                    created_by
                )
                values
                (
                    rec1.law_file_no,
                    rec1.uyap_id,
                    rec1.source,
                    rec1.created_by
                );

                v_return := rec1.law_file_no;

                exit;
            end loop;

/*
            --Eski yapý ile kontrol yapýlýyor. Mahkemeler düzenlenince kaldýrýlacak.
            if v_return is null then

                select max(lb.law_file_no)
                  into v_return
                  from alz_uyap_court_ref ucr,
                       koc_law_bases lb
                 where ucr.birim_id = p_birim_id
                   and ucr.court_enf_no = decode(ucr.court_enf_type,
                                                 'M', lb.law_court_no,
                                                 'I', lb.enforcement_no,
                                                 'Y', lb.supreme_court_no,
                                                 'T', lb.supreme_enf_no
                                                )
                   and decode(ucr.court_enf_type,
                              'M', lb.court_file_no,
                              'I', lb.enforcement_file_no,
                              'Y', lb.supreme_court_file_no,
                              'T', lb.supreme_enf_file_no
                             ) = p_court_file_no;


                if v_return is not null then
                    insert into koc_law_base_uyap_rel
                    (
                        law_file_no,
                        uyap_id,
                        source,
                        created_by
                    )
                    values
                    (
                        v_return,
                        p_uyap_id,
                        'UYAP',
                        'SYSTEM'
                    );
                end if;
            end if;
*/
        end if;

        return v_return;

    end match_uyap_law_file;

    procedure match_ticket_uyap_id(p_law_file_no in varchar2,
                                   p_old_law_file_no in varchar2,
                                   p_uyap_id in number,
                                   p_user_name in varchar2,
                                   p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_count number;

    begin

        v_count := koc_law_utils.check_law_file(p_law_file_no);

        if v_count = 0 then
            v_error_msg := 'Hatalý Hukuk Dosya Numarasý girdiniz, kontrol edebilir misiniz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'MATCH_TICKET_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MATCH_TICKET_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        if p_uyap_id is null then
            v_error_msg := 'UYAP id boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'MATCH_TICKET_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MATCH_TICKET_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        update koc_law_base_uyap_rel
           set deleted_flag = 'Y',
               last_update_date = sysdate,
               last_updated_by = p_user_name
         where law_file_no = p_old_law_file_no
           and uyap_id = p_uyap_id;

        select count(1)
          into v_count
          from koc_law_base_uyap_rel
         where nvl(deleted_flag, 'N') = 'N'
           and law_file_no = p_law_file_no
           and uyap_id = p_uyap_id;

        if v_count = 0 then
            insert into koc_law_base_uyap_rel
            (
                law_file_no,
                uyap_id,
                source,
                created_by
            )
            values
            (
                p_law_file_no,
                p_uyap_id,
                'TICKET',
                p_user_name
            );
        end if;

    exception when others then
        v_error_msg := 'Ýþ üzerindeki hukuk dosya numarasý ile UYAP dosyasý eþleþtirilirken hata oldu.';

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'MATCH_TICKET_UYAP_ID',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.MATCH_TICKET_UYAP_ID',
            p_process_results
        );
        return;

    end match_ticket_uyap_id;

    procedure get_in_lawyer_info(p_law_file_no in varchar2,
                                 p_in_lawyer_user out varchar2,
                                 p_in_lawyer_group out varchar2,
                                 p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);

    begin
        select al.aznet_user,
               lb.in_lawyer_group
          into p_in_lawyer_user,
               p_in_lawyer_group
          from koc_law_bases lb,
               alz_lawyers al
         where lb.law_file_no = p_law_file_no
           and lb.in_lawyer = al.id;

    exception when others then
        v_error_msg := 'Dahili avukat bilgisi bulunamadý.';

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'GET_IN_LAWYER_INFO',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.GET_IN_LAWYER_INFO',
            p_process_results
        );
        return;
    end get_in_lawyer_info;

    --Dosya Tipi (Dava Konusu)
    function get_sf_type_list(p_department varchar2, p_law_file_no varchar2 default null) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select explanation, -- KOC_LAW_BASES.SF_EXPLANATION
               law_sf_type, -- KOC_LAW_BASES.LAW_SF_TYPE
               nvl(has_claim, 'N') has_claim,
               nvl(has_detail, 'N') has_detail
          from koc_law_sf_type
         where nvl(department, p_department) = p_department
         union
        select lst.explanation,
               lst.law_sf_type,
               nvl(lst.has_claim, 'N') has_claim,
               nvl(lst.has_detail, 'N') has_detail
          from koc_law_bases lb,
               koc_law_sf_type lst
         where lb.law_file_no = p_law_file_no
           and lb.law_sf_type = lst.law_sf_type
         order by 1;

        return v_list;
    end get_sf_type_list;

    --Dosya Tip Grubu
    function get_law_sf_group_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select parameter,
               explanation
         from alz_look_up
        where code = 'LAW_SF_GROUP'
          and sysdate between nvl(validity_start_date, sysdate) and nvl(validity_end_date, sysdate)
        order by explanation;

        return v_list;
    end get_law_sf_group_list;

    --Dava Tipi - Hasar Dava Tipi
    function get_law_type_list(p_law_file_no varchar2 default null) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select parameter,   -- KOC_LAW_BASES.LAW_TYPE
               explanation  -- KOC_LAW_BASES.LAW_TYPE_EXP
         from alz_look_up
        where code = 'LAW_TYPE'
          and sysdate between nvl(validity_start_date, sysdate) and nvl(validity_end_date, sysdate)
        union
        select alu.parameter,
               alu.explanation
          from alz_look_up alu
         where alu.code in (select law_type from koc_law_bases where law_file_no = p_law_file_no)
            or alu.code in (select distinct law_type from koc_law_bases_detail where law_file_no = p_law_file_no and law_type is not null)
        order by 2;

        return v_list;
    end get_law_type_list;

    --Dahili Avukat
    function get_internal_lawyer_list(p_department in varchar2,
                                      p_law_case_type in varchar2 default null,
                                      p_law_file_type in varchar2 default null,
                                      p_law_sf_type in varchar2 default null,
                                      p_law_file_no varchar2 default null) return sys_refcursor
    is
        v_list sys_refcursor;
        v_group_name varchar2(100);

    begin
        if p_department = 'KDT' then

            begin
                select group_name
                  into v_group_name
                  from koc_law_sf_type
                 where law_sf_type = p_law_sf_type;

            exception when others then
                v_group_name := null;
            end;

            open v_list for
            select al.id,          -- KOC_LAW_BASES.IN_LAWYER
                   nls_upper(al.name_surname, 'NLS_SORT = XTURKISH') as name_surname,-- KOC_LAW_BASES.IN_LAWYER_EXP
                   lgur.group_code,
                   lgd.definition as group_desc
              from alz_lawyers al,
                   alz_law_group_user_rel lgur,
                   alz_law_group_def lgd
             where al.branch = decode(p_department, 'KDT', 'HM', p_department)  --:koc_law_bases.hm_hdt_type -- Kurumsal Dava Takip(HM), Hasar Dava Takip(HDT)
               and al.aznet_user = lgur.username
               and lgur.group_code = lgd.code
               and (
                    (p_law_file_type is null or (p_law_file_type = 'CEZA' and lgd.code = 'LMKDTACZ'))
                 or (p_law_file_type != 'CEZA' and (p_law_sf_type is null or lgd.code = v_group_name))
                 or (lower(lgd.definition) not like '%dahili avukat%' and lower(lgd.definition) not like '%operasyon masasý%')
               )
             union
             select al.id,
                    nls_upper(al.name_surname, 'NLS_SORT = XTURKISH') as name_surname,
                    lb.in_lawyer_group,
                    lgd.definition as group_desc
               from koc_law_bases lb,
                    alz_lawyers al,
                    alz_law_group_def lgd
              where law_file_no = p_law_file_no
                and lb.in_lawyer = al.id
                and lb.in_lawyer_group = lgd.code(+)
             order by 4, 2;

        else

            open v_list for
            select al.id,          -- KOC_LAW_BASES.IN_LAWYER
                   nls_upper(al.name_surname, 'NLS_SORT = XTURKISH') as name_surname,-- KOC_LAW_BASES.IN_LAWYER_EXP
                   lgur.group_code,
                   lgd.definition as group_desc
              from alz_lawyers al,
                   alz_law_group_user_rel lgur,
                   alz_law_group_def lgd
             where al.branch = p_department --:koc_law_bases.hm_hdt_type -- Kurumsal Dava Takip(HM), Hasar Dava Takip(HDT)
               and al.aznet_user = lgur.username
               and lgur.group_code = lgd.code
               and (
                    (nvl(p_law_case_type, 'L') = 'L' or (p_law_case_type = 'A' and lgd.definition not like '%Lehe%') )
                    or lower(lgd.definition) not like '%dahili avukat%'
                )
             union
             select al.id,
                    nls_upper(al.name_surname, 'NLS_SORT = XTURKISH') as name_surname,
                    lb.in_lawyer_group,
                    lgd.definition as group_desc
               from koc_law_bases lb,
                    alz_lawyers al,
                    alz_law_group_def lgd
              where law_file_no = p_law_file_no
                and lb.in_lawyer = al.id
                and lb.in_lawyer_group = lgd.code(+)
             order by 4, 2;
        end if;

        return v_list;
    end get_internal_lawyer_list;

    --Harici Avukat
    function get_external_lawyer_list(p_law_file_no varchar2 default null) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for

        select distinct
               a.part_id,   -- KOC_LAW_BASES.LAWYER
               nls_upper(substr(koc_clm_utils.partner_name_bul (a.part_id), 1, 2000), 'NLS_SORT = XTURKISH') as ad,   -- KOC_LAW_BASES.LAWYER_DESC
               a.exp_date,
               (
                select decode(count(1), 0, 0, 1)
                  from customer.koc_clm_lookup
                 where type in (130, 131)
                   and scode = a.part_id
               ) is_private
          from clm_suppliers a,
               koc_clm_suppliers_ext b,
               web_sec_system_users w
         where a.supp_id = b.supp_id
           and a.supp_type = 'AVKT'
           and b.supp_region_code is not null
           and a.exp_date is null
           and a.part_id = w.customer_partner_id
         union
        select lawyer,
               nls_upper(substr(koc_clm_utils.partner_name_bul(lawyer), 1, 2000), 'NLS_SORT = XTURKISH') as ad,
               null,
               (
                select decode(count(1), 0, 0, 1)
                  from customer.koc_clm_lookup
                 where type in (130, 131)
                   and scode = lawyer
               ) is_private
          from koc_law_bases
         where law_file_no = p_law_file_no
         order by 2;

        -- melih - analizde bölge alanýndan bahsedilmemiþ
        --   and b.supp_region_code = :koc_law_bases.lawyer_region

        return v_list;
    end get_external_lawyer_list;

    --Dosya Durum
    function get_file_status_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select status_id,   -- KOC_LAW_BASES.STATUS_ID -- LOVde gösterilmiyor
               explanation, -- KOC_LAW_BASES.STATUS_DESC
               is_closed    -- KOC_LAW_BASES.IS_CLOSED
          from koc_law_status_ref
         where type = 'G'
         order by explanation;

        return v_list;
    end get_file_status_list;

    --Suç Tipi (Ceza dosyalarýnda kullanýlýyor)
    function get_prosecution_type_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select type_no,     --PROSECUTION.FILE_TYPE -- LOVde gösterilmiyor
               explanation  --PROSECUTION.FILE_EXP
          from koc_law_prosecution_type
         order by explanation;

        return v_list;
    end get_prosecution_type_list;

    --Geliþme Kodu (Evolution)
    function get_evolution_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select evolution_code,  -- formda atama yapmýyor -- LOVde gösterilmiyor
               evolution_exp    -- KOC_LAW_BASES.GELISME_KODU
          from koc_law_evolution_ref
         order by evolution_exp;

        return v_list;
    end get_evolution_list;

    --Para Birimi
    function get_currency_code_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select a.swift_code
          from cur_currencies a,
               koc_curr_validity b
         where a.swift_code = b.swift_code
           and b.validity_end_date is null
         order by decode(a.swift_code, base_swift_code, 1, 'USD', 2, 'EUR', 3, 4), 1;

        return v_list;
    end get_currency_code_list;

    --Teminat Adý (Hasar Dosya No parametresiyle çaðrýlýr)
    function get_cover_list(p_clm_ext_reference varchar2) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select distinct
               c.cover_name, -- KOC_LAW_BASES_DETAIL.COVER_NAME
               case
                when exists( --Rücu için Teminat null olmasý gerekiyor
                        select 1
                          from koc_clm_recourse_detail
                         where ext_reference = d.ext_reference
                           and clm_ext_reference is not null
                    ) then null
                else
                    a.sum_ins_on_loss_date
               end as cover_amount, -- KOC_LAW_BASES_DETAIL.COVER_AMOUNT
               a.swift_code as cover_amount_swf,
               b.cover_code -- KOC_LAW_BASES_DETAIL.COVER_CODE -- LOVde gösterilmiyor
          from koc_clm_cov_sf_links_ext a,
               clm_pol_covers b,
               cfg_v_prod_covers_api c,
               clm_subfiles d
         where a.claim_id = d.claim_id
           and a.sf_no = d.sf_no
           and d.ext_reference = p_clm_ext_reference --:koc_law_bases_detail.clm_ext_reference
           and b.claim_id      = a.claim_id
           and b.contract_id   = a.contract_id
           and b.oar_no        = a.oar_no
           and b.cover_no      = a.cover_no
           and c.cover_code    = b.cover_code
         order by c.cover_name;

        return v_list;
    end get_cover_list;

    --Faiz Tipi
    function get_interest_type_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select interest_type, -- KOC_LAW_BASES_DETAIL.INTEREST_TYPE
               explanation
          from koc_law_interest_type
         order by explanation;

        return v_list;
    end get_interest_type_list;

    --Mahkeme listesi= M, Tahkim Ýtiraz= R, Üst Mahkeme Listesi= Y, Ýcra Listesi= I, ÝTM Listesi= T, Savcýlýk Listesi= S, Hakem Heyeti= H, Arabuluculuk= A
    function get_court_list(p_court_enf_type varchar2, p_law_file_no varchar2 default null) return sys_refcursor
    is
        v_list sys_refcursor;

    begin

        open v_list for
        select court_name,
               court_id,
               court_type
          from alz_law_courts_v
         where court_type = p_court_enf_type
           and court_type != 'U'
        union
        select a.court_name,
               a.court_id,
               a.court_type
          from alz_law_courts_v a,
               alz_uyap_birim_listesi b,
               alz_law_court_uyap_rel c
         where a.court_type = 'U'
           and a.court_id = b.birim_id
           and c.court_enf_type =  p_court_enf_type
           and b.birim_turu_kod = c.court_unit_code
           and
           (
                not exists
               (
                  select 1
                    from alz_law_court_uyap_rel
                   where court_enf_type = decode(c.court_enf_type, 'M', 'Y', 'Y', 'M')
                     and court_unit_code = c.court_unit_code
               )
               or
               exists
               (
                  select 1
                    from alz_law_court_uyap_rel
                   where court_enf_type = decode(c.court_enf_type, 'M', 'Y', 'Y', 'M')
                     and court_unit_code = c.court_unit_code
                     and ((c.court_enf_type = 'M' and a.court_name not like '%YARGITAY%') or (c.court_enf_type = 'Y' and a.court_name like '%YARGITAY%'))
               )
           )
           and exists
           (
            select 1
              from alz_law_court_uyap_payment_def
             where court_unit_code = b.birim_turu_kod
               and sysdate between validity_start_date and nvl(validity_end_date, sysdate)
           )
         union
         select lcv.court_name,
                lcv.court_id,
                lcv.court_type
           from alz_law_courts_v lcv
          where lcv.court_type = 'M'
            and LOWER(lcv.court_name) LIKE '%tahkim%'
            and p_court_enf_type = 'R'
         union
         select lcv.court_name,
                lcv.court_id,
                lcv.court_type
           from koc_law_base_courts lbc,
                alz_law_courts_v lcv
          where lbc.law_file_no = p_law_file_no
            and lbc.court_enf_type = p_court_enf_type
            and lbc.court_type = lcv.court_type
            and lbc.court_id = lcv.court_id;

        return v_list;
    end get_court_list;

    --Muallak Tarihi (Hukuk Dosya No parametresiyle çaðrýlýr)
    function get_reserve_date_list(p_law_file_no varchar2) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select process_date,
               process
          from (select distinct to_char (process_date, 'dd/mm/yyyy') process_date,
                       to_char (process_date, 'dd/mm/yyyy') process
                from   (select case when aa > bb then aa else bb end process_date
                         from (select distinct trunc (a.process_date) aa,
                                      trunc (nvl (b.process_date, a.process_date)) bb
                                 from alz_law_bases_log a,
                                      alz_law_bases_detail_log b
                                where a.law_file_no = p_law_file_no--:g_law_file_no -- Hukuk Dosya No
                                  and a.law_file_no = b.law_file_no(+)
                                  and a.law_log_no is not null
                              ) x
                       )
                union all
                select distinct to_char (bordro_date, 'dd/mm/yyyy')|| decode(nvl(a.is_bordro, 0), 1,'(K. Bordro)', 0, '(G. Bordro)') bordro_date,
                       to_char (bordro_date, 'dd/mm/yyyy') bordro
                  from alz_law_reserve_history a
                 where a.law_file_no = p_law_file_no--:g_law_file_no -- Hukuk Dosya No
                   and a.category = 'BORDRO'
         )
         order by to_date(process, 'dd.mm.yyyy') desc;

        return v_list;
    end get_reserve_date_list;

    --Banka Listesi
    function get_bank_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select clearing_system_id, --KOC_LAW_BANK_ASS_LETTER.BANK_CODE
               bank_name           --KOC_LAW_BANK_ASS_LETTER.BANK_NAME
          from koc_acc_clear_systems_ext
         order by decode(bank_name,'YAPI KREDI','1',bank_name);

        return v_list;
    end get_bank_list;

    --Acenta Listesi
    function get_agent_list(p_id number, p_ref_code varchar2, p_title varchar2) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select agen_int_id,     --KOC_LAW_BASES.AGENT_ROLE
               reference_code,  --KOC_LAW_BASES.REFERENCE_CODE
               title            --KOC_LAW_BASES.AGENT_NAME
          from koc_dmt_v_current_agents
         where (p_ref_code is null or reference_code = p_ref_code)
           and (p_id is null or agen_int_id = p_id)
           and (title like '%'||nvl(p_title,'')||'%');

        return v_list;
    end get_agent_list;

    --Hasar Muallak Ekraný Baðlý Hasar Dosyalarý Listesi (Hasar Dosya No Parametresiyle çaðrýlýr)
    function get_related_claim_list(p_clm_ext_reference varchar2) return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select a.ext_reference,
               b.law_file_no,
--               a.claim_id,
--               a.sf_no,
--               b.detail_no,
               (select explanation
                  from alz_look_up
                 where code = 'LAW_TYPE'
                   and parameter = b.law_type) law_type_exp
          from clm_subfiles a,
               koc_law_bases_detail b
         where a.claim_id = b.claim_id
           and a.sf_no = b.sf_no
           and a.ext_reference = p_clm_ext_reference
         order by a.ext_reference;

        return v_list;
    end get_related_claim_list;

    --Dava Baþlangýcý Listesi
    function get_law_beginning_type return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select parameter,
               explanation
         from alz_look_up
        where code = 'LAW_BEGINNING_TYPE'
          and sysdate between nvl(validity_start_date, sysdate) and nvl(validity_end_date, sysdate)
        order by explanation;

        return v_list;
    end get_law_beginning_type;

    --Taraf Rol Listesi
    function get_party_role_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select taraf_rol_kodu,
               taraf_rol_aciklama
        --       nls_initcap(taraf_rol_aciklama, 'NLS_SORT = XTURKISH')
          from alz_uyap_taraf_rolleri
         order by decode(taraf_rol_kodu,
                            1, 1, -- Davacý
                            2, 2, -- Davalý
                            21, 3, -- Alacaklý
                            22, 4, -- Borçlu ve Müflis
                            92, 5, -- Ýhbar
                            105, 5, -- Ýhbar
                            62, 5, -- Ýhbar
                            81 ,5, -- Ýhbar
                            130, 6, -- Dahili Davacý
                            95 , 7, -- Dahili Davalý
                            99), taraf_rol_aciklama;

        return v_list;
    end get_party_role_list;

    --Taraf Kiþiliði Listesi
    function get_party_type_list return sys_refcursor
    is
        v_list sys_refcursor;

    begin
        open v_list for
        select role_type,
               description
          from cp_role_types
         where object_type = 'LAW'
           and role_type in ('SHS', 'KRM')
         order by description;

        return v_list;
    end get_party_type_list;

    function get_finance_interest_type_list return sys_refcursor
    is
        p_list sys_refcursor;

    begin
        open p_list for
        select interest_type -- KOC_LAW_BASES_DETAIL.INTEREST_TYPE
          from koc_law_interest_type  where interest_type  not in ('D','S')
         order by interest_type desc;

        return p_list;
    end get_finance_interest_type_list;

    function get_finance_court_type_list return sys_refcursor
    is
        p_list sys_refcursor;

    begin
        open p_list for
        select nvl(b.court_enf_type, substr(a.court_unit_code, 1, 1)) as court_enf_type,
               a.court_unit_code as court_type_no,
               a.description as court_type_desc
          from alz_law_court_unit_def a,
               alz_law_court_uyap_rel b
         where a.court_unit_code = b.court_unit_code(+)
           and (b.court_enf_type in ('M', 'I') or substr(a.court_unit_code, 1, 1) in ('M', 'I'));

        return p_list;
    end get_finance_court_type_list;

    --Taraf Vekil listesi
    function get_proxy_bulk(p_law_file_no in varchar2, p_part_id in number, p_unique_id in number) return law_proxy_tbl
    is
        v_list law_proxy_tbl;
    begin

        select LAW_PROXY_TYP(
                   tax_number,
                   full_name,
                   source,
                   source_id,
                   source_detail_id
               ) BULK COLLECT
          into v_list
          from koc_law_party_proxy
         where law_file_no = p_law_file_no
           and part_id = p_part_id
           and unique_id = p_unique_id;

        return v_list;
    end get_proxy_bulk;

    --UYAP Taraf Adres Listesi
    function get_uyap_address_bulk(p_uyap_id in number, p_part_id in number, p_proxy_id in number) return law_uyap_address_tbl
    is
        v_list law_uyap_address_tbl;
    begin

        select law_uyap_address_typ(
                   aud.adres_id,
                   aud.adres_turu,
                   aud.il,
                   aud.ilce,
                   aud.posta_kodu,
                   aud.adres,
                   aud.telefon,
                   aud.cep_telefon,
                   aud.faks,
                   aud.e_posta,
                   aud.yazisma_adresi
               ) BULK COLLECT
          into v_list
          from alz_uyap_adresler aud
         where aud.guncel_versiyon = 'Y'
           and aud.dosya_id = p_uyap_id
           and aud.kisi_kurum_id = p_part_id
           and aud.taraf_vekil_id = p_proxy_id
         order by aud.kayit_tarihi;

        return v_list;
    end get_uyap_address_bulk;

    --UYAP Taraf Vekil Listesi
    function get_uyap_proxy_bulk(p_uyap_id in number, p_part_id in number) return law_uyap_proxy_tbl
    is
        v_list law_uyap_proxy_tbl;
    begin

        select law_uyap_proxy_typ(
                   auv.kisi_kurum_id,
                   auv.taraf_vekil_id,
                   auv.tc_kimlik_no,
                   auv.ad,
                   auv.soyad,
                   auv.baro_no,
                   alz_litigation_utils.get_uyap_address_bulk(auv.dosya_id, auv.kisi_kurum_id, auv.taraf_vekil_id)
               ) BULK COLLECT
          into v_list
          from alz_uyap_vekiller auv
         where auv.guncel_versiyon = 'Y'
           and auv.dosya_id = p_uyap_id
           and auv.kisi_kurum_id = p_part_id
         order by auv.kayit_tarihi;

        return v_list;
    end get_uyap_proxy_bulk;

    --UYAP Taraf Listesi
    function get_uyap_party_list(p_law_file_no varchar2, p_ticket_id number) return law_uyap_party_tbl
    is
        v_list law_uyap_party_tbl;
    begin

        if p_law_file_no is not null then
            select LAW_UYAP_PARTY_TYP(
                       aut.dosya_id,
                       aut.kisi_kurum_id,
                       aut.taraf_rol_kodu,
                       aut.taraf_rolu,
                       decode(aut.kisimi_kurummu, 'kisi', 'SHS', 'KRM'), -- type_code
                       aut.kisimi_kurummu,
                       decode(aut.kisimi_kurummu, 'kisi', tc_kimlik_no, vergi_no), -- tax_number
                       aut.ad,
                       aut.soyad,
                       aut.cinsiyet,
                       aut.ana_adi,
                       aut.baba_adi,
                       case
                        when length(aut.dogum_tarihi)= 10 then
                           case
                               when aut.dogum_tarihi like '%/%' then
                                   to_date(aut.dogum_tarihi, 'DD/MM/YYYY')
                               when dogum_tarihi like '%.%' then
                                   to_date(aut.dogum_tarihi, 'DD.MM.YYYY')
                               else
                                   null
                           end
                        else
                           null
                       end,
                       aut.dogum_yeri,
                       alz_litigation_utils.get_uyap_address_bulk(aut.dosya_id, aut.kisi_kurum_id, 0),
                       alz_litigation_utils.get_uyap_proxy_bulk(aut.dosya_id, aut.kisi_kurum_id)
                   ) BULK COLLECT
              into v_list
              from koc_law_base_uyap_rel bur,
                   alz_uyap_taraflar aut
             where bur.law_file_no = p_law_file_no
               and nvl(bur.deleted_flag, 'N') = 'N'
               and bur.uyap_id = aut.dosya_id
               and aut.guncel_versiyon = 'Y'
             order by aut.kayit_tarihi desc;

        else

            select LAW_UYAP_PARTY_TYP(
                       aut.dosya_id,
                       aut.kisi_kurum_id,
                       aut.taraf_rol_kodu,
                       aut.taraf_rolu,
                       decode(aut.kisimi_kurummu, 'kisi', 'SHS', 'KRM'), -- type_code
                       aut.kisimi_kurummu,
                       decode(aut.kisimi_kurummu, 'kisi', tc_kimlik_no, vergi_no), -- tax_number
                       aut.ad,
                       aut.soyad,
                       aut.cinsiyet,
                       aut.ana_adi,
                       aut.baba_adi,
                       case
                        when length(aut.dogum_tarihi)= 10 then
                           case
                               when aut.dogum_tarihi like '%/%' then
                                   to_date(aut.dogum_tarihi, 'DD/MM/YYYY')
                               when dogum_tarihi like '%.%' then
                                   to_date(aut.dogum_tarihi, 'DD.MM.YYYY')
                               else
                                   null
                           end
                        else
                           null
                       end,
                       aut.dogum_yeri,
                       alz_litigation_utils.get_uyap_address_bulk(aut.dosya_id, aut.kisi_kurum_id, 0),
                       alz_litigation_utils.get_uyap_proxy_bulk(aut.dosya_id, aut.kisi_kurum_id)
                   ) BULK COLLECT
              into v_list
              from alz_law_ticket al,
                   alz_uyap_taraflar aut
             where (al.ticket_id = p_ticket_id or al.parent = p_ticket_id)
               and al.uyap_dosya_id = aut.dosya_id
               and aut.guncel_versiyon = 'Y'
             order by aut.kayit_tarihi desc;

        end if;

        return v_list;
    end get_uyap_party_list;

    function get_auth_line_desc( p_auth_id in number ) return varchar2
    is
        v_return_string varchar2(1000);
        v_tmp_string varchar2(200);
        v_count number;
        v_rule_id number;
    begin

        select count(1) , max( AUTHORIZATION_RULE_ID )
        into v_count,v_rule_id
        from alz_law_auth_ext
        where authorization_id = p_auth_id;

        if v_count =0 then
            return null;
        end if;

        for x_rec in ( select * from alz_law_auth_rule_ext where AUTH_RULE_ID = v_rule_id and SOURCE_COLUMN_DESCRIPTION is not null )
        loop
            execute immediate 'select decode( '|| x_rec.AUTH_EXTENDED_RULE_COLUMN ||' ,  '|| x_rec.AUTH_EXTENDED_RULE_COLUMN ||'_old, null , '''|| x_rec.SOURCE_COLUMN_DESCRIPTION||':'''||'|| '||x_rec.AUTH_EXTENDED_RULE_COLUMN||'||chr(10) ) from alz_law_auth_ext where authorization_id = '||p_auth_id  into  v_tmp_string ;
            v_return_string := v_return_string||v_tmp_string;
        end loop;
        return v_return_string;
        exception when others then
            return null;
    end;
        --Hukuk Detay Bilgileri
    function get_authorization(p_law_file_no varchar2, p_object_name varchar2, p_object_detail varchar2) return law_authorization_typ
    is
        v_rec law_authorization_typ;
    begin
        if v_auth_from_ticket = 1 then
          select law_authorization_typ(authorization_id,
            auth.is_required,
            decode( nvl(auth.description , 'X') , 'X' , decode( auth.source_column_type , 'NUMBER' , to_number( auth.source_column_new_value), null ) ,null ) ,
            decode(substr(ar.auth_type,3,1),'L', nvl( get_auth_line_desc( auth.authorization_id),auth.description),'G', nvl( get_auth_line_desc( auth.authorization_id),auth.description) ,nvl( auth.description||' '||auth.src_column_helper_value_new , decode( auth.source_column_type , 'VARCHAR2' , auth.source_column_new_value, null)||' '||auth.src_column_helper_value_new ) ) ,
            decode( auth.source_column_type , 'DATE' , to_date( auth.source_column_new_value , auth.source_column_format ), null ) ,
            null)
            into v_rec
            from alz_law_auth auth,
            alz_law_auth_rule ar
            where auth.lawfile_no = p_law_file_no
            and DECODE( auth.source_column_name , 'court_file_no' , 'court_id','interest_amount','interest_type', auth.source_column_name) = DECODE( p_object_name , 'court_file_no' , 'court_id','interest_amount','interest_type', p_object_name)
            and auth.source_id = nvl( p_object_detail , p_law_file_no )
            and ar.source_table = auth.source_table
            and ar.source_column_name = auth.source_column_name
            and is_cancelled = 0
            and is_approved = 0;

            return v_rec;
        else
            return null;
        end if;
            /*
        select LAW_AUTHORIZATION_TYP(
                auth_id,
                1, -- is_required
                decode(p_object_name,
                        'status_id', new_status_id,
                        'authority_amount', new_authority_amount,
                        'court_correction_amount', new_court_correction_amt,
                        'court_decision_amount', new_court_decision_amt,
                        'interest_type', null,
                        'factura_amount', new_factura,
                        'expertise_amount', new_expertise_amount,
                        'expertise_amount', new_expertise_amount,
                        'expertise_amount', new_expertise_amount,
                        'expertise_amount', new_expertise_amount
                ), -- new_value_number
                decode(p_object_name,
                        'status_id', (select explanation from koc_law_status_ref where status_id = new_status_id),
                        'authority_amount', new_authority_amount_swf,
                        'court_correction_amount', new_court_correct_amount_swf,
                        'court_decision_amount', new_court_decision_amount_swf,
                        'interest_type', new_interest_type,
                        'factura_amount', new_factura_swf,
                        'expertise_amount', new_expertise_amount_swf,
                        'expertise_amount', new_expertise_amount_swf,
                        'expertise_amount', new_expertise_amount_swf,
                        'expertise_amount', new_expertise_amount_swf
                ), -- new_value_text
                null, -- new_value_date
                null -- description
               )
          into v_rec
          from koc_law_authorization kla
         where law_file_no = p_law_file_no
           and approval_date is null
           and nvl(is_approved, 0)  != 1
           and nvl(is_cancelled, 0) != 1
           and decode(p_object_name,
                        'status_id', new_status_id,
                        'authority_amount', new_authority_amount,
                        'court_correction_amount', new_court_correction_amt,
                        'court_decision_amount', new_court_decision_amt,
                        'interest_type', new_interest_type,
                        'factura_amount', new_factura,
                        'expertise_amount', new_expertise_amount
                ) is not null
           and auth_id =
                (
                select max(auth_id)
                  from koc_law_authorization
                 where law_file_no = kla.law_file_no
                   and decode(p_object_name,
                                'status_id', new_status_id,
                                'authority_amount', new_authority_amount,
                                'court_correction_amount', new_court_correction_amt,
                                'court_decision_amount', new_court_decision_amt,
                                'interest_type', new_interest_type,
                                'factura_amount', new_factura,
                                'expertise_amount', new_expertise_amount
                       ) is not null
                   and approval_date is null
                   and nvl(is_approved, 0)  != 1
                   and nvl(is_cancelled, 0) != 1
                );

        return v_rec;    */
    exception when others then
        return null;

    end get_authorization;

    --Dava Takip Masrafý eksper bilgileri
    function get_law_expert_bulk(p_law_file_no in varchar2) return law_expert_expense_tbl
    is
        v_list law_expert_expense_tbl;
    begin

        select law_expert_expense_typ(
                   lee.order_no,
                   lee.exp_charge,
                   lee.exp_tc,
                   lee.exp_name,
                   lee.reg_date
               ) BULK COLLECT
          into v_list
          from koc_law_expert_expenses lee
         where lee.law_file_no = p_law_file_no
         order by lee.order_no;

        return v_list;
    end get_law_expert_bulk;

    --Dava Takip Masrafý bilgileri
    function get_expense_info_list(p_law_file_no in varchar2) return law_expense_info_typ
    is
        p_rec law_expense_info_typ;
    begin

        if p_law_file_no is not null then
            select law_expense_info_typ(
                       lb.law_stamp,
                       lb.law_cash_fee,
                       lb.law_rel_fee,
                       lb.law_collect_fee,
                       lb.law_app_fee,
                       lb.law_other_fee,
                       lb.law_expertise_fee,
                       lb.law_rel_fee_paid,
                       alz_litigation_utils.get_law_expert_bulk(lb.law_file_no)
                   )
              into p_rec
              from koc_law_bases lb
             where lb.law_file_no = p_law_file_no;
        end if;

        return p_rec;

    end get_expense_info_list;

    --Dava Takip Masrafý bilgileri kaydetme
    procedure save_expense_info_list(p_law_file_no in varchar2,
                                     p_rec in law_expense_info_typ,
                                     p_user_name in varchar2,
                                     p_court_revenue out number,
                                     p_process_results out customer.process_result_table,
                                     p_log_active number default 1)
    is

        v_count number;
        v_error_msg varchar2(1000);
        v_order number;
        v_charge number;
        v_index number := 1;

        cursor c1 is
        select *
          from table(p_rec.law_expert_list);

    begin

        p_court_revenue := 0;

        if p_law_file_no is null then
            v_error_msg := 'Hukuk Dosya No boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_EXPENSE_INFO_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_EXPENSE_INFO_LIST',
                p_process_results
            );
            return;
        end if;

        if p_rec is null then
            v_error_msg := 'Dava takip masrafý listesi boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SAVE_EXPENSE_INFO_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_EXPENSE_INFO_LIST',
                p_process_results
            );
            return;
        end if;

        -- Nispi Harç kontrol
        if nvl(p_rec.law_rel_fee, 0) != 0 and
           p_rec.is_law_rel_fee_paid is null
        then
            v_error_msg := 'Nispi Harç ödendi/ödenmedi belirtilmelidir.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'SAVE_EXPENSE_INFO_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_EXPENSE_INFO_LIST',
                p_process_results
            );
            return;
        end if;

        delete from koc_law_expert_expenses
              where law_file_no = p_law_file_no;

        for rec1 in c1 loop
            insert into koc_law_expert_expenses
            (
                law_file_no,
                order_no,
                exp_charge,
                exp_tc,
                exp_name,
                reg_date
            )
            values
            (
                p_law_file_no,
                v_index,
                rec1.exp_charge,
                rec1.exp_tc,
                rec1.exp_name,
                rec1.reg_date
            );

            v_index := v_index + 1;
        end loop;

        select nvl(sum(nvl(exp_charge, 0)), 0)
          into v_charge
          from koc_law_expert_expenses
         where law_file_no = p_law_file_no;

        v_charge := v_charge +
                    nvl(p_rec.law_stamp, 0) + nvl(p_rec.law_cash_fee, 0) + nvl(p_rec.law_rel_fee, 0) +
                    nvl(p_rec.law_collect_fee, 0) + nvl(p_rec.law_app_fee, 0) + nvl(p_rec.law_other_fee, 0) + nvl(p_rec.law_expertise_fee, 0);

        update koc_law_bases
           set law_stamp        = p_rec.law_stamp,
               law_cash_fee     = p_rec.law_cash_fee,
               law_rel_fee      = p_rec.law_rel_fee,
               law_collect_fee  = p_rec.law_collect_fee,
               law_app_fee      = p_rec.law_app_fee,
               law_other_fee    = p_rec.law_other_fee,
               law_expertise_fee = p_rec.law_expertise_fee,
               law_rel_fee_paid = p_rec.is_law_rel_fee_paid,
               court_revenue    = v_charge,
               user_name        = p_user_name
         where law_file_no      = p_law_file_no;

        p_court_revenue := v_charge;

        if p_log_active = 1 then
            save_lawfile_log(p_law_file_no, p_process_results);
        end if;

        --java tarafýndaki iþlerin yarým kalmamasý için commit prosedürün çaðrýldýðý yerde yapýlacak

    exception when others then
        v_error_msg := 'Dava takip masrafý kaydedilirken hata oldu: '||SUBSTR(sqlerrm, 1, 900);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'SAVE_EXPENSE_INFO_LIST',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_EXPENSE_INFO_LIST',
            p_process_results
        );
        return;
    end save_expense_info_list;

    --Teminat Mektubu listesi
    function get_assurance_letter_list(p_law_file_no in varchar2) return law_assurance_letter_tbl
    is
        v_list law_assurance_letter_tbl;
    begin

        select law_assurance_letter_typ(
                   rownum,
                   bal.letter_no,
                   bal.letter_amount,
                   bal.tzm_amount,
                   bal.letter_date,
                   bal.user_name,
                   bal.bank_code,
                   nvl(cse.bank_name, 'Tanýmsýz Banka Adý'),
                   substr(bal.status, 1,1)
               ) bulk collect
          into v_list
          from koc_law_bank_ass_letter bal,
               koc_acc_clear_systems_ext cse
         where bal.law_file_no = p_law_file_no
           and bal.bank_code = cse.clearing_system_id(+)
         order by bal.process_date;

        return v_list;
    end get_assurance_letter_list;

    function get_reserve_paid_amount(p_law_file_no varchar2,
                                     p_detail_no number,
                                     p_date_parity date,
                                     p_type number) return number
    is
        v_amount number;
    begin
        begin
            select sum(nvl(paid_amount, 0))
              into v_amount
              from (select sum(decode(b.sf_total_type,
                                      '35', a.amount * 118 / 98,
                                      a.amount)
                           ) paid_amount
                      from koc_law_trans_detail_sub a,
                           koc_law_trans_detail b
                     where a.law_file_no = p_law_file_no
                       and a.accessory_type = p_type
                       and a.detail_no = nvl(nvl(p_detail_no, b.detail_no), 0)
                       and a.law_file_no = b.law_file_no
                       and b.sf_total_type = '35'
                       and a.trans_no = b.trans_no
                       and b.batch_id is not null
                       and b.ticket_date <= nvl(p_date_parity, b.ticket_date)
                       and sign (a.amount) = 1
                     union all
                    select sum(decode(b.sf_total_type,
                                      '50', decode (b.document_type,
                                                    'SMM', a.amount * 118 / 98,
                                                    a.amount),
                                      a.amount)
                           ) paid_amount
                      from koc_law_trans_detail_sub a,
                           koc_law_trans_detail b
                     where a.law_file_no = p_law_file_no
                       and a.accessory_type = p_type
                       and a.detail_no = nvl(nvl(p_detail_no, b.detail_no), 0)
                       and a.law_file_no = b.law_file_no
                       and a.detail_no = nvl (b.detail_no, 0)
                       and b.sf_total_type in ('11', '12', '50')
                       and a.trans_no = b.trans_no
                       and b.batch_id is not null
                       and b.ticket_date <= nvl(p_date_parity, b.ticket_date)
                       and sign(a.amount) = 1
                   );
        exception when others then
            v_amount := 0;
        end;

        return v_amount;

    end get_reserve_paid_amount;

    function get_reserve_return_amount(p_law_file_no varchar2,
                                       p_detail_no number,
                                       p_date_parity date,
                                       p_type number) return number
    is
        v_amount number;
    begin
        begin
            select sum(nvl(paid_amount, 0))
              into v_amount
              from (select sum(decode(b.sf_total_type,
                                     '35', a.amount * 118 / 98,
                                     a.amount)
                           ) paid_amount
                      from koc_law_trans_detail_sub a,
                           koc_law_trans_detail b
                     where a.law_file_no = p_law_file_no
                       and a.accessory_type = p_type
                       and a.detail_no = nvl(nvl(p_detail_no, b.detail_no), 0)
                       and a.law_file_no = b.law_file_no
                       and b.sf_total_type = '35'
                       and a.trans_no = b.trans_no
                       and b.batch_id is not null
                       and b.ticket_date <= nvl(p_date_parity, b.ticket_date)
                       and sign(a.amount) = -1
                     union all
                    select sum(decode(b.sf_total_type,
                                      '50', decode(b.document_type,
                                                   'SMM', a.amount * 118 / 98,
                                                   a.amount),
                                     a.amount)
                           ) paid_amount
                      from koc_law_trans_detail_sub a,
                           koc_law_trans_detail b
                     where a.law_file_no = p_law_file_no
                       and a.accessory_type = p_type
                       and a.detail_no = nvl(nvl(p_detail_no, b.detail_no), 0)
                       and a.law_file_no = b.law_file_no
                       and a.detail_no = nvl (b.detail_no, 0)
                       and b.sf_total_type in ('11', '12', '50')
                       and a.trans_no = b.trans_no
                       and b.batch_id is not null
                       and b.ticket_date <= nvl(p_date_parity, b.ticket_date)
                       and sign(a.amount) = -1
                   );
        exception when others then
            v_amount := 0;
        end;

        return v_amount;

    end get_reserve_return_amount;

    --Teminat Mektubu kaydetme
    procedure save_assurance_letter_list(p_law_file_no in varchar2,
                                         p_letter_rec in law_assurance_letter_typ,
                                         p_claim_list in law_assurance_claim_tbl,
                                         p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_status varchar2(10);
        v_opus_date date := pme_public.opus_date;
        v_sf_total_type varchar2(5);
        v_control number;
        v_trans_no number;
        v_file_close_date date;
        v_type number;
        v_index number;
        v_last_type number;
        v_typelist number;
        v_sifir_muallak number := 0;
        v_func_amount number;
        v_paid_amount number;
        v_returned_amount number;
        v_total_calc_amount number := 0;
        v_total_prop number := 0;
        v_ratio number;
        v_offset_amount number := 0;
        v_calc_amount number;
        v_payment_amount number;
        v_total_payment_amount number;
        v_fark number;
        v_total_amount number;
        v_swift_code varchar2(3);
        v_currency_exchange_rate number;

        v_reserve_list law_reserve_detail_tbl;
        v_reserve_rec law_reserve_detail_typ;

        i number;

        cursor c_claims
        is

        select *
          from table(p_claim_list);

    begin

        if p_law_file_no is null then
            v_error_msg := 'Hukuk Dosya Numarasý boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_ASSURANCE_LETTER_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                p_process_results
            );
            return;
        end if;

        if p_letter_rec is null then
            return;

        elsif p_letter_rec.letter_no is null then
            v_error_msg := 'Teminat Mektubu No boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SAVE_ASSURANCE_LETTER_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                p_process_results
            );
            return;
        end if;

        begin
            select status
              into v_status
              from koc_law_bank_ass_letter
             where law_file_no = p_law_file_no
               and letter_no = p_letter_rec.letter_no;

        exception when others then
            v_status := null;
        end;

        if v_status is not null then
            v_error_msg := 'Ayný Teminat Mektubu iþin tek iþlem yapabilirsiniz.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'SAVE_ASSURANCE_LETTER_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                p_process_results
            );
            return;
        end if;

        if p_letter_rec.status_type = 'I' or p_letter_rec.status_type is null then

            begin
                select status
                  into v_status
                  from koc_law_bank_ass_letter
                 where law_file_no = p_law_file_no
                   and letter_no = p_letter_rec.letter_no;

                update koc_law_bank_ass_letter
                   set letter_amount = p_letter_rec.letter_amount,
                       letter_date = p_letter_rec.letter_date,
                       user_name = p_letter_rec.user_name,
                       process_date = v_opus_date,
                       bank_code = p_letter_rec.bank_code,
                       tzm_amount = p_letter_rec.compensation_amount,
                       status = decode(p_letter_rec.status_type, 'I', 'IADE', 'T', 'TAZMÝN', null)
                 where law_file_no = p_law_file_no
                   and letter_no = p_letter_rec.letter_no;

            exception when others then

                insert into koc_law_bank_ass_letter(
                    law_file_no,
                    letter_no,
                    letter_amount,
                    letter_date,
                    user_name,
                    process_date,
                    bank_code,
                    tzm_amount,
                    status
                )
                values
                (
                    p_law_file_no,
                    p_letter_rec.letter_no,
                    p_letter_rec.letter_amount,
                    p_letter_rec.letter_date,
                    p_letter_rec.user_name,
                    v_opus_date,
                    p_letter_rec.bank_code,
                    p_letter_rec.compensation_amount,
                    decode(p_letter_rec.status_type, 'I', 'IADE', 'T', 'TAZMÝN', null)
                );
            end;

        elsif p_letter_rec.status_type = 'T' then

            if p_claim_list is null then
                v_error_msg := 'Hasar Listesi boþ olamaz.';

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_ASSURANCE_LETTER_LIST',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                    p_process_results
                );
                return;
            end if;

            begin
                select status
                  into v_status
                  from koc_law_bank_ass_letter
                 where law_file_no = p_law_file_no
                   and letter_no = p_letter_rec.letter_no;

                if v_status is not null then
                    v_error_msg := 'Ayný Teminat Mektubu iþin tek iþlem yapabilirsiniz.';

                    process_result(
                        3, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_ASSURANCE_LETTER_LIST',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                        p_process_results
                    );
                    return;

                else

                    update koc_law_bank_ass_letter
                       set letter_amount = p_letter_rec.letter_amount,
                           letter_date = p_letter_rec.letter_date,
                           user_name = p_letter_rec.user_name,
                           process_date = v_opus_date,
                           bank_code = p_letter_rec.bank_code,
                           tzm_amount = p_letter_rec.compensation_amount,
                           status = decode(p_letter_rec.status_type, 'I', 'IADE', 'T', 'TAZMÝN', null)
                     where law_file_no = p_law_file_no
                       and letter_no = p_letter_rec.letter_no;
                end if;

            exception when others then

                insert into koc_law_bank_ass_letter(
                    law_file_no,
                    letter_no,
                    letter_amount,
                    letter_date,
                    user_name,
                    process_date,
                    bank_code,
                    tzm_amount,
                    status
                )
                values
                (
                    p_law_file_no,
                    p_letter_rec.letter_no,
                    p_letter_rec.letter_amount,
                    p_letter_rec.letter_date,
                    p_letter_rec.user_name,
                    v_opus_date,
                    p_letter_rec.bank_code,
                    p_letter_rec.compensation_amount,
                    decode(p_letter_rec.status_type, 'I', 'IADE', 'T', 'TAZMÝN', null)
                );
            end;

            if instr(p_law_file_no, 'HL', 1) > 0   then
                v_sf_total_type := '50';
                v_typelist := 0;
            else
                v_sf_total_type := '11';
                v_typelist := 123456;
            end if;

            select nvl(sum(compensation_amount), 0)
              into v_control
              from table(p_claim_list);

            if p_letter_rec.compensation_amount != v_control then
                v_error_msg := 'Girdiðiniz tutarlar teminat mektubu tutarý ile farklýdýr. Teminat mektubu tutarý: '||p_letter_rec.compensation_amount;

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_ASSURANCE_LETTER_LIST',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                    p_process_results
                );
                return;
            end if;

            begin
                select file_close_date
                  into v_file_close_date
                  from koc_law_bases
                 where law_file_no = p_law_file_no;
            exception when others then
                v_file_close_date := null;
            end;

            for rec_claim in c_claims loop
                v_total_payment_amount := 0;
                v_offset_amount := 0;
                v_payment_amount := 0;
                v_total_calc_amount := 0;

                if nvl(rec_claim.compensation_amount, 0) > 0 then
                    select nvl(max(trans_no),0) + 1
                      into v_trans_no
                      from koc_law_trans_detail
                     where law_file_no = p_law_file_no;

                    begin
                        insert into koc_law_trans_detail
                        (
                            law_file_no,
                            trans_no,
                            ticket_date,
                            trans_amount,
                            sf_total_type,
                            swift_code,
                            user_name,
                            process_date,
                            explanation,
                            creditor_name,
                            claim_id,
                            sf_no,
                            detail_no,
                            is_transfered,
                            correspondent_bank
                        )
                        values
                        (
                            p_law_file_no,
                            v_trans_no,
                            v_opus_date,
                            rec_claim.compensation_amount,
                            v_sf_total_type,
                            base_swift_code,
                            p_letter_rec.user_name,
                            v_opus_date,
                            p_letter_rec.letter_no||' nolu teminat mektubu paraya çevrildi.',
                            p_letter_rec.letter_no||' nolu teminat mektubu paraya çevrildi.',
                            rec_claim.claim_id,
                            rec_claim.sf_no,
                            rec_claim.detail_no,
                            0,
                            p_letter_rec.bank_code
                        );  --TASK:189473_1

                        if rec_claim.reserve_detail_list is not null and
                           rec_claim.reserve_detail_list.count > 0
                        then

                            v_reserve_list := rec_claim.reserve_detail_list;

                            select nvl(sum(manuel_amount), 0)
                              into v_control
                              from table(rec_claim.reserve_detail_list);

                            if rec_claim.compensation_amount != v_control then
                                v_error_msg := 'Manuel Muallak Kayýtlarýnda hata bulunmaktadýr, lütfen sýfýrlama yapýnýz!';

                                process_result(
                                    5, --p_process_no
                                    0,
                                    9,
                                    -1,
                                    'SAVE_ASSURANCE_LETTER_LIST',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                                    p_process_results
                                );
                                return;
                            end if;


                            for i in 1..v_reserve_list.count loop
                                v_reserve_list(i).will_paid_amount := v_reserve_list(i).manuel_amount;
                            end loop;

                            v_total_calc_amount := rec_claim.compensation_amount;

                        else
                            v_reserve_list := law_reserve_detail_tbl();

                            for i in 1..length(v_typelist)
                            loop
                                v_reserve_list.extend;
                                v_reserve_rec := law_reserve_detail_typ(null,null,null,null,null,null,null,null,null,null);
                                v_type := substr(v_typelist, i, 1);

                                if v_type = 0 then
                                    v_index := 1;
                                else
                                    v_index := v_type;
                                end if;

                                if (v_file_close_date is null) then -- Kapalý olmayan dosyalar için loop

                                    if v_sifir_muallak = 0 then

                                        if v_type != 0 then
                                            v_func_amount := koc_law_reserve_utils.execute_function
                                                                    (v_type,
                                                                     p_law_file_no,
                                                                     rec_claim.detail_no,
                                                                     v_opus_date);
                                        else
                                            v_func_amount := rec_claim.compensation_amount;
                                        end if;
                                    end if;

                                    --varsa ödenen tutar bulma
                                    v_paid_amount := get_reserve_paid_amount(p_law_file_no,
                                                                             null,-- detail_no,
                                                                             null, -- date_parity
                                                                             v_type);

                                    --varsa iade tutarý bulma
                                    v_returned_amount := get_reserve_return_amount(p_law_file_no,
                                                                                       null,-- detail_no,
                                                                                       null, -- date_parity
                                                                                       v_type);

                                    v_calc_amount := ROUND(nvl(v_func_amount, 0) - nvl(v_paid_amount, 0) - nvl(v_returned_amount,0 ), 2);

                                else
                                    if v_type != 0 then

                                        KOC_LAW_RESERVE_UTILS.EXECUTE_LAW_FILE_CLOSED
                                        (
                                            v_type,
                                            p_law_file_no,
                                            rec_claim.detail_no,
                                            v_func_amount,
                                            v_paid_amount,
                                            v_returned_amount,
                                            v_swift_code,
                                            v_currency_exchange_rate
                                        );

                                        v_calc_amount := ROUND(nvl(v_func_amount, 0) - nvl(v_paid_amount, 0) - nvl(v_returned_amount, 0), 2);
                                    else -- Masraflarda history'ye bakmaya gerek yok
                                        v_calc_amount := ROUND(nvl(rec_claim.compensation_amount, 0), 2);
                                    end if;
                                end if;

                                -- Güncel muallak negatif olmaz, sýfýr olur
                                if sign(v_calc_amount) = -1 then
                                    v_calc_amount := 0;
                                end if;

                                if v_type = 1 and v_calc_amount = 0  then
                                    v_reserve_rec.will_paid_amount := 0;
                                    v_sifir_muallak := 1;

                                    --OPU001.MSG(160270,'I','Dikkat: Güncel muallak tutarý 0 oldugu için ferilere eþit daðýlým yapýlacaktýr');

                                elsif v_type != 1 and v_sifir_muallak = 1 then
                                    v_reserve_rec.will_paid_amount := rec_claim.compensation_amount/length(replace(v_typelist, 1, null));
                                end if;

                                if v_sifir_muallak  = 0 then

                                    if v_type != 3 then
                                        v_reserve_rec.will_paid_amount := v_calc_amount;

                                        v_total_calc_amount := v_total_calc_amount + v_calc_amount;
                                        v_total_prop := v_total_prop + (rec_claim.compensation_amount * nvl(v_calc_amount, 0));
                                    else
                                        v_reserve_rec.will_paid_amount := 0;
                                    end if;

                                end if;

                                v_reserve_list(v_index) := v_reserve_rec;
                            end loop;

                            if v_sifir_muallak = 0 then
                                v_total_prop := v_total_prop / v_total_calc_amount;
                            end if;
                        end if;

                        if v_sifir_muallak = 0 then
                            v_ratio := rec_claim.compensation_amount / v_total_calc_amount;

                            if instr(v_typelist, 1) != 0 then
                                if v_ratio > 1 then
                                    v_ratio := v_ratio*v_reserve_list(1).will_paid_amount - v_reserve_list(1).will_paid_amount;
                                end if;
                            end if;
                        end if;

                        for i in 1..length(v_typelist) loop

                            v_type := substr(v_typelist, i, 1);

                            if v_type = 0 then
                                v_index := 1;
                            else
                                v_index := v_type;
                            end if;

                            if v_sifir_muallak = 0  then
                                v_payment_amount := ROUND(v_reserve_list(v_index).will_paid_amount * v_ratio, 2);

                                if nvl(v_offset_amount, 0) != 0 then
                                    if v_type = 1 then
                                        v_payment_amount := round(v_reserve_list(v_index).will_paid_amount, 2);
                                    elsif v_type = 4 then
                                        v_payment_amount := round(v_payment_amount + v_offset_amount, 2);
                                    end if;
                                end if;

                                v_last_type := v_type;

                                --> Kuruþ Farký
                                v_total_payment_amount := v_payment_amount + nvl(v_total_payment_amount, 0);
                            else
                                if v_type = 1 then
                                    v_payment_amount := 0;
                                else
                                    v_payment_amount := round(v_reserve_list(v_index).will_paid_amount, 2);
                                    v_total_payment_amount := nvl(v_payment_amount, 0) + nvl(v_total_payment_amount, 0);
                                    v_last_type := v_type;
                                end if;
                            end if;

                            if v_payment_amount != 0 then
                                insert into koc_law_trans_detail_sub values(
                                p_law_file_no,
                                v_trans_no,
                                nvl(rec_claim.detail_no,0),
                                v_type,
                                v_payment_amount,
                                v_opus_date,
                                p_letter_rec.user_name,
                                v_opus_date,
                                p_letter_rec.user_name
                                );
                            end if;
                        end loop;

                        -- Kuruþ Farký Düzeltme
                        if ABS(rec_claim.compensation_amount - v_total_payment_amount) >= 0.01 then
                            v_fark := rec_claim.compensation_amount - v_total_payment_amount;

                            update koc_law_trans_detail_sub
                               set amount = amount + v_fark
                            where law_file_no = p_law_file_no
                              and trans_no = v_trans_no
                              and detail_no = nvl(rec_claim.detail_no,0)
                              and accessory_type = v_last_type;
                        end if;

                        -- Son kontrol
                        select nvl(sum(amount), 0)
                          into v_total_amount
                          from koc_law_trans_detail_sub
                         where law_file_no = p_law_file_no
                           and trans_no = v_trans_no
                           and detail_no = nvl(rec_claim.detail_no, 0);

                        if ABS(round(nvl(v_total_amount, 0), 2) - round(nvl(rec_claim.compensation_amount, 0), 2)) >= 0.01 then

                            rollback;
                            v_error_msg := 'Feri daðýlýmý toplamýyla ödenen miktar uyuþmamaktadýr, Lütfen kontrol ediniz!';

                            process_result(
                                6, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_ASSURANCE_LETTER_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
                                p_process_results
                            );

                            return;
                        end if;
                    end;
                end if;

            end loop;

        end if;

        --java tarafýndaki iþlerin yarým kalmamasý için commit prosedürün çaðrýldýðý yerde yapýlacak
--    exception when others then
--        rollback;
--        v_error_msg := 'Teminat mektubu Hasar Detayý kaydedilirken hata oldu: '||substr(SQLERRM, 1, 950);
--
--        process_result(
--            99, --p_process_no
--            0,
--            9,
--            -1,
--            'SAVE_ASSURANCE_LETTER_LIST',
--            v_error_msg,
--            v_error_msg,
--            null,
--            null,
--            'ALZ_LITIGATION_UTILS.SAVE_ASSURANCE_LETTER_LIST',
--            p_process_results
--        );
--        return;
    end save_assurance_letter_list;

    --Teminat Mektubu Hasar Dosyalarý (Teminat Tanzim Daðýlýmý)
    procedure get_assurance_claim_list(p_law_file_no in varchar2,
                                       p_compensation_amount in number,
                                       p_list out law_assurance_claim_tbl,
                                       p_process_results out customer.process_result_table)
    is

        cursor c1 is

        select lb.law_file_type,
               decode(lb.law_file_type, 'L', 50, 11) sf_total_type,
               lb.file_close_date,
               lbd.detail_no,
               lbd.claim_id,
               lbd.sf_no,
               lbd.cover_code,
               cs.ext_reference
          from koc_law_bases lb,
               koc_law_bases_detail lbd,
               clm_subfiles cs
         where lb.law_file_no = p_law_file_no
           and lb.law_file_no = lbd.law_file_no
           and lbd.claim_id = cs.claim_id(+)
           and lbd.sf_no = cs.sf_no(+)
        --Hasarsýzlar Dahil Edildi:
        union all
        select null,
               null,
               null,
               null,
               null,
               null,
               null,
               lb.law_file_no
          from koc_law_bases lb
         where lb.law_file_no = p_law_file_no
           and not exists (select 1 from koc_law_bases_detail where law_file_no = lb.law_file_no)
        order by detail_no;

        v_claim_rec law_assurance_claim_typ;
        v_ind number := 0;
        v_error_msg varchar2(1000);

        v_total_ma_sa number;
        v_opus_date date := pme_public.opus_date;
    begin
        p_list := law_assurance_claim_tbl();

        for rec1 in c1 loop
            v_claim_rec := law_assurance_claim_typ(rec1.detail_no, rec1.claim_id, rec1.sf_no, rec1.ext_reference, null, null, null, null);
            p_list.extend;
            v_ind := v_ind + 1;

            if rec1.detail_no is null then
                v_claim_rec.compensation_amount := p_compensation_amount;
            else
                begin
                    select distinct cover_name --not: desc_id'den tr'yi sec, distinct'i kaldir
                      into v_claim_rec.cover_name
                      from cfg_v_prod_covers_api
                     where cover_code = rec1.cover_code;
                exception when others then
                    select cover_name
                      into v_claim_rec.cover_name
                      from koc_law_bases_detail
                     where law_file_no = p_law_file_no
                       and detail_no = rec1.detail_no;

--                    v_error_msg := 'Hasar dosyasýna baðlý teminat bulunamadý.';
--
--                    process_result(
--                        1, --p_process_no
--                        0,
--                        9,
--                        -1,
--                        'GET_ASSURANCE_CLAIM_LIST',
--                        v_error_msg,
--                        v_error_msg,
--                        null,
--                        null,
--                        'ALZ_LITIGATION_UTILS.GET_ASSURANCE_CLAIM_LIST',
--                        p_process_results
--                    );
--                    return;
                end;

                if rec1.file_close_date is not null then
                    select nvl(sum(amount), 0)
                      into v_total_ma_sa
                      from alz_law_reserve_history
                     where law_file_no = p_law_file_no
                       and accessory_type = decode(rec1.sf_total_type, '11', 1, '50', 8, 1);
                else
                    if rec1.sf_total_type= '11' then
                        v_total_ma_sa := koc_law_reserve_utils.MA_HESAPLA(p_law_file_no, v_opus_date);
                    elsif rec1.sf_total_type = '50' then
                        v_total_ma_sa := koc_law_reserve_utils.SA_HESAPLA(p_law_file_no, v_opus_date);
                    else
                        v_total_ma_sa := 0;
                    end if;
                end if;

                if nvl(v_total_ma_sa, 0) = 0 then
                    v_claim_rec.compensation_amount := koc_law_utils.proporsiyon_dagilim(p_law_file_no,
                                                                                         rec1.detail_no,
                                                                                         p_compensation_amount);
                else
                    if rec1.sf_total_type = '11' THEN
                        v_claim_rec.compensation_amount := koc_law_reserve_utils.ma_proporsiyon(p_law_file_no,
                                                                                                rec1.detail_no,
                                                                                                p_compensation_amount,
                                                                                                v_opus_date);
                    elsif rec1.sf_total_type = '50' then
                        v_claim_rec.compensation_amount := koc_law_reserve_utils.sa_proporsiyon(p_law_file_no,
                                                                                                rec1.detail_no,
                                                                                                p_compensation_amount,
                                                                                                v_opus_date);
                    end if;
                end if;
            end if;

            p_list(v_ind) := v_claim_rec;
        end loop;

    end get_assurance_claim_list;

    procedure get_assurance_reserve_list(p_law_file_no in varchar2,
                                         p_claim in law_assurance_claim_typ,
                                         p_list out law_reserve_detail_tbl,
                                         p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_rec law_reserve_detail_typ;

        v_type_seq number := 1;
        v_law_file_type varchar2(3);
        v_file_close_date date;
        v_opus_date date := pme_public.opus_date;

        v_amount number;
        v_sifir_muallak number := 0;
        v_net_amount number;
        v_will_paid_sum number;
        v_swift_code varchar2(3);
        v_currency_exchange_rate number;
        v_offset_amount number := 0;

    begin
        if p_law_file_no is null then
            v_error_msg := 'Hukuk dosya numarasý boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'GET_ASS_CLAIM_RESERVE_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.GET_ASS_CLAIM_RESERVE_LIST',
                p_process_results
            );
            return;
        end if;

        if p_claim is null then
            v_error_msg := 'Teminat Mektubu Hasar Dosyasý bilgileri boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'GET_ASS_CLAIM_RESERVE_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.GET_ASS_CLAIM_RESERVE_LIST',
                p_process_results
            );
            return;
        end if;

        begin
            select law_file_type,
                   file_close_date
              into v_law_file_type,
                   v_file_close_date
              from koc_law_bases
             where law_file_no = p_law_file_no;
        exception when others then
            v_error_msg := 'Hukuk dosya bilgileri bulunamadý.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'GET_ASS_CLAIM_RESERVE_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.GET_ASS_CLAIM_RESERVE_LIST',
                p_process_results
            );
            return;
        end;

        if nvl(v_law_file_type, 'X') != 'A' then
            v_error_msg := 'Lehte dosyalarda karþý taraf hesabýnda feri hespalamasý bulunmamaktadýr.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'GET_ASS_CLAIM_RESERVE_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.GET_ASS_CLAIM_RESERVE_LIST',
                p_process_results
            );
            return;
        end if;

        p_list := law_reserve_detail_tbl();

        while v_type_seq <= 6 loop
            p_list.extend;
            v_rec := law_reserve_detail_typ(null,null,null,null,null,null,null,null,null,null);

            v_rec.reserve_seq := v_type_seq;

            begin
                select explanation
                  into v_rec.reserve_type
                  from koc_clm_lookup
                 where type = 122
                   and icode = v_type_seq;
            exception when others then
                v_rec.reserve_type := null;
            end;

            v_amount := p_claim.compensation_amount;

            --kapalý olmayan dosyalar için
            if v_file_close_date is null then

                --varsa ödenen tutar bulma
                v_rec.paid_amount := get_reserve_paid_amount(p_law_file_no,
                                                             p_claim.detail_no,
                                                             null, --date_parity
                                                             v_type_seq);

                --varsa iade tutarý bulma
                v_rec.returned_amount := get_reserve_return_amount(p_law_file_no,
                                                                    p_claim.detail_no,
                                                                    null, --date_parity
                                                                    v_type_seq);

                v_rec.estimated_claim_amount := koc_law_reserve_utils.execute_function(
                                                    v_type_seq,
                                                    p_law_file_no,
                                                    p_claim.detail_no,
                                                    v_opus_date);

                if v_sifir_muallak = 0 then
                    if v_type_seq != 3 then
                        v_net_amount := nvl(nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) - nvl(v_rec.returned_amount,0), 0);

                        if sign(v_net_amount) = -1 then
                            v_net_amount := 0;
                        end if;

                        v_will_paid_sum := round(nvl(v_will_paid_sum, 0) + v_net_amount, 2);
                    end if;
                end if;

                v_rec.current_reserve_distribution := nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) - nvl(v_rec.returned_amount,0);

                if sign(v_rec.current_reserve_distribution) = -1 then
                    v_rec.current_reserve_distribution := 0;
                end if;

            --kapalý dosyalar için
            else
                koc_law_reserve_utils.execute_law_file_closed(
                    v_type_seq,
                    p_law_file_no,
                    p_claim.detail_no,
                    v_rec.estimated_claim_amount,
                    v_rec.paid_amount,
                    v_rec.returned_amount,
                    v_swift_code,
                    v_currency_exchange_rate
                );

                v_rec.current_reserve_distribution := nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) + nvl(v_rec.returned_amount, 0);

                if v_type_seq != 3 then
                    v_net_amount := nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) - nvl(v_rec.returned_amount, 0);

                    if sign(v_net_amount) = -1 then
                        v_net_amount := 0;
                    end if;

                    v_will_paid_sum := round(nvl(v_will_paid_sum, 0) + v_net_amount, 2);
                end if;
            end if;

            if v_type_seq = 1 and nvl(v_net_amount, 0) <= 0 then
--                OPU001.MSG(160270,'I','Dikkat! Güncel muallak tutari : 0');
                v_rec.will_paid_amount := 0;
                v_sifir_muallak := 1;
                v_net_amount := v_amount;

            elsif v_type_seq != 1 and v_sifir_muallak = 1 then
                v_rec.will_paid_amount := v_amount/5; --length(l_typelist)-1
            end if;


            p_list(v_type_seq) := v_rec;
            v_type_seq := v_type_seq + 1;
        end loop;

        --Otomatik Ödenecek Tutar hesabý için yeniden loop
        v_type_seq := 1;

        while v_type_seq <= 6 loop

            if v_sifir_muallak = 0 then
                if v_type_seq = 3 then
                    p_list(v_type_seq).will_paid_amount := 0;
                    v_net_amount := 0;
                elsif v_type_seq = 0 then
                    p_list(v_type_seq).will_paid_amount := v_amount;
                else
                    v_net_amount := nvl(p_list(v_type_seq).estimated_claim_amount, 0) - nvl(p_list(v_type_seq).paid_amount, 0) - nvl(p_list(v_type_seq).returned_amount, 0);

                    if sign(v_net_amount) = -1 then
                        v_net_amount := 0;
                    end if;
                end if;

                p_list(v_type_seq).will_paid_amount := round(v_amount * (v_net_amount) / v_will_paid_sum, 2);

                if v_type_seq = 1 and (p_list(v_type_seq).will_paid_amount > p_list(v_type_seq).current_reserve_distribution) then
                    v_offset_amount := p_list(v_type_seq).will_paid_amount - p_list(v_type_seq).current_reserve_distribution;
                    p_list(v_type_seq).will_paid_amount := p_list(v_type_seq).current_reserve_distribution;
                end if;


                if v_type_seq = 4 and nvl(v_offset_amount, 0) != 0  then
                    p_list(v_type_seq).will_paid_amount := p_list(v_type_seq).will_paid_amount  + v_offset_amount;
                end if;

            elsif v_sifir_muallak = 1 then
                if v_type_seq = 1 then
                    p_list(v_type_seq).will_paid_amount := 0;
                else
                    p_list(v_type_seq).will_paid_amount := v_amount/5;
                end if;
            end if;

            p_list(v_type_seq).manuel_amount := round(nvl(p_list(v_type_seq).manuel_amount, p_list(v_type_seq).will_paid_amount), 2);

            v_type_seq := v_type_seq + 1;
        end loop;

        select sum(will_paid_amount)
          into v_will_paid_sum
          from table(p_list);

        if nvl(v_will_paid_sum, 0) != nvl(v_amount, 0) then
            v_type_seq := 6;
            while v_type_seq > 0 loop
                if p_list(v_type_seq).will_paid_amount != 0 then
                    p_list(v_type_seq).will_paid_amount := p_list(v_type_seq).will_paid_amount + (v_amount - nvl(v_will_paid_sum, 0));
                    p_list(v_type_seq).manuel_amount := p_list(v_type_seq).will_paid_amount;
                    exit;
                end if;

                v_type_seq := v_type_seq - 1;
            end loop;

        end if;
    exception when others then
        v_error_msg := 'Feriler hesaplanirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'GET_ASS_CLAIM_RESERVE_LIST',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.GET_ASS_CLAIM_RESERVE_LIST',
            p_process_results
        );
        return;

    end get_assurance_reserve_list;

    function get_reserve_policy_bulk(p_law_file_no in varchar2, p_detail_no in number default null) return law_reserve_policy_tbl
    is
        v_rec law_reserve_policy_typ;
        v_list law_reserve_policy_tbl;

        cursor c1 is

        select c.policy_ref,
               cs.ext_reference,
               a.law_file_no,
               a.related_law_file_no,
               a.law_file_type,
               a.law_type_exp,
               f.branch_name
          from koc_law_bases a,
               koc_law_bases_detail b,
               clm_pol_bases c,
               koc_ocp_pol_contracts_ext d,
               koc_oc_branches f,
               clm_subfiles cs
         where 1 = 1
           and a.law_file_no = p_law_file_no
           and a.law_file_no = b.law_file_no(+)
           and b.claim_id = cs.claim_id(+)
           and b.sf_no = cs.sf_no(+)
           and b.claim_id = c.claim_id(+)
           and c.contract_id = d.contract_id(+)
           and d.branch_ext_ref = f.ext_reference(+);

        cursor c2 is

        select c.policy_ref,
               cs.ext_reference,
               a.law_file_no,
               a.related_law_file_no,
               a.law_file_type,
               a.law_type_exp,
               f.branch_name
          from alz_law_v_bases a,
               alz_law_v_bases_detail b,
               clm_pol_bases c,
               koc_ocp_pol_contracts_ext d,
               koc_oc_branches f,
               clm_subfiles cs
       where b.law_file_no = p_law_file_no
         and b.detail_no = p_detail_no
         and b.law_file_no = a.law_file_no
         and b.claim_id = cs.claim_id(+)
         and b.sf_no = cs.sf_no(+)
         and b.claim_id = c.claim_id
         and c.contract_id = d.contract_id
         and d.branch_ext_ref = f.ext_reference;

    begin
        v_list := law_reserve_policy_tbl();

        if p_detail_no is null then

            for rec in c1 loop
                v_list.extend();

                v_rec := law_reserve_policy_typ(
                    rec.policy_ref,
                    rec.ext_reference,
                    rec.law_file_no,
                    rec.related_law_file_no,
                    rec.law_file_type,
                    rec.law_type_exp,
                    rec.branch_name
                );

                v_list(v_list.count) := v_rec;

            end loop;
        else

            for rec in c2 loop
                v_list.extend();

                v_rec := law_reserve_policy_typ(
                    rec.policy_ref,
                    rec.ext_reference,
                    rec.law_file_no,
                    rec.related_law_file_no,
                    rec.law_file_type,
                    rec.law_type_exp,
                    rec.branch_name
                );

                v_list(v_list.count) := v_rec;

            end loop;

        end if;

/*
        if p_detail_no is null then
            select LAW_RESERVE_POLICY_TYP(
                       c.policy_ref,
                       cs.ext_reference,
                       a.law_file_no,
                       a.related_law_file_no,
                       a.law_file_type,
                       a.law_type_exp,
                       f.branch_name
--                       a.court_revenue,
--                       a.lawyer_foreclosure,
--                       a.lawyer_court,
--                       a.lawyer_payment,
--                       a.interest_type,
--                       b.detail_no
                   ) BULK COLLECT
              into v_list
              from koc_law_bases a,
                   koc_law_bases_detail b,
                   clm_pol_bases c,
                   koc_ocp_pol_contracts_ext d,
                   koc_oc_branches f,
                   clm_subfiles cs
             where 1 = 1
               and a.law_file_no = p_law_file_no
               and a.law_file_no = b.law_file_no(+)
               and b.claim_id = cs.claim_id(+)
               and b.sf_no = cs.sf_no(+)
               and b.claim_id = c.claim_id(+)
               and c.contract_id = d.contract_id(+)
               and d.branch_ext_ref = f.ext_reference(+);
        else

            select LAW_RESERVE_POLICY_TYP(
                       c.policy_ref,
                       cs.ext_reference,
                       a.law_file_no,
                       a.related_law_file_no,
                       a.law_file_type,
                       a.law_type_exp,
                       f.branch_name
--                       a.court_revenue,
--                       a.lawyer_foreclosure,
--                       a.lawyer_court,
--                       a.lawyer_payment,
--                       a.interest_type,
--                       b.detail_no
                   ) BULK COLLECT
              into v_list
              from alz_law_v_bases a,
                   alz_law_v_bases_detail b,
                   clm_pol_bases c,
                   koc_ocp_pol_contracts_ext d,
                   koc_oc_branches f,
                   clm_subfiles cs
             where b.law_file_no = p_law_file_no
               and b.detail_no = p_detail_no
--melih - yukarýdaki 2 alan ile tekillik saðlanabiliyor
--               and b.claim_id =
--               and b.sf_no =
               and b.law_file_no = a.law_file_no
               and b.claim_id = cs.claim_id(+)
               and b.sf_no = cs.sf_no(+)
               and b.claim_id = c.claim_id
               and c.contract_id = d.contract_id
               and d.branch_ext_ref = f.ext_reference;

--melih - indemnity_amount alaný kullanýlmadýðý için bu kýsým kaldýrýldý
--            koc_law_utils.proporsiyon(:POLICY_INFO.law_file_no, :POLICY_INFO.detail_no,
--                                                   round(interest_amount,2),
--                                                   round(:policy_info.lawyer_payment,2),
--                                                   round(:policy_info.court_revenue,2),
--                                                   indemnity_amount1,
--                                                   dummy, dummy, dummy, dummy, dummy, dummy, dummy, dummy);
        end if;
*/
        return v_list;
    end get_reserve_policy_bulk;

    function get_reserve_detail_bulk(p_law_file_no varchar2, p_detail_no number default null, p_type varchar2) return law_reserve_detail_tbl
    is

        v_error_msg varchar2(1000);
        v_type_seq number := 1;

        v_file_close_date date;
        v_date_parity date;
        v_opus_date date := pme_public.opus_date;
        v_date date;
        v_currency_exchange_rate number;
        v_swift_code varchar2(4);

        v_rec_sort_type koc_law_reserve_utils.rec_sort_type;
        v_law_base_dtl_records koc_law_reserve_utils.koc_law_bases_detail_type;

        v_estimated_claim_amount number;
        v_paid_amount number;
        v_returned_amount number;

        v_list law_reserve_detail_tbl;
        v_rec law_reserve_detail_typ;
    begin

        begin
            select file_close_date
              into v_file_close_date
              from koc_law_bases
             where law_file_no = p_law_file_no;
        exception when others then
            v_file_close_date := null;
        end;

        v_list := law_reserve_detail_tbl();

        while v_type_seq <= 7 loop
            v_list.extend;
            v_rec := law_reserve_detail_typ(null,null,null,null,null,null,null,null,null,null);

            v_rec.reserve_seq := v_type_seq;

            begin
                select explanation
                  into v_rec.reserve_type
                  from koc_clm_lookup
                 where type = 122
                   and icode = v_type_seq;
            exception when others then
                v_rec.reserve_type := null;
            end;

            --kapalý olmayan dosyalar için
            if v_file_close_date is null then

                if p_type = 'HASAR' then
                    if koc_law_reserve_utils.get_bordro = 0 then
                        v_date_parity := sysdate;
                    else
                        v_date_parity := koc_law_reserve_utils.get_bordro_date;
                    end if;

                    v_date := v_date_parity;
                else
                    v_date := v_opus_date;
                end if;

                --varsa ödenen tutar bulma
                v_rec.paid_amount := round(get_reserve_paid_amount(p_law_file_no,
                                                             p_detail_no,
                                                             v_date_parity,
                                                             v_type_seq), 2);

                --varsa iade tutarý bulma
                v_rec.returned_amount := round(get_reserve_return_amount(p_law_file_no,
                                                                    p_detail_no,
                                                                    v_date_parity,
                                                                    v_type_seq), 2);

                koc_law_reserve_utils.muallak_asil_get_data_lawfile(
                    p_law_file_no,
                    p_detail_no,
                    v_rec_sort_type,
                    v_date,
                    v_law_base_dtl_records);

                v_currency_exchange_rate := v_law_base_dtl_records(1).currency_exhange_rate;
                v_swift_code             := v_law_base_dtl_records(1).doviz_kodu;

                v_rec.estimated_claim_amount := round(koc_law_reserve_utils.execute_function_bordro(
                                                    v_type_seq,
                                                    p_law_file_no,
                                                    p_detail_no,
                                                    v_date,
                                                    v_law_base_dtl_records), 2);

                v_rec.current_reserve_distribution := round(nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) - nvl(v_rec.returned_amount,0), 2);

                if sign(v_rec.current_reserve_distribution) = -1 then
                    v_rec.current_reserve_distribution := 0;
                    v_rec.currency_amount := 0;
                end if;

                if p_type = 'HASAR' then
                    v_rec.currency_amount := round(v_rec.current_reserve_distribution * v_currency_exchange_rate, 2);
                end if;

            --kapalý dosyalar için
            else
                koc_law_reserve_utils.execute_law_file_closed(
                    v_type_seq,
                    p_law_file_no,
                    p_detail_no,
                    v_estimated_claim_amount,
                    v_paid_amount,
                    v_returned_amount,
                    v_swift_code,
                    v_currency_exchange_rate);

                    v_rec.estimated_claim_amount := round(nvl(v_estimated_claim_amount, 0) , 2);
                    v_rec.paid_amount := round(nvl(v_paid_amount, 0), 2);
                    v_rec.returned_amount := round(nvl(v_returned_amount, 0), 2);
                    v_rec.closed_amount := round(nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) + nvl(v_rec.returned_amount, 0), 2);

                    v_rec.current_reserve_distribution := v_rec.closed_amount;

                    if sign(v_rec.current_reserve_distribution) = -1 then
                        v_rec.current_reserve_distribution := 0;
                    end if;

                    if p_type = 'HASAR' then
                        v_rec.currency_amount := round(v_rec.current_reserve_distribution * v_currency_exchange_rate, 2);
                    end if;
            end if;

            v_list(v_type_seq) := v_rec;
            v_type_seq := v_type_seq + 1;
        end loop;

        return v_list;

    end get_reserve_detail_bulk;

    --Þüpheli Alacak
    function get_credit_detail_bulk(p_law_file_no varchar2, p_detail_no number default null) return law_reserve_detail_tbl
    is

        v_error_msg varchar2(1000);
        v_typelist number;
        v_type number := 1;

        v_file_close_date date;
        v_opus_date date := pme_public.opus_date;
        v_currency_exchange_rate number;
        v_swift_code varchar2(4);

        v_list law_reserve_detail_tbl;
        v_rec law_reserve_detail_typ;
    begin

        begin
            select file_close_date
              into v_file_close_date
              from koc_law_bases
             where law_file_no = p_law_file_no;
        exception when others then
            v_file_close_date := null;
        end;

        v_list := law_reserve_detail_tbl();

        v_typelist := 8297;
        for i in 1..length(v_typelist) loop
            v_type := substr(v_typelist, i, 1);

            v_list.extend;
            v_rec := law_reserve_detail_typ(null,null,null,null,null,null,null,null,null,null);

            v_rec.reserve_seq := i;

            begin
                select decode(icode,7,'Karþý Taraf Vekalet',explanation) explanation
                  into v_rec.reserve_type
                  from koc_clm_lookup
                 where type = 122
                   and icode = v_type;
            exception when others then
                v_rec.reserve_type := null;
            end;

            --kapalý olmayan dosyalar için
            if v_file_close_date is null then
               if v_type = 8 then  -- 28.07.2017 hakan duyan isteðiyle eklendi

                    --varsa ödenen tutar bulma
                    begin
                        select round(sum(a.amount), 2) paid_amount
                          into v_rec.paid_amount
                          from koc_law_trans_detail_sub a,
                               koc_law_trans_detail b
                         where a.law_file_no = p_law_file_no
                           and (a.detail_no = nvl(p_detail_no, 0) or p_detail_no is null)
                           and a.accessory_type = v_type
                           and a.trans_no = b.trans_no
                           and a.law_file_no = b.law_file_no
                           and a.detail_no = nvl(b.detail_no, a.detail_no)
                           --and b.batch_id is not null
                           and sign(a.amount) = 1;
                    exception when others then
                        v_rec.paid_amount := 0;
                    end;

                    --varsa iade tutarý bulma
                    begin
                        select round(sum(a.amount), 2) paid_amount
                          into v_rec.returned_amount
                          from koc_law_trans_detail_sub a,
                               koc_law_trans_detail b
                         where a.law_file_no = p_law_file_no
                           and (a.detail_no = nvl(p_detail_no, 0) or p_detail_no is null)
                           and a.accessory_type = v_type
                           and a.trans_no = b.trans_no
                           and a.law_file_no = b.law_file_no
                           and a.detail_no = nvl(b.detail_no, a.detail_no)
                           --and b.batch_id is not null
                           and sign(a.amount) = -1;
                    exception when others then
                        v_rec.returned_amount := 0;
                    end;

               else
                    --varsa ödenen tutar bulma
                    begin
                        select round(sum(a.amount), 2) paid_amount
                          into v_rec.paid_amount
                          from koc_law_trans_detail_sub a,
                               koc_law_trans_detail b
                         where a.law_file_no = p_law_file_no
                           and (a.detail_no = nvl(p_detail_no, 0) or p_detail_no is null)
                           and a.accessory_type = v_type
                           and a.trans_no = b.trans_no
                           and a.law_file_no = b.law_file_no
                           and a.detail_no = nvl(b.detail_no, a.detail_no)
                           and b.batch_id is not null
                           and sign(a.amount) = 1;
                    exception when others then
                        v_rec.paid_amount := 0;
                    end;

                    --varsa iade tutarý bulma
                    begin
                        select round(sum(a.amount), 2) paid_amount
                          into v_rec.returned_amount
                          from koc_law_trans_detail_sub a,
                               koc_law_trans_detail b
                         where a.law_file_no = p_law_file_no
                           and (a.detail_no = nvl(p_detail_no, 0) or p_detail_no is null)
                           and a.accessory_type = v_type
                           and a.trans_no = b.trans_no
                           and a.law_file_no = b.law_file_no
                           and a.detail_no = nvl(b.detail_no, a.detail_no)
                           and b.batch_id is not null
                           and sign(a.amount) = -1;
                    exception when others then
                        v_rec.returned_amount := 0;
                    end;

               end if;
                v_rec.estimated_claim_amount := round(koc_law_reserve_utils.execute_function1(v_type, p_law_file_no, p_detail_no, v_opus_date), 2);
                v_rec.current_reserve_distribution := round(nvl(v_rec.estimated_claim_amount,0) - nvl(v_rec.paid_amount, 0) - nvl(v_rec.returned_amount, 0), 2);

                if sign(v_rec.current_reserve_distribution) = -1 then
                    v_rec.current_reserve_distribution := 0;
                end if;
            --kapalý dosyalar için
            else
                koc_law_reserve_utils.execute_law_file_closed(
                    v_type,
                    p_law_file_no,
                    p_detail_no,
                    v_rec.estimated_claim_amount,
                    v_rec.paid_amount,
                    v_rec.returned_amount,
                    v_swift_code,
                    v_currency_exchange_rate);

                    v_rec.closed_amount := round(nvl(v_rec.estimated_claim_amount, 0) - nvl(v_rec.paid_amount, 0) - nvl(v_rec.returned_amount, 0), 2);

                    v_rec.current_reserve_distribution := round(v_rec.closed_amount , 2);

                    if sign(v_rec.current_reserve_distribution) = -1 then
                        v_rec.current_reserve_distribution := 0;
                    end if;
            end if;

            v_list(i) := v_rec;
        end loop;

        return v_list;

    end get_credit_detail_bulk;

    function get_reserve_info(p_law_file_no varchar2, p_detail_no number default null, p_reserve_date date default null) return law_reserve_typ
    is
        v_list law_reserve_typ;
        v_general_info_rec law_general_info_typ;

        v_count number;
        v_close_date date;
        v_date date;
        v_claim_id number;
        v_sf_no number;
        v_cover_code varchar2(10);
        v_law_type varchar2(5);
    begin
        v_general_info_rec := get_lawfile_general_info(p_law_file_no);

        if p_detail_no is null then

            if v_general_info_rec.law_case_type = 'A' then
                select count(*)
                  into v_count
                  from koc_law_bases_detail
                 where law_file_no = p_law_file_no;

                if v_count = 0 then
                    select LAW_RESERVE_TYP(
                               b.payment_denounce_date, -- interest_request_date
                               b.interest_end_date,     -- interest_fixed_date
                               b.interest_type,
                               null,                    -- interest_rate
                               b.file_close_date,       -- kapatma_nedeni koc_law_status_ref tablsounda koc_law_bases.law_status üstünden var ancak hepsi null olduðu için almadým
                               decode(b.law_ba, 'E', 1, 0),
                               nvl(b.is_exception, 0),
                               nvl(b.is_maktu, 0),
                               nvl(b.is_specail_contract, 0),
                               koc_law_utils.status_description(b.status_id, 'G'),
                               null,                    -- is_adjusment
                               null,                    -- adjustment_rate
                               case_amount,             -- Dava Ýcra Tutar
                               case_amount_swf,
                               court_correction_amount, -- Islah Tutar
                               court_correction_amount_swf,
                               null,                    -- Teminat Adý
                               cover_amount,            -- Teminat Tutarý
                               cover_amount_swf,
                               court_decision_amount,   -- Karar Tutarý
                               court_decision_amount_swf,
                               authority_amount,        -- Bilirkiþi Tutar
                               authority_amount_swf,
                               expertise_amount,        -- Eksper Tutar
                               expertise_amount_swf,
                               factura,                 -- invoice
                               factura_swf,             -- invoice_swf
                               null,                    -- konservasyon_rate
                               null,                    -- konservasyon_amount
                               null,                    -- konservasyon_swf
                               null,                    -- indemnity_amount
                               null,                    -- indemnity_swf
                               decode(law_ba, 'E', null, null), --ba_average, --belirsiz alacak ortalama  --eðer law_BA =E ise ilgili yerden deðeri alacaksýn , E  deðilse null olarak ata,  --->>   koc_law_bases_detail.law_ba
                               null, --ba_average_swf
                               null,                    -- total_law_reserve_amount
                               null,                    -- total_law_reserve_amount_swf
                               null,                    -- total_claim_reserve_amount
                               null,                    -- total_claim_reserve_amount_swf
                               get_reserve_policy_bulk(b.law_file_no),
                               get_reserve_detail_bulk(b.law_file_no, null, 'HUKUK')
                           )
                      into v_list
                      from koc_law_bases b
                     where b.law_file_no = p_law_file_no;

                else
                    select LAW_RESERVE_TYP(
                               b.payment_denounce_date, -- interest_request_date
                               b.interest_end_date,     -- interest_fixed_date
                               b.interest_type,
                               null,                    -- interest_rate
                               b.file_close_date,       -- kapatma_nedeni koc_law_status_ref tablsounda koc_law_bases.law_status üstünden var ancak hepsi null olduðu için almadým
                               decode(b.law_ba, 'E', 1, 0),
                               nvl(b.is_exception, 0),
                               nvl(b.is_maktu, 0),
                               nvl(b.is_specail_contract, 0),
                               koc_law_utils.status_description(b.status_id, 'G'),
                               null,                    -- is_adjusment
                               null,                    -- adjustment_rate
                               sum(d.case_amount              * koc_curr_utils.retrieve_effective_parity(d.case_amount_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               sum(d.court_correction_amount  * koc_curr_utils.retrieve_effective_parity(d.court_correction_amount_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               null,                    -- Teminat Adý
                               sum(d.cover_amount             * koc_curr_utils.retrieve_effective_parity(d.cover_amount_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               sum(d.court_decision_amount    * koc_curr_utils.retrieve_effective_parity(d.court_decision_amount_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               sum(d.authority_amount         * koc_curr_utils.retrieve_effective_parity(d.authority_amount_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               sum(d.expertise_amount         * koc_curr_utils.retrieve_effective_parity(d.expertise_amount_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               sum(d.factura                  * koc_curr_utils.retrieve_effective_parity(d.factura_swf, base_swift_code, sysdate, 36)),
                               'TL',
                               null,                    -- konservasyon_rate
                               null,                    -- konservasyon_amount
                               null,                    -- konservasyon_swf
                               null,                    -- indemnity_amount
                               null,                    -- indemnity_swf
                               null,                    -- ba_average
                               null,                    -- ba_average_swf
                               null,                    -- total_law_reserve_amount
                               null,                    -- total_law_reserve_amount_swf
                               null,                    -- total_claim_reserve_amount
                               null,                    -- total_claim_reserve_amount_swf
                               get_reserve_policy_bulk(b.law_file_no),
                               get_reserve_detail_bulk(b.law_file_no, null, 'HUKUK')
                           )
                      into v_list
                      from koc_law_bases b,
                           koc_law_bases_detail d
                     where b.law_file_no = p_law_file_no
                       and b.law_file_no = d.law_file_no
                     group by
                           b.law_file_no,
                           b.payment_denounce_date,
                           b.interest_end_date,
                           b.interest_type,
                           b.file_close_date,
                           decode(b.law_ba, 'E', 1, 0),
                           nvl(b.is_exception, 0),
                           nvl(b.is_maktu, 0),
                           nvl(b.is_specail_contract, 0),
                           b.status_id;
                end if;

            else --Lehe dosyalar
                select LAW_RESERVE_TYP(
                           b.payment_denounce_date, -- interest_request_date
                           b.interest_end_date,     -- interest_fixed_date
                           b.interest_type,
                           null,                    -- interest_rate
                           b.file_close_date,       -- kapatma_nedeni koc_law_status_ref tablsounda koc_law_bases.law_status üstünden var ancak hepsi null olduðu için almadým
                           decode(b.law_ba, 'E', 1, 0),
                           nvl(b.is_exception, 0),
                           nvl(b.is_maktu, 0),
                           nvl(b.is_specail_contract, 0),
                           koc_law_utils.status_description(b.status_id, 'G'),
                           null,                    -- is_adjusment
                           null,                    -- adjustment_rate
                           case_amount,             -- Dava Ýcra Tutar
                           case_amount_swf,
                           court_correction_amount, -- Islah Tutar
                           court_correction_amount_swf,
                           null,                    -- Teminat Adý
                           cover_amount,            -- Teminat Tutarý
                           cover_amount_swf,
                           court_decision_amount,   -- Karar Tutarý
                           court_decision_amount_swf,
                           authority_amount,        -- Bilirkiþi Tutar
                           authority_amount_swf,
                           expertise_amount,        -- Eksper Tutar
                           expertise_amount_swf,
                           factura,                 -- invoice
                           factura_swf,             -- invoice_swf
                           null,                    -- konservasyon_rate
                           null,                    -- konservasyon_amount
                           null,                    -- konservasyon_swf
                           null,                    -- indemnity_amount
                           null,                    -- indemnity_swf
                           decode(law_ba, 'E', null, null), --ba_average, --belirsiz alacak ortalama  --eðer law_BA =E ise ilgili yerden deðeri alacaksýn , E  deðilse null olarak ata,  --->>   koc_law_bases_detail.law_ba
                           null, --ba_average_swf
                           null,                    -- total_law_reserve_amount
                           null,                    -- total_law_reserve_amount_swf
                           null,                    -- total_claim_reserve_amount
                           null,                    -- total_claim_reserve_amount_swf
                           null, --get_reserve_policy_bulk(b.law_file_no),
                           get_credit_detail_bulk(b.law_file_no, null)
                       )
                  into v_list
                  from koc_law_bases b
                 where b.law_file_no = p_law_file_no;
            end if;
        else

            if v_general_info_rec.law_case_type = 'A' then
                select LAW_RESERVE_TYP(
                           b.payment_denounce_date,      --interest_request_date,
                           b.interest_end_date,          --interest_fixed_date,
                           a.interest_type,
                           a.interest_rate,
                           b.file_close_date,
                           decode(a.law_ba, 'E', 1, 0),
                           nvl(a.is_exception, 0),              --istisna
                           nvl(a.is_maktu, 0),
                           nvl(b.is_specail_contract, 0),
                           koc_law_utils.status_description (b.status_id, 'G'),
                           nvl(a.is_adjustment, 0),             --inceltme
                           a.adjustment_rate,
                           a.case_amount,               -- Dava Ýcra Tutar
                           a.case_amount_swf,
                           a.court_correction_amount,   -- Islah Tutar
                           a.court_correction_amount_swf,
                           null,                        -- Teminat Adý
                           a.cover_amount,              -- Teminat Tutarý
                           a.cover_amount_swf,
                           a.court_decision_amount,     -- Karar Tutarý
                           a.court_decision_amount_swf,
                           a.authority_amount,          -- Bilirkiþi Tutar
                           a.authority_amount_swf,
                           a.expertise_amount,          -- Eksper Tutar
                           a.expertise_amount_swf,
                           a.factura,                   -- invoice
                           a.factura_swf,               -- invoice_swf
                           null,                        -- konservasyon_rate
                           a.konservasyon,              -- konservasyon_amount
                           null,                        -- konservasyon_swf
                           null,                        -- indemnity_amount
                           null,                        -- indemnity_swf
                           null,                        -- ba_average
                           null,                        -- ba_average_swf
                           null,                        -- total_law_reserve_amount
                           null,                        -- total_law_reserve_amount_swf
                           null,                        -- total_claim_reserve_amount
                           null,                        -- total_claim_reserve_amount_swf
                           get_reserve_policy_bulk(a.law_file_no, a.detail_no),
                           get_reserve_detail_bulk(a.law_file_no, a.detail_no, 'HASAR')
                       )
                  into v_list
                  from alz_law_v_bases_detail a,
                       alz_law_v_bases b
                 where a.law_file_no = b.law_file_no
                   and a.law_file_no = p_law_file_no
                   and a.detail_no = p_detail_no;

                select lbd.claim_id,
                       lbd.sf_no,
                       lbd.cover_code,
                       lbd.law_type,
                       lb.file_close_date
                  into v_claim_id,
                       v_sf_no,
                       v_cover_code,
                       v_law_type,
                       v_close_date
                  from koc_law_bases lb,
                       koc_law_bases_detail lbd
                 where lb.law_file_no = p_law_file_no
                   and lb.law_file_no = lbd.law_file_no
                   and detail_no = p_detail_no;

                if v_general_info_rec.law_sf_type in ('H', 'R', 'T', 'M','I', 'B', 'E') then
                    if v_close_date is not null then
                        v_list.total_law_reserve_amount := 0;
                    else
                        v_list.total_law_reserve_amount := koc_law_reserve_utils.toplam_muallak_bul(p_law_file_no, 'HUKUK');
                    end if;

                    v_list.total_claim_reserve_amount := koc_law_reserve_utils.toplam_muallak_bul(v_list.policy_list(1).claim_ext_reference, 'HASAR');
                end if;

                if p_reserve_date is not null then
                    v_date := p_reserve_date;
                else
                    v_date := nvl(v_close_date, sysdate);
                end if;

                begin
                    v_list.ba_average := koc_law_reserve_utils.belirsiz_alacak_calculate(
                        p_law_file_no,
                        v_claim_id,
                        v_sf_no,
                        v_cover_code,
                        v_law_type,
                        v_date,
                        0,
                        v_claim_id);

                exception when others then
                    v_list.ba_average := null;
                end;

                begin
                    select cover_name
                      into v_list.cover_name
                      from cfg_v_prod_covers_api
                     where (cover_code, product_id) in
                              (select e.cover_code, f.product_id
                                 from clm_pol_covers e,
                                      clm_pol_bases f
                                where (e.claim_id, e.cover_no, e.oar_no) in
                                         (select d.claim_id, d.cover_no, d.oar_no
                                            from koc_clm_cov_sf_links_ext d
                                           where d.claim_id = v_claim_id
                                             and d.sf_no = v_sf_no
                                             and nvl (d.estimated_loss, 0) > 0
                                             and rownum < 2)
                                      and e.claim_id = f.claim_id);
                exception when others then
                    v_list.cover_name := null;
                end;

            else --Lehe dosyalar
                select LAW_RESERVE_TYP(
                           b.payment_denounce_date,      --interest_request_date,
                           b.interest_end_date,          --interest_fixed_date,
                           a.interest_type,
                           a.interest_rate,
                           b.file_close_date,
                           decode(a.law_ba, 'E', 1, 0),
                           nvl(a.is_exception, 0),              --istisna
                           nvl(a.is_maktu, 0),
                           nvl(b.is_specail_contract, 0),
                           koc_law_utils.status_description (b.status_id, 'G'),
                           nvl(a.is_adjustment, 0),             --inceltme
                           a.adjustment_rate,
                           a.case_amount,               -- Dava Ýcra Tutar
                           a.case_amount_swf,
                           a.court_correction_amount,   -- Islah Tutar
                           a.court_correction_amount_swf,
                           null,                        -- Teminat Adý
                           a.cover_amount,              -- Teminat Tutarý
                           a.cover_amount_swf,
                           a.court_decision_amount,     -- Karar Tutarý
                           a.court_decision_amount_swf,
                           a.authority_amount,          -- Bilirkiþi Tutar
                           a.authority_amount_swf,
                           a.expertise_amount,          -- Eksper Tutar
                           a.expertise_amount_swf,
                           a.factura,                   -- invoice
                           a.factura_swf,               -- invoice_swf
                           null,                        -- konservasyon_rate
                           a.konservasyon,              -- konservasyon_amount
                           null,                        -- konservasyon_swf
                           null,                        -- indemnity_amount
                           null,                        -- indemnity_swf
                           null,                        -- ba_average
                           null,                        -- ba_average_swf
                           null,                        -- total_law_reserve_amount
                           null,                        -- total_law_reserve_amount_swf
                           null,                        -- total_claim_reserve_amount
                           null,                        -- total_claim_reserve_amount_swf
                           null, --get_reserve_policy_bulk(a.law_file_no, a.detail_no),
                           get_credit_detail_bulk(a.law_file_no, a.detail_no)
                       )
                  into v_list
                  from alz_law_v_bases_detail a,
                       alz_law_v_bases b
                 where a.law_file_no = b.law_file_no
                   and a.law_file_no = p_law_file_no
                   and a.detail_no = p_detail_no;

            end if;

        end if;

        return v_list;

    exception when others then
       v_list := null;

       return v_list;
    end get_reserve_info;

    procedure change_reserve_date(p_law_file_no in varchar2,
                                  p_detail_no in number,
                                  p_reserve_date in date,
                                  p_exceptional_flag out number,
                                  p_list out law_reserve_typ)
    is
        v_bordro        number;
        v_is_exception  number;
        v_status_code   number;
        v_month_closed  boolean;

        cursor c_control is
        select status_code
          from koc_process_close
         where trunc(sysdate) between process_date and close_date
           and agent_int_id = 12354
           and process_type = 'CLAM'
           and branch_id = 1;


    begin
        p_exceptional_flag := 0;

        open c_control;
        fetch c_control into v_status_code;

        delete alz_law_bordro;

        p_list := get_reserve_info(p_law_file_no, p_detail_no, p_reserve_date);

        if p_reserve_date is not null then
            insert into alz_law_bordro(
                bordro_date
            )
            values(
                to_date(to_char(trunc(p_reserve_date), 'dd.mm.yyyy')|| ' 23:59:59', 'dd.mm.yyyy HH24:MI:SS')
            );

            begin
                select distinct nvl(is_bordro, 0)
                  into v_bordro
                  from alz_law_reserve_history a
                 where a.law_file_no = p_law_file_no
                   and a.category = 'BORDRO'
                   and trunc (a.bordro_date) = trunc(p_reserve_date);
            exception when others then
                v_bordro := -1;
            end;

            begin
                select nvl(is_exception, 0)
                  into v_is_exception
                  from koc_law_bases_detail
                 where law_file_no = p_law_file_no
                   and detail_no = p_detail_no;
            exception when others then
                v_is_exception := 0;
            end;

            if c_control%FOUND then
                if v_status_code != 1 then
                    v_month_closed := true;
                end if;
            else
                v_month_closed := true;
            end if;

            v_month_closed := false;

            if v_is_exception = 1 and not v_month_closed and v_bordro = 0 then
                p_exceptional_flag := 1;
            end if;

            if v_bordro in(0, 1) then
                select LAW_RESERVE_DETAIL_TYP(
                           kcl.type,
                           kcl.explanation,
                           lrh.amount,      -- estimated_claim_amount
                           lrh.paid,        -- paid_amount
                           lrh.returned,    -- returned_amount
                           null,    -- closed_amount
                           nvl(lrh.amount, 0) - nvl(lrh.paid, 0) - nvl(lrh.returned, 0), -- current_reserve_distribution
                           (nvl(lrh.amount, 0) - nvl(lrh.paid, 0) - nvl(lrh.returned, 0)) * currency_exchange_rate,    -- currency_amount
                           null,    -- will_paid_amount
                           lrh.manuel_amount    -- manuel_amount
                       ) BULK COLLECT
                  into p_list.detail_list
                  from koc_clm_lookup kcl,
                       alz_law_reserve_history lrh
                 where kcl.type = 122
                   and kcl.icode between 1 and 7
                   and kcl.icode = lrh.accessory_type
                   and lrh.category = 'BORDRO'
                   and lrh.law_file_no = p_law_file_no
                   and lrh.detail_no = p_detail_no
                   and trunc(lrh.bordro_date) = trunc(p_reserve_date)
              order by lrh.accessory_type;

--            else
--                p_list := get_reserve_detail_bulk(p_law_file_no, p_detail_no, 'HUKUK');
            end if;
        end if;

        delete alz_law_bordro;
    end change_reserve_date;

    procedure save_reserve_exception(p_law_file_no in varchar2,
                                     p_detail_no in number,
                                     p_reserve_date in date,
                                     p_list in law_reserve_detail_tbl,
                                     p_user_name in varchar2,
                                     p_process_results out customer.process_result_table)
    is
        v_error_msg           varchar2(1000);
        v_bordro        number;
        v_is_exception  number;
        v_status_code   number;
        v_month_closed  boolean;

        cursor c_control is
        select status_code
          from koc_process_close
         where trunc(sysdate) between process_date and close_date
           and agent_int_id = 12354
           and process_type = 'CLAM'
           and branch_id = 1;

        cursor c_details is
        select *
          from table(p_list)
         order by reserve_seq;

    begin

        begin
            select distinct nvl(is_bordro, 0)
              into v_bordro
              from alz_law_reserve_history a
             where a.law_file_no = p_law_file_no
               and a.category = 'BORDRO'
               and trunc (a.bordro_date) = trunc(p_reserve_date);
        exception when others then
            v_bordro := -1;
        end;

        begin
            select nvl(is_exception, 0)
              into v_is_exception
              from koc_law_bases_detail
             where law_file_no = p_law_file_no
               and detail_no = p_detail_no;
        exception when others then
            v_is_exception := 0;
        end;

        v_month_closed := false;
        if c_control%FOUND then
            if v_status_code != 1 then
                v_month_closed := true;
            end if;
        else
            v_month_closed := true;
        end if;

        if v_is_exception = 1 and not v_month_closed and v_bordro = 0 then

            for rec1 in c_details loop
                update alz_law_reserve_history
                   set manuel_amount = NVL(rec1.manuel_amount, 0),
                       user_name = p_user_name
                 where category = 'BORDRO'
                   and law_file_no = p_law_file_no
                   and detail_no = p_detail_no
                   and trunc(bordro_date) = trunc(p_reserve_date)
                   and accessory_type = rec1.reserve_seq;

            end loop;

            --commit;

            v_error_msg := 'Girilen Bordro Ýstisna Deðerleri Kaydedilmiþtir!';

            process_result(
                1, --p_process_no
                0,
                9,
                10,
                'SAVE_RESERVE_EXCEPTION',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'SAVE_RESERVE_EXCEPTION',
                p_process_results
            );

            return;

        else
            v_error_msg := 'Bordro Ýstisna Giriþi Ýçin Hasar Dosyasý Ýstisna Olmalýdýr!';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_RESERVE_EXCEPTION',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'SAVE_RESERVE_EXCEPTION',
                p_process_results
            );

            return;
        end if;

    exception when others then
        rollback;
        v_error_msg := 'Muallak Ýstisna bilgileri kaydedilirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'SAVE_RESERVE_EXCEPTION',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_RESERVE_EXCEPTION',
            p_process_results
        );
        return;
    end save_reserve_exception;

    function get_passive_party_list(p_law_file_no in varchar2) return law_passive_party_tbl
    is
        v_list law_passive_party_tbl;
    begin

        select LAW_PASSIVE_PARTY_TYP(
                x.party_id,
                x.party_name,
                x.role_code,
                x.role,
                x.type_code,
                x.type,
                x.process_date
               ) BULK COLLECT
          into v_list
          from (
                select distinct
                       a.part_id as party_id,
                       koc_clm_utils.partner_name_bul(a.part_id) as party_name,
                       c.taraf_rol_kodu as role_code,
                       c.taraf_rol_aciklama as role,
                       d.role_type as type_code,
                       d.description as type,
                       a.process_date
                  from koc_law_interested_log a,
                       cp_partners b,
                       alz_uyap_taraf_rolleri c,
                       cp_role_types d
                  where a.part_id = b.part_id
                    and a.law_file_no = p_law_file_no
                    and decode(a.res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', a.res_def_type) = to_char(c.taraf_rol_kodu)
                    and d.object_type = 'LAW'
                    and a.role_type = d.role_type
                    and not exists
                    (
                      select 1
                        from koc_law_interested_parties dd
                       where 1 = 1
                        and dd.res_def_type = a.res_def_type
                        and dd.law_file_no = a.law_file_no
                        and dd.part_id = a.part_id
                    )
                ) x
          order by x.process_date;

        return v_list;
    end get_passive_party_list;

    function get_money_movements_list(p_law_file_no in varchar2) return law_money_movements_tbl
    is
        v_list law_money_movements_tbl;
    begin

        select LAW_MONEY_MOVEMENTS_TYP(
                long_name,
                creditor_name,
                null, -- tc
                trunc(ticket_date),
                trans_amount,
                account_no,
                null, -- giriþ tarihi
                odendi, -- giriþ yapan
                correspondent_subs_name,
                creditor_subs_name,
                null -- creditor iban
               ) BULK COLLECT
          into v_list
          from customer.koc_law_v_trans
         where law_file_no = p_law_file_no
           and nvl(trans_amount, 0) != 0
           and sf_total_type != 99;

        return v_list;
    end get_money_movements_list;

    function get_money_movements_total_list(p_law_file_no in varchar2) return law_money_movements_total_tbl
    is
        v_list law_money_movements_total_tbl;
    begin

        select LAW_MONEY_MOVEMENTS_TOTAL_TYP(
                long_name,
                sum(trans_amount)
               ) BULK COLLECT
          into v_list
          from customer.koc_law_v_trans
         where law_file_no = p_law_file_no
         group by long_name
         order by long_name;

        return v_list;
    end get_money_movements_total_list;

    function get_money_movements_exp_list(p_law_file_no in varchar2) return law_money_movements_exp_tbl
    is
        v_list law_money_movements_exp_tbl;
    begin

        select LAW_MONEY_MOVEMENTS_EXP_TYP(
                l.lawyer,
                koc_clm_utils.partner_name_bul(l.lawyer),
                l.ticket_date,
                s.explanation,
                l.explanation,
                l.trans_amount,
                l.rejected_amount,
                l.rejected_explanation
               ) BULK COLLECT
          into v_list
          from koc_law_trans_detail l,
               koc_clm_sf_total_types s
         where l.payment_type = s.sf_total_type
           and s.supp_type_code = 'MSR'
           and l.law_file_no = p_law_file_no;

        return v_list;
    end get_money_movements_exp_list;

    function get_law_notes_list(p_law_file_no varchar2, p_user_name varchar2) return law_note_tbl
    is
        v_list law_note_tbl;
        v_lawyer_control number;
        v_ext_control number;
    begin

        select nvl(sum(decode(role_code,
                                'LMRDA', 1,
                                'LMRHO', 1,
                                'LMROM', 1,
                                'LMRSY', 1,
                                0
                      )
                   ),
               0) as com_control,
               nvl(sum(decode(role_code,
                                'LMRHA', 1,
                                'LMRTP', 1,
                                0
                      )
                   ),
               0) as ext_control
          into v_lawyer_control,
               v_ext_control
          from koc_auth_user_role_rel
         where username = p_user_name;

        select LAW_NOTE_TYP(
                note_id,
                text,
                user_id,
                source,
                is_privacy,
                creation_date
               ) BULK COLLECT
          into v_list
          from
            (
                select distinct
                       a.note_id,
                       a.text,
                       a.user_id,
                       'DOSYA' as source,
                       to_number(nvl(sub_level2, 1)) as is_privacy,
                       a.creation_date
                  from koc_notes a,
                       koc_notes_authorization b
                 where b.ins_obj_uid = p_law_file_no
                   and b.note_id = a.note_id
                   and nvl(b.is_valid, 1) = 1
                   and (v_lawyer_control > 0 or (v_ext_control > 0 and nvl(b.sub_level2, 1) = 0))
                 union
                select a.id,
                       to_char(substr(a.note, 1, 4000)) as note,
                       a.create_user,
                       'TICKET',
                       nvl(a.internal, 1),
                       a.create_date
                  from alz_law_ticket_note a,
                       alz_law_ticket b
                 where a.ticket_id = b.ticket_id
                   and b.lawfile_no = p_law_file_no
                   and b.source != 'OTORIZASYON'
                   and (v_lawyer_control > 0 or (v_ext_control > 0 and nvl(a.internal, 1) = 0))
            )
         order by creation_date desc;

        return v_list;
    end get_law_notes_list;

    procedure add_law_note(p_law_file_no in varchar2,
                           p_rec in law_note_typ,
                           p_process_results out customer.process_result_table)
    is
        v_count number;
        v_error_msg varchar2(1000);

        v_opus_date date := sysdate;
        v_note_id number;
        v_order number;
    begin

        select count(1)
          into v_count
          from koc_law_bases
         where law_file_no = p_law_file_no;

        if p_law_file_no is null or
           p_rec is null or
           p_rec.text is null or
           p_rec.user_name is null or
           p_rec.source is null
        then
            v_error_msg := 'Hukuk Dosya Numarasý, kullanýcý adý, iþlem tipi ve açýklama bilgileri boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_NOTE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_NOTE',
                p_process_results
            );
            return;
        end if;

        if v_count = 0 or v_count > 1 then
            v_error_msg := 'Hatalý Hukuk Dosya Numarasý girdiniz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_NOTE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_NOTE',
                p_process_results
            );
            return;

        else
            select koc_notes_seq.nextval + 1 into v_note_id from dual;

            insert into koc_notes
            (
                note_id,
                creation_date,
                user_id,
                text
            )
            values
            (
                v_note_id,
                v_opus_date,
                p_rec.user_name,
                p_rec.text
            );

            select nvl(max(to_number(sub_level1)), 0)
              into v_order
              from koc_notes_authorization
             where ins_obj_uid = p_law_file_no;

            v_order := v_order + 1;

            insert into koc_notes_authorization
            (
                note_id,
                who_can_see,
                from_date,
                note_type,
                ins_obj_uid,
                creation_date,
                user_id,
                sub_level1, -- sf_no
                sub_level2 -- is_privacy
            )
            values
            (
                v_note_id,
                '*',
                v_opus_date,
                'LAW',
                p_law_file_no,
                v_opus_date,
                p_rec.user_name,
                to_char(v_order),
                to_char(p_rec.is_privacy)
            );

            if not (v_note_id > 0) then
                v_error_msg := 'Açýklama eklenemedi.';

                process_result(
                    99, --p_process_no
                    0,
                    9,
                    -1,
                    'ADD_LAW_NOTE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.ADD_LAW_NOTE',
                    p_process_results
                );
            end if;

            update koc_law_bases
               set note_id = v_note_id,
                   user_name = p_rec.user_name
             where law_file_no = p_law_file_no;

            save_lawfile_log(p_law_file_no, p_process_results);
        end if;

    exception when others then

        v_error_msg := 'Açýklama eklenirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'ADD_LAW_NOTE',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.ADD_LAW_NOTE',
            p_process_results
        );
        return;
    end ADD_LAW_NOTE;

    procedure modify_law_note(p_law_file_no in varchar2,
                              p_type in varchar2,
                              p_rec in law_note_typ,
                              p_process_results out customer.process_result_table
                             )
    is
        v_error_msg varchar2(1000);
        v_count number;

    begin
        if p_law_file_no is null or
           p_type is null or
           p_rec is null or
           p_rec.note_id is null or
           p_rec.text is null or
           p_rec.user_name is null or
           p_rec.source is null or
           p_rec.note_id is null
        then
            v_error_msg := 'Hukuk Dosya Numarasý, kullanýcý adý, iþlem tipi ve açýklama bilgileri boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_NOTE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
                p_process_results
            );
            return;
        end if;

        if p_rec.source = 'DOSYA' then
            select count(1)
              into v_count
              from koc_notes a,
                   koc_notes_authorization b
             where a.note_id = b.note_id
               and b.ins_obj_uid = p_law_file_no
               and b.note_id = p_rec.note_id
               and a.user_id = p_rec.user_name;

            if v_count = 0 then
                v_error_msg := 'Sadece kendi eklediðiniz açýklamalar için iþlem yapabilirsiniz.';

                process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_NOTE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
                    p_process_results
                );
                return;
            end if;

            if p_type = 'UPDATE' then
                update koc_notes
                   set text = p_rec.text
                 where note_id = p_rec.note_id;

                update koc_notes_authorization
                   set sub_level2 = to_char(nvl(p_rec.is_privacy, 1))
                 where note_id = p_rec.note_id;

            elsif p_type = 'DELETE' then
                update koc_notes_authorization
                   set is_valid = 0
                 where note_id = p_rec.note_id;

            else
                v_error_msg := 'Yanlýþ iþlem tipi.';

                process_result(
                    2, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_NOTE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
                    p_process_results
                );
                return;
            end if;

        elsif p_rec.source = 'TICKET' then
            select count(1)
              into v_count
              from alz_law_ticket_note a,
                   alz_law_ticket b
             where a.ticket_id = b.ticket_id
               and b.lawfile_no = p_law_file_no
               and a.id = p_rec.note_id
               and a.create_user = p_rec.user_name;

            if v_count = 0 then
                v_error_msg := 'Sadece kendi eklediðiniz açýklamalar için iþlem yapabilirsiniz.';

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_NOTE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
                    p_process_results
                );
                return;
            end if;

            if p_type = 'UPDATE' then
                update alz_law_ticket_note
                   set note = p_rec.text,
                       internal = nvl(p_rec.is_privacy, 1)
                 where id = p_rec.note_id;

            elsif p_type = 'DELETE' then
                null;

            else
                v_error_msg := 'Yanlýþ iþlem tipi.';

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_NOTE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
                    p_process_results
                );
                return;
            end if;

        else
            v_error_msg := 'Yanlýþ kaynak.';

            process_result(
                5, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_NOTE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
                p_process_results
            );
            return;
        end if;

    exception when others then

        rollback;
        v_error_msg := 'Açýklama bulunurken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'MODIFY_LAW_NOTE',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.MODIFY_LAW_NOTE',
            p_process_results
        );
        return;

    end modify_law_note;

    function get_law_uyap_list(p_law_file_no varchar2) return sys_refcursor
    is
        v_list sys_refcursor;
    begin

        open v_list for
        select uyap_id
          from koc_law_base_uyap_rel
         where law_file_no = p_law_file_no
           and nvl(deleted_flag, 'N') = 'N'
         order by uyap_id;

        return v_list;
    end get_law_uyap_list;

    procedure add_law_uyap_id(p_law_file_no in varchar2,
                              p_uyap_id in number,
                              p_user_name in varchar2,
                              p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_count number;

    begin

        if p_law_file_no is null then
            v_error_msg := 'Hukuk Dosya Numarasý boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        select count(*)
          into v_count
          from koc_law_bases
         where law_file_no = p_law_file_no;

        if v_count = 0 then
            v_error_msg := 'Hukuk dosyasý bulunamamýþtýr.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        if p_uyap_id is null then
            v_error_msg := 'UYAP id boþ olamaz.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        select count(*)
          into v_count
          from alz_uyap_dosya_listesi
         where dosya_id = p_uyap_id
           and guncel_versiyon = 'Y';

        if v_count = 0 then
            v_error_msg := 'Girdiðiniz UYAP id yanlýþtýr.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        if p_user_name is null then
            v_error_msg := 'Kullanýcý bilgisi boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        select count(1)
          into v_count
          from koc_law_base_uyap_rel
         where uyap_id = p_uyap_id
           and nvl(deleted_flag, 'N') = 'N'
           and law_file_no != p_law_file_no;

        if v_count > 0 then
            v_error_msg := 'Girdiðiniz UYAP id baþka bir hukuk dosyasýyla eþleþmiþtir.';

            process_result(
                5, --p_process_no
                0,
                9,
                -1,
                'ADD_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        select count(1)
          into v_count
          from koc_law_base_uyap_rel
         where uyap_id = p_uyap_id
           and law_file_no = p_law_file_no;

        if v_count > 0 then

            update koc_law_base_uyap_rel
               set deleted_flag = 'Y'
             where law_file_no = p_law_file_no
               and uyap_id = p_uyap_id;

        else
            insert into koc_law_base_uyap_rel
            (
                law_file_no,
                uyap_id,
                source,
                created_by
            )
            values
            (
                p_law_file_no,
                p_uyap_id,
                'DOSYA',
                p_user_name
            );
        end if;

    exception when others then
        rollback;
        v_error_msg := 'Baðlý UYAP id eklenirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'ADD_LAW_UYAP_ID',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.ADD_LAW_UYAP_ID',
            p_process_results
        );
        return;
    end add_law_uyap_id;

    procedure modify_law_uyap_id(p_law_file_no in varchar2,
                                 p_user_name in varchar2,
                                 p_type in varchar2,
                                 p_old_uyap_id in number,
                                 p_new_uyap_id in number,
                                 p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_count number;

    begin

        if p_law_file_no is null then
            v_error_msg := 'Hukuk Dosya Numarasý boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        select count(*)
          into v_count
          from koc_law_bases
         where law_file_no = p_law_file_no;

        if v_count = 0 then
            v_error_msg := 'Hukuk dosyasý bulunamamýþtýr.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        if p_new_uyap_id is null then
            v_error_msg := 'UYAP id boþ olamaz.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        select count(*)
          into v_count
          from alz_uyap_dosya_listesi
         where dosya_id = p_new_uyap_id
           and guncel_versiyon = 'Y';

        if v_count = 0 then
            v_error_msg := 'Girdiðiniz UYAP id yanlýþtýr.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        if p_user_name is null then
            v_error_msg := 'Kullanýcý bilgisi boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

        if p_type = 'UPDATE' then

            if p_old_uyap_id is null then
                v_error_msg := 'Düzenlenecek UYAP id boþ olamaz.';

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_UYAP_ID',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                    p_process_results
                );
                return;
            end if;

            select count(1)
              into v_count
              from koc_law_base_uyap_rel
             where uyap_id = p_new_uyap_id
               and nvl(deleted_flag, 'N') = 'N'
               and law_file_no != p_law_file_no;

            if v_count > 0 then
                v_error_msg := 'Girdiðiniz yeni UYAP id baþka bir hukuk dosyasýyla eþleþmiþtir.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_UYAP_ID',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                    p_process_results
                );
                return;
            end if;

            update koc_law_base_uyap_rel
               set uyap_id = p_new_uyap_id,
                   last_update_date = sysdate,
                   last_updated_by = p_user_name
             where law_file_no = p_law_file_no
               and uyap_id = p_old_uyap_id
               and nvl(deleted_flag, 'N') = 'N';

            if sql%rowcount = 0 then
                v_error_msg := 'Düzenlenecek eþleme kaydý bulunamadý.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_UYAP_ID',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                    p_process_results
                );
                return;
            end if;

        elsif p_type = 'DELETE' then

            update koc_law_base_uyap_rel
               set deleted_flag = 'Y',
                   last_updated_by = p_user_name
             where law_file_no = p_law_file_no
               and uyap_id = p_old_uyap_id
               and nvl(deleted_flag, 'N') = 'N';

            if sql%rowcount = 0 then
                v_error_msg := 'Silinecek eþleme kaydý bulunamadý.';

                process_result(
                    5, --p_process_no
                    0,
                    9,
                    -1,
                    'MODIFY_LAW_UYAP_ID',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                    p_process_results
                );
                return;
            end if;

        else
            v_error_msg := 'Yanlýþ tipte iþlem.';

            process_result(
                21, --p_process_no
                0,
                9,
                -1,
                'MODIFY_LAW_UYAP_ID',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
                p_process_results
            );
            return;
        end if;

    exception when others then
        rollback;
        v_error_msg := 'Baðlý UYAP düzenlenirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'MODIFY_LAW_UYAP_ID',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.MODIFY_LAW_UYAP_ID',
            p_process_results
        );
        return;
    end modify_law_uyap_id;

    function get_uyap_safahat_list(p_law_file_no varchar2) return sys_refcursor
    is
        v_list sys_refcursor;
    begin

        open v_list for
        select aus.dosya_id as uyap_id,
               aus.safahat_id,
               aus.islem_tarihi_date as process_date,
               aus.islem_yapan_personel as processed_by,
               aus.aciklama as description,
               aus.kayit_tarihi as creation_date
          from koc_law_base_uyap_rel lbur,
               alz_uyap_safahat aus
         where lbur.law_file_no = p_law_file_no
           and nvl(lbur.deleted_flag, 'N') = 'N'
           and lbur.uyap_id = aus.dosya_id
           and aus.guncel_versiyon = 'Y'
         order by aus.islem_tarihi_date desc;

        return v_list;
    end get_uyap_safahat_list;

/*
    function get_detail_bre_info_bulk(p_law_file_no varchar2) return law_file_detail_bre_new_tbl
    is
        v_list law_file_detail_bre_new_tbl;
    begin

        select
            LAW_FILE_DETAIL_BRE_NEW_TYP(
                law_type_desc,
                maddi_bedeni -- cause_type
               ) BULK COLLECT
          into v_list
          from
          (
            select (
                    select explanation
                     from alz_look_up
                    where code = 'LAW_TYPE'
                      and parameter = lbd.law_type
                   )as law_type_desc,
                   c_loss.maddi_bedeni -- cause_type
              from koc_law_bases_detail lbd,
                   clm_pol_bases cpb,
                   koc_clm_subfile_cause1_rel c1,
                   koc_cc_loss_cause1 c_loss
             where law_file_no = p_law_file_no
               and lbd.claim_id = cpb.claim_id
               and lbd.claim_id = c1.claim_id
               and lbd.sf_no = c1.sf_no
               and cancel_date is null
               and c1.cause1_code = c_loss.cause1_code
               and cpb.date_of_loss < YENI_HASAR_KOD_BAS_TRH
               and c1.cause1_code < 10000
          union
            select (
                    select explanation
                     from alz_look_up
                    where code = 'LAW_TYPE'
                      and parameter = lbd.law_type
                   ), -- law_type_desc,
                   c_loss.maddi_bedeni -- cause_type
              from koc_law_bases_detail lbd,
                   clm_pol_bases cpb,
                   koc_clm_subfile_cause1_rel c1,
                   koc_clm_subfile_cause2_rel c2,
                   koc_clm_subfile_cause3_rel c3,
                   koc_clm_cause_rel c_loss
             where law_file_no = p_law_file_no
               and lbd.claim_id = cpb.claim_id
               and lbd.claim_id = c1.claim_id
               and lbd.sf_no = c1.sf_no
               and c1.cancel_date is null
               and lbd.claim_id = c2.claim_id
               and lbd.sf_no = c2.sf_no
               and c2.cancel_date is null
               and lbd.claim_id = c3.claim_id
               and lbd.sf_no = c3.sf_no
               and c3.cancel_date is null
               and cpb.date_of_loss >= YENI_HASAR_KOD_BAS_TRH
               and to_number(c1.cause1_code) >= 10000
               and to_number(c2.cause2_code) >= 10000
               and to_number(c3.cause3_code) >= 10000
               and c1.cause1_code = c_loss.cause1_code
               and c2.cause2_code = c_loss.cause2_code
               and c3.cause3_code = c_loss.cause3_code
          );

        return v_list;
    end get_detail_bre_info_bulk;

    function get_law_file_bre_info(p_law_file_no varchar2) return law_file_bre_new_typ
    is
        v_rec law_file_bre_new_typ;
    begin

        select LAW_FILE_BRE_NEW_TYP(
                decode(lb.supplier_type, 'HM', 'KDT', lb.supplier_type), -- department
                decode(lb.law_case_type, 'A', 'Aleyhe', 'L', 'Lehte'), -- law_case_type_desc,
                decode(lb.law_file_type, 'TA', 'Tespit', 'TL', 'Tespit', 'A', 'Hukuk', 'L', 'Hukuk', 'C', 'Ceza'), -- law_file_type_desc,
                nvl(lb.is_rucu, 0), -- as is_rucu,
                koc_law_utils.sf_type_desc(lb.law_sf_type), -- as sf_type_desc
                (
                 select explanation
                  from alz_look_up
                 where code = 'LAW_SF_GROUP'
                   and parameter = lb.law_sf_group
                ), -- law_sf_group_desc,
                alz_litigation_utils.get_detail_bre_info_bulk(lb.law_file_no),
                (
                 select explanation
                  from alz_look_up
                 where code = 'LAW_SF_GROUP'
                   and parameter = rel.law_sf_group
                ), -- related_sf_group_desc,
                al.aznet_user,
                null, -- in_lawyer group
                decode(rel.law_file_no, null, null, alz_litigation_utils.get_detail_bre_info_bulk(rel.law_file_no))
               )
          into v_rec
          from koc_law_bases lb,
               koc_law_bases rel,
               alz_lawyers al
         where lb.law_file_no = p_law_file_no
           and lb.related_law_file_no = rel.law_file_no(+)
           and rel.in_lawyer = al.id(+);

        return v_rec;
    end get_law_file_bre_info;
*/
    procedure clear_control_object( p_auth_id in number ,p_lawfile_rec in out law_file_all_typ  )
   is
         CURSOR C_RULER IS
            SELECT ar.IS_NESTED_SOURCE_TYPE,ar.source_type_name,a.source_id,a.source_id_column,ar.source_type_control_attribute,ar.source_table , ar.source_column_name , a.description
            FROM alz_law_auth_rule ar,
            alz_law_auth a
            WHERE ar.source_table = a.source_table
            AND ar.source_column_name = a.source_column_name
            and a.authorization_id = p_auth_id
            AND ar.active=1;

            v_nested number;
            v_source_type_name varchar2(100);
            v_source_id varchar2(100);
            v_source_id_column varchar2(100);
            v_src_type_control_attribute varchar2(100);
            v_rec_point number:=0;
            v_rec_count number:=0;
            v_source_table varchar2(100);
            v_source_column_name varchar2(100);
            v_description varchar2(100);
   begin
            OPEN C_RULER;
            FETCH C_RULER
            INTO v_nested,v_source_type_name,v_source_id,v_source_id_column,v_src_type_control_attribute,v_source_table,v_source_column_name,v_description ;
            CLOSE C_RULER;

        IF v_nested = 1 THEN
            EXECUTE IMMEDIATE  'DECLARE   v_rec law_file_all_typ; BEGIN v_rec := :rec  ; :old_count := v_rec.'|| v_source_type_name ||'.count ; END;' using in p_lawfile_rec, out v_rec_count;
            for ind in 1..v_rec_count
            loop
                 begin
                    EXECUTE IMMEDIATE 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; select decode( v_rec.'||v_source_type_name||'('||ind||').'||v_source_id_column||' , '''||v_source_id||''',1,0 ) into :kk from dual; end;' using in p_lawfile_rec , out v_rec_point;

                     if v_rec_point = 1 then
                        if v_src_type_control_attribute is not null then
                            EXECUTE IMMEDIATE 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_type_name||'('||ind||').'||v_src_type_control_attribute||' := null ; :rec := v_rec; end;' using in out p_lawfile_rec ;
                        end if;
                        return;
                     end if;
                 end;
            end loop;
        else
            if v_src_type_control_attribute is not null then
                EXECUTE IMMEDIATE 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_type_name||'.'||v_src_type_control_attribute||' := null ; :rec := v_rec; end;'  using in out p_lawfile_rec ;
            end if;

            IF  v_source_table = 'KOC_LAW_BASES' AND upper(v_source_column_name) = 'STATUS_ID' THEN
                    begin
                        p_lawfile_rec.general_info_rec.status_id_desc := v_description ;
                    exception when others then
                        null;
                    end;
                END IF;
        end if;
   end;

    procedure add_expense(p_code in varchar2, p_amount in number, p_tbl in out lawyer_expense_tbl)
    is

        v_rec lawyer_expense_rec;
    begin
        begin
            select explanation
              into v_rec.description
              from koc_clm_sf_total_types
             where sf_total_type = p_code;
        exception when others then
            v_rec.description := null;
        end;

        v_rec.code := p_code;
        v_rec.amount := p_amount;

        p_tbl(p_tbl.count) := v_rec;

    end add_expense;
   --Harici avukat dava giriþ masraflarý
    procedure insert_lawyer_expenses(p_law_file_no in varchar2,
                                     p_user_name in varchar2,
                                     p_authority_count in number,
                                     p_is_exploration in number,
                                     p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_case_amount number;
        v_lawyer number;
        v_party_count number := 0;
        v_witness_count number := 0;
        v_courtm_fee number;
        v_courti_fee number;
        v_authority_expense number;

        v_tbl lawyer_expense_tbl;

        v_courtm_type varchar2(1);
        v_courtm_id varchar2(10);
        v_courtm_date date;
        v_courti_type varchar2(1);
        v_courti_id varchar2(10);
        v_courti_date date;

        -- Mahkeme No
        cursor c_court_m is
        select court_type, court_id, case_date
          from koc_law_base_courts
         where court_enf_type = 'M'
           and law_file_no = p_law_file_no;

        -- Ýcre Mahkeme No
        cursor c_court_i is
        select court_type, court_id, case_date
          from koc_law_base_courts
         where court_enf_type = 'I'
           and law_file_no = p_law_file_no;
    begin

        begin
            select case_amount * koc_curr_utils.retrieve_effective_parity(case_amount_swf, base_swift_code, pme_public.opus_date, 36),
                   lawyer,
                   tanik_sayisi
              into v_case_amount,
                   v_lawyer,
                   v_witness_count
              from koc_law_bases
             where law_file_no = p_law_file_no;

        exception when others then
            v_error_msg := 'Harici avukat masraf giriþinde '||p_law_file_no||' nolu hukuk dosyasý bulunamadý.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'INSERT_LAWYER_EXPENSES',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.INSERT_LAWYER_EXPENSES',
                p_process_results
            );
            return;
        end;

        open c_court_m;
        fetch c_court_m into v_courtm_type, v_courtm_id, v_courtm_date;
        close c_court_m;

        open c_court_i;
        fetch c_court_i into v_courti_type, v_courti_id, v_courti_date;
        close c_court_i;

        if v_courtm_id is null and
           v_courti_id is null
        then
            v_error_msg := 'Mahkeme ve/veya Ýcra Dairesi seçilmemiþ.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'INSERT_LAWYER_EXPENSES',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.INSERT_LAWYER_EXPENSES',
                p_process_results
            );
            return;
        end if;

        select count(1)
          into v_party_count
          from koc_law_interested_parties lip
         where law_file_no = p_law_file_no
           and not exists
         (
            select 1
              from cp_v_partners a,
                   cp_partner_roles b,
                   koc_cp_partners_ext c
             where a.part_id = lip.part_id
               and a.part_id = b.part_id
               and b.end_date is null
               and b.role_type = 'ALZ'
               and b.object_type = 'LAW'
         )
         and lip.res_def_type not in (select to_char(taraf_rol_kodu) from alz_uyap_taraf_rolleri where taraf_rol_aciklama = 'TANIK');

        --Mahkeme masraflarý
        if v_courtm_id is not null then
            begin
                if v_courtm_type = 'U' then
                    select nvl(b.court_apply_fees, 0) court_fee,
                           nvl(b.authority_expenses, 0) authority_expense
                      into v_courtm_fee,
                           v_authority_expense
                      from alz_uyap_birim_listesi a,
                           alz_law_court_uyap_payment_def b
                     where a.birim_id = v_courtm_id
                       and a.birim_turu_kod = b.court_unit_code
                       and sysdate between b.validity_start_date and nvl(b.validity_end_date, sysdate);

                else
                    select nvl(b.court_apply_fees, 0) court_fee,
                           nvl(b.authority_expenses, 0) authority_expense
                      into v_courtm_fee,
                           v_authority_expense
                      from koc_law_court_ref a,
                           koc_law_court_payment_def b
                     where a.court_enf_no = v_courtm_id
                       and a.court_enf_type = v_courtm_type
                       and a.court_type = b.court_type
                       and a.court_enf_type = b.court_enf_type
                       and sysdate between b.validity_start_date and nvl(b.validity_end_date, sysdate);
                end if;
            exception when others then
                v_courtm_fee := 0;
                v_authority_expense := 0;
            end;

            add_expense('86', v_courti_fee, v_tbl);

            if (v_case_amount * alz_lawfile_utils.get_payment_param('PESIN_HARC_CARPAN') / 4) <= alz_lawfile_utils.get_payment_param('PESIN_HARC_LIMIT') then
                add_expense('76', alz_lawfile_utils.get_payment_param('PESIN_HARC_LIMIT'), v_tbl);
            else
                add_expense('76', v_case_amount * alz_lawfile_utils.get_payment_param('PESIN_HARC_CARPAN') / 4, v_tbl);
            end if;

            if v_authority_expense > 0 then
                add_expense('08', v_authority_expense * nvl(p_authority_count, 0), v_tbl);
            end if;

            add_expense('02', alz_lawfile_utils.get_payment_param('VEKALET_HARCI'), v_tbl);
            add_expense('84', alz_lawfile_utils.get_payment_param('TEBLIGAT_TUTARI') * alz_lawfile_utils.get_payment_param('TEBLIGAT_CARPAN') * v_party_count, v_tbl);
            add_expense('17', v_witness_count * (alz_lawfile_utils.get_payment_param('TEBLIGAT_TUTARI') + alz_lawfile_utils.get_payment_param('TANIK_ASGARI_UCRET')), v_tbl);

            if nvl(p_is_exploration, 0) = 1 then
                add_expense('80', alz_lawfile_utils.get_payment_param('KESIF_HARCI_AVANSI') + alz_lawfile_utils.get_payment_param('KESIF_ULASIM_GIDERI'), v_tbl);
            end if;

            add_expense('03', alz_lawfile_utils.get_payment_param('BARO_PULU'), v_tbl);
            add_expense('21', alz_lawfile_utils.get_payment_param('DOSYA_GIDERI'), v_tbl);
        end if;

        --Ýcra Masraflarý
        if v_courti_id is not null then
            begin
                if v_courti_type = 'U' then
                    select nvl(b.court_apply_fees, 0) court_fee
                      into v_courti_fee
                      from alz_uyap_birim_listesi a,
                           alz_law_court_uyap_payment_def b
                     where a.birim_id = v_courti_id
                       and a.birim_turu_kod = b.court_unit_code
                       and sysdate between b.validity_start_date and nvl(b.validity_end_date, sysdate);

                else
                    select nvl(b.court_apply_fees, 0) court_fee
                      into v_courti_fee
                      from koc_law_court_ref a,
                           koc_law_court_payment_def b
                     where a.court_enf_no = v_courti_id
                       and a.court_enf_type = v_courti_type
                       and a.court_type = b.court_type
                       and a.court_enf_type = b.court_enf_type
                       and sysdate between b.validity_start_date and nvl(b.validity_end_date, sysdate);
                end if;
            exception when others then
                v_courti_fee := 0;
            end;

            add_expense('85', v_courti_fee, v_tbl);
            add_expense('77', v_case_amount * alz_lawfile_utils.get_payment_param('ICRA_PESIN_HARC_CARPAN'), v_tbl);
            add_expense('78', alz_lawfile_utils.get_payment_param('ICRA_VEKALET_HARCI'), v_tbl);
            add_expense('79', v_party_count * alz_lawfile_utils.get_payment_param('ICRA_TEBLIGAT_TUTARI'), v_tbl);
            add_expense('81', alz_lawfile_utils.get_payment_param('ICRA_BARO_PULU'), v_tbl);
            add_expense('82', alz_lawfile_utils.get_payment_param('ICRA_DOSYA_GIDERI'), v_tbl);
        end if;

        for i in 0..(v_tbl.count-1) loop

            begin
                insert into koc_law_trans_detail
                (
                    law_file_no,
                    trans_no,
                    lawyer,
                    payment_date,
                    trans_amount,
                    payment_type,
                    creditor_name,
                    swift_code,
                    currency_exchange_rate,
                    user_name,
                    process_date,
                    is_cancalled,
                    is_approved,
                    is_transfered,
                    explanation,
                    ticket_no,
                    batch_id,
                    approval_date,
                    invoice_date,
                    invoice_no,
                    document_type
                )
                values
                (
                    p_law_file_no,
                    i,
                    v_lawyer,
                    nvl(v_courtm_date, v_courti_date),
                    v_tbl(i).amount,
                    v_tbl(i).code,
                    nls_upper(substr(koc_clm_utils.partner_name_bul(v_lawyer), 1, 100), 'NLS_SORT = XTURKISH'),
                    base_swift_code,
                    1,
                    p_user_name,
                    sysdate,
                    0,
                    0,
                    0,
                    v_tbl(i).description,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                );

            exception when others then
                v_error_msg := 'Masraflar kaydedilirken hata oldu: '||substr(SQLERRM, 1, 900);

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'INSERT_LAWYER_EXPENSES',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.INSERT_LAWYER_EXPENSES',
                    p_process_results
                );
                return;
            end;
        end loop;
    end insert_lawyer_expenses;

    procedure do_action_authorization(p_law_file_no         in out varchar2,
                                      p_action_type         in varchar2,
                                      p_object_name         in varchar2,
                                      p_object_detail       in varchar2,
                                      p_rec                 in law_authorization_typ,
                                      p_lawfile_rec         in out law_file_all_typ,
                                      p_simple_questions    in out customer.simple_question_table,
                                      p_user_name           in varchar2,
                                      p_process_results out customer.process_result_table,
                                      p_description in out varchar2 ,
                                      p_status in out number )
    is
        v_error_msg varchar2(1000);
        v_ticket_id number;
        v_count number;
        v_new_control number:=0;
        v_harici_user varchar2(30);
        v_subject varchar2(200);
        v_note varchar2(4000);
        v_new_law_file_no varchar2(25);
    begin

        if p_law_file_no is null then
            v_error_msg := 'Hukuk Dosya Numarasý boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'DO_ACTION_AUTHORIZATION',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );
            return;
        end if;

        if p_rec.auth_id  is null then
            v_error_msg := 'Otorizasyon numarasý boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'DO_ACTION_AUTHORIZATION',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );
            return;
        end if;

        IF p_action_type = 'APPROVE' THEN
            p_description :=  p_rec.description ;
            APPROVE_LAW_FILE_AUTH (P_AUTHORIZATION_ID   => p_rec.auth_id ,
                                                  P_APPROVER => p_user_name,
                                                  p_rec => p_lawfile_rec  ,
                                                  p_simple_questions =>p_simple_questions ,
                                                  p_process_results=>p_process_results,
                                                  p_description => p_description,
                                                  p_status => p_status  );

            begin
                v_count := p_process_results.count;
            exception when others then
                v_count := 0;
            end;
            if v_count > 0 then
                if p_process_results(1).type = -1 then
                    rollback;
                    return;
                end if;
            end if;

            process_result(
                99, --p_process_no
                0,
                9,
                100,
                'DO_ACTION_AUTHORIZATION',
                'Otorizasyon onayýnýz gerçekleþmiþtir.',
                'Otorizasyon onayýnýz gerçekleþmiþtir.',
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );

        ELSIF p_action_type = 'CANCEL' THEN
            AUTH_CANCEL ( P_AUTHORIZATION_ID   => p_rec.auth_id ,
                                  P_APPROVER        => p_user_name,
                                  P_CANCEL_REASON      => p_rec.description,
                                  p_law_file_no        => p_law_file_no,
                                  p_process_results    => p_process_results );
            begin
                v_count := p_process_results.count;
            exception when others then
                v_count := 0;
            end;
            if v_count > 0 then
                if p_process_results(1).type = -1 then
                    rollback;
                    return;
                end if;
            end if;

            process_result(
                99, --p_process_no
                0,
                9,
                100,
                'DO_ACTION_AUTHORIZATION',
                'Otorizasyon iptal iþleminiz gerçekleþmiþtir.',
                'Otorizasyon iptal iþleminiz gerçekleþmiþtir.',
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );

        ELSIF p_action_type = 'REJECT' THEN
                AUTH_REJECT ( P_AUTHORIZATION_ID  => p_rec.auth_id ,
                              P_APPROVER       => p_user_name,
                              P_REJECT_REASON    => p_rec.description,
                              p_law_file_no      => p_law_file_no,
                              p_process_results   => p_process_results );

            begin
                v_count := p_process_results.count;
            exception when others then
                v_count := 0;
            end;
            if v_count > 0 then
                if p_process_results(1).type = -1 then
                    rollback;
                    return;
                end if;
            end if;

            select is_approved
            into v_new_control
            from koc_law_bases
            where law_file_no= p_law_file_no ;
            if v_new_control = 2 then
                update koc_law_bases
                set is_approved = 3
                where law_file_no= p_law_file_no ;

                select ticket_id,create_user
                into v_ticket_id,v_harici_user
                from alz_law_auth
                where authorization_id =p_rec.auth_id;

                v_subject := 'Yeni açmýþ olduðunuz dosya reddedilmiþtir. '||p_rec.description||' . Dosyayý iþ üzerinden yeniden oluþturabilirsiniz.';
                p_description := 'Dosya reddedildi ve kaydý silindi. Harici avukat kayýtlarý inceleyip yeniden iþ üzerinden dosyayý açabilir.';
                p_status := 0 ;
                alz_law_ticket_process_utils.REDIRECT_TICKET( p_assigned_group => 'LMHA',
                                                                                  p_assigned_user=> v_harici_user,
                                                                                  p_redirector  => p_user_name ,
                                                                                  p_deadline   => null ,
                                                                                  p_subject   => v_subject ,
                                                                                  p_redirect_reason_code  => 1,
                                                                                  p_ticket_id    => v_ticket_id,
                                                                                  p_process_results   => p_process_results );
                -- open rucu tickets
                begin
                    select ticket_id
                    into v_ticket_id
                    from koc_law_bases
                    where law_file_no= p_law_file_no ;

                    update alz_law_ticket_process
                    set status = 'OPEN' , close_date = null
                    where ticket_id = v_ticket_id ;

                    update alz_law_ticket
                    set lawfile_no = null
                    where ticket_id = v_ticket_id ;
                exception when others then
                    null ;
                end;
                -- open rucu tickets
                --delete main records
                delete koc_law_bases where law_file_no= p_law_file_no ;

                delete koc_law_bases_detail where law_file_no= p_law_file_no ;
                p_lawfile_rec := null;
                --delete main records
                process_result(
                    99, --p_process_no
                    0,
                    9,
                    100,
                    'DO_ACTION_AUTHORIZATION',
                    'Otorizasyon reddedilmiþtir.',
                    'Otorizasyon reddedilmiþtir',
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                    p_process_results
                );
                return;
            end if;

            process_result(
                99, --p_process_no
                0,
                9,
                100,
                'DO_ACTION_AUTHORIZATION',
                'Otorizasyon reddedilmiþtir.',
                'Otorizasyon reddedilmiþtir',
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );
        ELSE
            rollback;
            v_error_msg := 'Otorizasyon için uygun aksiyonu seçiniz: '||substr(SQLERRM, 1, 950);

            process_result(
                99, --p_process_no
                0,
                9,
                -1,
                'DO_ACTION_AUTHORIZATION',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );
            return;
        END IF;

        -- ticket_check
         begin
            select ticket_id,create_user
            into v_ticket_id,v_harici_user
            from alz_law_auth
            where authorization_id =p_rec.auth_id;

            select count(1)
            into v_count
            from alz_law_auth
            where is_approved = 0
            and is_cancelled = 0
            and ticket_id = v_ticket_id ;

            if v_ticket_id is not null and v_count = 0 then
                -- burada geri yonlendirme yapýlacak
                --alz_law_ticket_process_utils.UPDATE_TICKET_STATUS(v_ticket_id,'CLOSED',p_user_name ,p_process_results);
                select is_approved
                into v_new_control
                from koc_law_bases
                where law_file_no= p_law_file_no ;
                if v_new_control = 2 then
                   select count(1)
                    into v_count
                    from alz_law_auth
                    where is_approved = -1
                    and ticket_id = v_ticket_id ;
                    if v_count > 0 then
                        --red iþlemi statu 3e cekilir ticket yonlendirilir
                        update koc_law_bases
                        set is_approved = 3
                        where law_file_no= p_law_file_no ;

                        v_subject := 'Yeni açmýþ olduðunuz dosya reddedilmiþtir. Açýklama '||p_rec.description;
                    else
                        -- kabul islemi statu 1 e cekilir ticket yonlendirilir. ve law_file_no lar guncellenir
                        update koc_law_bases
                        set is_approved = 1
                        where law_file_no= p_law_file_no ;

                        v_new_law_file_no := TO_CHAR(SYSDATE,'yyyy')||' HL '||p_law_file_no ;

                         if p_lawfile_rec.general_info_rec.law_file_type = 'HUKUK' then -- Hukuk
                            v_new_law_file_no := TO_CHAR(SYSDATE,'yyyy')||' H'||p_lawfile_rec.general_info_rec.law_case_type||' '||p_law_file_no;
                        elsif p_lawfile_rec.general_info_rec.law_file_type = 'CEZA' then -- Ceza
                            v_new_law_file_no := TO_CHAR(SYSDATE,'yyyy')||' HC'||' '||p_law_file_no;
                        elsif p_lawfile_rec.general_info_rec.law_file_type = 'TESPIT' then -- Tespit
                            v_new_law_file_no := TO_CHAR(SYSDATE,'yyyy')||' HT'||p_lawfile_rec.general_info_rec.law_case_type||' '||p_law_file_no;
                        end if;

                        update koc_law_bases
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        update koc_law_bases_detail
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        update koc_law_base_courts
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        update koc_law_trans_detail
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        update koc_law_trans_detail_sub
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        UPDATE koc_law_interested_parties
                        set LAW_FILE_NO= v_new_law_file_no
                        WHERE LAW_FILE_NO= p_law_file_no;

                        update koc_law_ext_bases_detail
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        update alz_law_ticket
                        set lawfile_no = v_new_law_file_no
                        where ticket_id = v_ticket_id ;

                        update alz_law_bases_log
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        update alz_law_bases_detail_log
                        set law_file_no = v_new_law_file_no
                        where law_file_no= p_law_file_no ;

                        p_law_file_no := v_new_law_file_no ;

                        if p_lawfile_rec.court_list is not null and
                           p_lawfile_rec.court_list.count > 0
                        then

                            select count(1)
                              into v_count
                              from table(p_lawfile_rec.court_list)
                             where court_enf_type in ('M', 'I');

                            if v_count > 0 then
                                insert_lawyer_expenses(p_law_file_no,
                                                   p_user_name,
                                                   p_lawfile_rec.general_info_rec.authority_count,
                                                   nvl(p_lawfile_rec.general_info_rec.is_exploration, 0),
                                                   p_process_results);
                                begin
                                    v_count := p_process_results.count;
                                exception when others then
                                    v_count := 0;
                                end;

                                if v_count > 0 then
                                    if p_process_results(1).type = -1 then
                                        rollback;
                                        return;
                                    end if;
                                end if;
                            end if;
                        end if;

                        declare
                            v_reffs varchar2(1000);
                        begin
                            select listagg( cs.ext_reference,',') within  group ( order by cs.ext_reference )
                            into v_reffs
                            from koc_law_bases_detail detail,
                            clm_subfiles cs
                            where cs.claim_id = detail.claim_id
                            and nvl( cs.sf_no,0) = nvl( detail.sf_no,0)
                            and law_file_no = v_new_law_file_no ;

                            if v_reffs is null then
                                v_subject :=  'Yeni dosya numarasý '||v_new_law_file_no||' olan otorizasyon onayýnýz tamamlanmýþtýr.' ;
                            else
                                v_subject := v_reffs||' referanslý dosyalar için '||v_new_law_file_no||' nolu Hukuk Dosyasý oluþturulmuþtur.';
                            end if;
                        exception when others then
                            v_subject :=  'Yeni dosya numarasý '||v_new_law_file_no||' olan otorizasyon onayýnýz tamamlanmýþtýr.' ;
                        end;

                    end if;
                else
                    v_subject := 'Otorizasyon onaylarýnýz gerçekleþmiþtir. Detaylarý not kýsmýndan görebilirsiniz.' ;
                    for x_auth in ( select auth.reject_reason, nvl( ext.source_column_description,auth.source_column_name) source_column_description,
                                                    decode( auth.source_table ,
                                                                 'KOC_LAW_BASE_COURTS' , get_auth_line_desc(auth.authorization_id) ,
                                                                NVL( auth.DESCRIPTION, decode( auth.source_column_type ,
                                                                                                                'NUMBER', trim( to_char( to_number(auth.source_column_new_value),'999G999G999D99')),
                                                                                                                auth.source_column_new_value))||' '||auth.src_column_helper_value_new  ) value_desc,
                                            nvl( (select cs.ext_reference
                                                        from koc_law_bases_detail detail,
                                                        clm_subfiles cs
                                                        where cs.claim_id = detail.claim_id
                                                        and nvl(cs.sf_no,0) = nvl( detail.sf_no,0)
                                                        and 'KOC_LAW_BASES_DETAIL' = auth.source_table
                                                        and law_file_no = auth.lawfile_no
                                                        and detail_no = auth.source_id
                                                        and rownum=1
                                                        union all
                                                        select distinct explanation
                                                        from koc_law_court_type
                                                        where 'KOC_LAW_BASE_COURTS' = auth.source_table
                                                        and court_enf_type =auth.source_id
                                                        and rownum=1 ), auth.source_id ) reference_value,
                                                        auth.is_approved
                                            from alz_law_auth auth,
                                            alz_law_auth_rule_ext ext
                                            where auth.source_column_name = ext.source_column(+)
                                            and ext.auth_rule_id(+) = 0
                                            and ticket_id = v_ticket_id )
                    loop

                        if x_auth.is_approved = 1 then
                            select v_note||'<p>'||x_auth.REFERENCE_VALUE||' referanslý kaydýn '||x_auth.source_column_description||' alanýnýn deðerinin '||x_auth.value_desc||' olarak deðiþtirilmesi talebiniz onaylanmýþtýr. '||nvl2( x_auth.REJECT_REASON , 'Açýklama:'||x_auth.REJECT_REASON , null )||chr(10)||'</p>' into v_note from dual;
                        elsif x_auth.is_approved = -1 then
                            v_note :=v_note||'<p style="color:red;">'||x_auth.REFERENCE_VALUE||' referanslý kaydýn '|| x_auth.source_column_description||' alanýnýn deðerinin '||x_auth.value_desc||' deðiþtirilmesi talebiniz reddedilmiþtir. Açýklama: '||x_auth.REJECT_REASON||chr(10)||'</p>'  ;
                            v_subject := 'Reddedilen Otorizasyon onaylarýnýz var. Detaylarý not kýsmýndan görebilirsiniz.' ;
                        end if;
                    end loop;
                    alz_law_ticket_process_utils.INSERT_TICKET_NOTE(p_ticket_id  => v_ticket_id ,
                                                                                                 p_note => v_note,
                                                                                                 p_is_internal  => 1 , -- bu sayý tersmiþ
                                                                                                 p_create_user => p_user_name,
                                                                                                 p_process_results  => p_process_results );
                end if;

                 alz_law_ticket_process_utils.REDIRECT_TICKET( p_assigned_group => 'LMHA',
                                                                                  p_assigned_user=> v_harici_user,
                                                                                  p_redirector  => p_user_name ,
                                                                                  p_deadline   => null ,
                                                                                  p_subject   => v_subject ,
                                                                                  p_redirect_reason_code  => 1,
                                                                                  p_ticket_id    => v_ticket_id,
                                                                                  p_process_results   => p_process_results );

                p_description := null ;
            end if;




        exception when no_data_found then
                -- ticket bulunamadý iþlem yapma
                null;
        when others then
            -- ticket kapanmadý ama rollback yapma
            v_error_msg := 'Otorizasyon iþi kapatýlýrken hata oluþtu'||substr(SQLERRM, 1, 950);

            process_result(
                99, --p_process_no
                0,
                9,
                -1,
                'DO_ACTION_AUTHORIZATION',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
                p_process_results
            );
            return;
        end;
        -- ticket_chek
-- control objesi temizlenmesi
            clear_control_object( p_rec.auth_id,p_lawfile_rec );
        -- control objesinin temizlenmesi
    exception when others then
        rollback;
        v_error_msg := 'Otorizasyon iþlemi kaydedilirken hata oldu: '||substr(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'DO_ACTION_AUTHORIZATION',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.DO_ACTION_AUTHORIZATION',
            p_process_results
        );
        return;

    end do_action_authorization;

    --Mahkeme Bilgileri Listesi
        function get_court_details(p_law_file_no varchar2) return law_courts_tbl
    is
        v_list law_courts_tbl;
        v_count number:=0;
    begin

--        select LAW_COURTS_TYP(
--                lbc.court_enf_type,
--                lbc.court_type,
--                lbc.court_id,
--                alc.court_name,
--                lbc.court_file_no,
--                lbc.case_date,
--                lbc.case_notif_date,
--                lbc.decision_no,
--                lbc.decision_date,
--                lbc.decision_notif_date,
--                get_authorization(lbc.law_file_no,
--                                      'court_id',
--                                      lbc.court_enf_type
--                                      ) --court_control
--               ) BULK COLLECT
--          into v_list
--          from koc_law_base_courts lbc,
--               alz_law_courts_v alc
--         where lbc.law_file_no = p_law_file_no
--           and lbc.court_type = alc.court_type
--           and lbc.court_id = alc.court_id
--         order by decode(lbc.court_enf_type, 'M', 1, 'R', 2, 'Y', 3, 'I', 4, 'T', 5, 'S', 6, 'H', 7, 'A', 8);
        select LAW_COURTS_TYP(court_enf_type,
                court_type,
                court_id,
                court_name,
                court_file_no,
                case_date,
                case_notif_date,
                decision_no,
                decision_date,
                decision_notif_date,
                court_control
               ) BULK COLLECT
          into v_list
          from(
              select lbc.court_enf_type,
                    lbc.court_type,
                    lbc.court_id,
                    alc.court_name,
                    lbc.court_file_no,
                    lbc.case_date,
                    lbc.case_notif_date,
                    lbc.decision_no,
                    lbc.decision_date,
                    lbc.decision_notif_date,
                    get_authorization(lbc.law_file_no,
                                          'court_id',
                                          lbc.court_enf_type
                                          ) court_control
              from koc_law_base_courts lbc,
                   alz_law_courts_v alc
             where lbc.law_file_no = p_law_file_no
               and lbc.court_type = alc.court_type
               and lbc.court_id = alc.court_id
             union all
             select   lae.source_id,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        get_authorization(lae.law_file_no,
                                              'court_id',
                                              lae.source_id
                                              ) --court_control
            from alz_law_auth_ext lae,
            alz_law_auth la
            where lae.authorization_id = la.authorization_id
            and la.is_approved = 0
            and la.is_cancelled = 0
            and la.source_table = 'KOC_LAW_BASE_COURTS'
            and LA.LAWFILE_NO = p_law_file_no
            and lae.source_id not in ( select court_enf_type
                                            from koc_law_base_courts lbc,
                                               alz_law_courts_v alc
                                            where lbc.law_file_no = p_law_file_no
                                           and lbc.court_type = alc.court_type
                                           and lbc.court_id = alc.court_id)
        )
        order by decode(court_enf_type, 'M', 1, 'R', 2, 'Y', 3, 'I', 4, 'T', 5, 'S', 6, 'H', 7, 'A', 8);

--Mahkeme listesi= M, Tahkim Ýtiraz= R, Üst Mahkeme Listesi= Y, Ýcra Listesi= I, ÝTM Listesi= T, Savcýlýk Listesi= S, Hakem Heyeti= H, Arabuluculuk= A
        return v_list;

    end get_court_details;

    --Taraf Listesi
    function get_party_list(p_law_file_no varchar2) return law_party_tbl
    is
        v_list law_party_tbl;
    begin

        select LAW_PARTY_TYP(
                   lip.unique_id,
                   lip.part_id,
                   koc_clm_utils.partner_name_bul(lip.part_id),
                   utr.taraf_rol_kodu,
                   utr.taraf_rol_aciklama,
                   crt.role_type,
                   crt.description,
                   lip.prosecution_status,
                   lip.resp_tcvkn,
                   lip.process_date,
                   nvl(lip.source, 'MANUEL'),
                   decode(lip.source, 'UYAP', lip.source_id, null),
                   decode(lip.source, 'UYAP', lip.source_detail_id, null),
                   alz_litigation_utils.get_proxy_bulk(lip.law_file_no, lip.part_id, lip.unique_id)
               ) BULK COLLECT
          into v_list
          from koc_law_interested_parties lip,
               koc_law_bases lb,
               cp_partners cp,
               alz_uyap_taraf_rolleri utr,
               cp_role_types crt
         where lip.part_id = cp.part_id
           and lip.law_file_no = lb.law_file_no
           and decode(lip.res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', lip.res_def_type) = to_char(utr.taraf_rol_kodu)
           and crt.object_type = 'LAW'
           and lip.role_type = crt.role_type
           and lip.law_file_no = p_law_file_no
         order by
             case
                when koc_clm_utils.partner_name_bul(lip.part_id) like 'ALL_ANZ%' then
                    1
                else
                    2
              end
              ,
              case
                when lb.law_case_type = 'A' then
                    case
                        when decode(lip.res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', lip.res_def_type) = '2' then
                            1
                        else
                            2
                    end
               else
                    case
                        when decode(lip.res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', lip.res_def_type) = '1' then
                            1
                        else
                            2
                    end
              end;

        return v_list;
    end get_party_list;

    --Dava Detay(Hasar) Listesi
    function get_law_detail_list(p_law_file_no in varchar2) return law_base_detail_tbl
    is
        v_rec  law_base_detail_typ;
        v_list law_base_detail_tbl;
        v_rec_sort_type koc_law_reserve_utils.rec_sort_type;
        v_law_base_dtl_records koc_law_reserve_utils.koc_law_bases_detail_type;
        v_temp_number number;
        v_temp_char varchar2(20);
        v_has_claim varchar2(5);
        v_count number;

        cursor c_detail
        is

        select lb.law_file_no,
               lb.law_case_type,
               lb.law_file_type,
               lb.file_close_date,
               lb.law_sf_type,
               lbd.detail_no,
               lbd.claim_id,
               lbd.sf_no,
               cs.ext_reference,
               lbd.policy_ref,
               lbd.hyt_loss_result_code,
               lbd.hyt_loss_file_year,
               lbd.hyt_loss_file_no,
               lbd.law_type,
               (
                select explanation
                  from alz_look_up
                 where code = 'LAW_TYPE'
                   and parameter = lbd.law_type
                   and rownum = 1
               ) as law_type_exp,
               lbd.cover_code,
               case
                when lb.law_sf_type in ('H', 'R', 'T', 'M', 'I', 'B', 'E') then
                       (
                        select ct.long_name
                          from oc_cover_definitions ocd,
                               cur_translations ct
                         where 1 = 1
                           and ocd.desc_int_id = ct.desc_int_id
                           and ocd.cover_code = lbd.cover_code
                           and ct.sula_ora_nls_code = 'TR'
                           and rownum = 1
                       )
                    else
                        lbd.cover_name
                end
               as cover_name,
               decode(lb.law_file_type, 'A', lbd.cover_amount, null) as cover_amount,
               decode(lb.law_file_type, 'A', nvl(lbd.cover_amount_swf, base_swift_code), null) as cover_amount_swf,
               lbd.case_amount,
               lbd.case_amount_swf,
               lbd.authority_amount,
               lbd.authority_amount_swf,
               lbd.court_correction_amount,
               lbd.court_correction_amount_swf,
               lbd.court_decision_amount,
               lbd.court_decision_amount_swf,
               lbd.interest_type,
               nvl(lbd.interest_begin_date, lbd.payment_denounce_date) as interest_begin_date,
               decode(lbd.interest_type, 'S', lbd.interested_amount) as interest_amount,
               lbd.law_beginning_type,
               lbd.payment_denounce_date,
               null as reserve_amount,
               null as reserve_amount_swf,
               null as total_reserve_amount,
               null as total_reserve_amount_swf,
               lbd.factura,
               lbd.factura_swf,
               lbd.expertise_amount,
               lbd.expertise_amount_swf,
               lbd.recourse_amount,
               decode(nvl(lbd.law_ba, 'H'), 'H', 0, 1) as law_ba,
               nvl(lbd.is_maktu, 0) as is_maktu,
               nvl(lbd.is_exception, 0) as is_exception,
               nvl(to_number(lbd.is_inform), 0) as is_inform,
               nvl(lbd.is_adjustment, 0) as is_adjustment
--               lbd.enf_amount,
--               lbd.court_decided_amount,
--               lbd.court_decided_amount_swf,
--               lbd.recourse_amount,
--               lbd.swift_code,
--               lbd.konservasyon,
--               lbd.lbend_amount,
--               lbd.law_cur_amt,
--               lbd.bepaid_amount,
--               lbd.law_ba_nocheck,
          from koc_law_bases lb,
               koc_law_bases_detail lbd,
               clm_subfiles cs
         where lb.law_file_no = p_law_file_no
           and lb.law_file_no = lbd.law_file_no
           and lbd.claim_id = cs.claim_id(+)
           and lbd.sf_no = cs.sf_no(+);

        i number := 1;
    begin
        v_list := law_base_detail_tbl();

        for rec_detail in c_detail loop
            v_list.extend;

            v_rec :=
                law_base_detail_typ(
                    rec_detail.detail_no,
                    rec_detail.claim_id,
                    rec_detail.sf_no,
                    rec_detail.ext_reference,
                    rec_detail.policy_ref,
                    rec_detail.hyt_loss_result_code,
                    rec_detail.hyt_loss_file_year,
                    rec_detail.hyt_loss_file_no,
                    rec_detail.law_type,
                    rec_detail.law_type_exp,
                    rec_detail.cover_code,
                    rec_detail.cover_name,
                    rec_detail.cover_amount,
                    rec_detail.cover_amount_swf,
                    rec_detail.case_amount,
                    rec_detail.case_amount_swf,
                    get_authorization(rec_detail.law_file_no,
                                      'case_amount',
                                      rec_detail.detail_no
                                      ), -- case_amount_control
                    rec_detail.authority_amount,
                    rec_detail.authority_amount_swf,
                    get_authorization(rec_detail.law_file_no,
                                      'authority_amount',
                                      rec_detail.detail_no
                                      ), -- authority_amount_control
                    rec_detail.court_correction_amount,
                    rec_detail.court_correction_amount_swf,
                    get_authorization(rec_detail.law_file_no,
                                      'court_correction_amount',
                                      rec_detail.detail_no
                                      ), -- court_correction_control
                    rec_detail.court_decision_amount,
                    rec_detail.court_decision_amount_swf,
                    get_authorization(rec_detail.law_file_no,
                                      'court_decision_amount',
                                      rec_detail.detail_no
                                      ), -- court_decision_control
                    rec_detail.interest_type,
                    get_authorization(rec_detail.law_file_no,
                                      'interest_type',
                                      rec_detail.detail_no
                                      ), -- interest_type_control
                    rec_detail.interest_begin_date,
                    get_authorization(rec_detail.law_file_no,
                                      'interest_begin_date',
                                      rec_detail.detail_no
                                      ), -- insterest_begin_date_control
                    rec_detail.interest_amount,
                    rec_detail.law_beginning_type,
                    rec_detail.payment_denounce_date,
                    rec_detail.reserve_amount,
                    rec_detail.reserve_amount_swf,
                    rec_detail.total_reserve_amount,
                    rec_detail.total_reserve_amount_swf,
                    rec_detail.factura,
                    rec_detail.factura_swf,
                    get_authorization(rec_detail.law_file_no,
                                      'factura',
                                      rec_detail.detail_no
                                      ), -- factura_control
                    rec_detail.expertise_amount,
                    rec_detail.expertise_amount_swf,
                    get_authorization(rec_detail.law_file_no,
                                      'expertise_amount',
                                      rec_detail.detail_no
                                      ), -- expertise_amount_control
                    rec_detail.recourse_amount,
                    rec_detail.law_ba,
                    rec_detail.is_maktu,
                    rec_detail.is_exception,
                    rec_detail.is_inform,
                    rec_detail.is_adjustment,
                    null --detail_type
            );

            if rec_detail.file_close_date is null then
                if rec_detail.law_file_type = 'A' then
                    if rec_detail.interest_type <> 'S' then
                        begin
                            v_rec.interest_amount := koc_law_reserve_utils.execute_function( 2, p_law_file_no, rec_detail.detail_no, pme_public.opus_date);
                        exception when others then
                            v_rec.interest_amount := null;
                        end;
                    end if;
                elsif rec_detail.law_file_type = 'L' then
                    if rec_detail.interest_type <> 'S' then
                        begin
                            v_rec.interest_amount := koc_law_reserve_utils.execute_function1( 2, p_law_file_no, rec_detail.detail_no, pme_public.opus_date);
                        exception when others then
                            v_rec.interest_amount := null;
                        end;
                    end if;
                end if;
            else
                begin
                    select amount
                      into v_rec.interest_amount
                      from alz_law_reserve_history
                     where law_file_no = p_law_file_no
                       and detail_no = rec_detail.detail_no
                       and accessory_type = 2
                       and category = 'KAPAMA';
                exception when others then
                    rec_detail.interest_amount := 0;
                end;
            end if;

            if rec_detail.law_sf_type = 'Z' and
               rec_detail.hyt_loss_result_code is not null
            then --hayat
                v_rec.ext_reference := rec_detail.hyt_loss_result_code||' '||rec_detail.hyt_loss_file_year||' '||rec_detail.hyt_loss_file_no;
            end if;

            --detail_type
            begin
                select nvl(has_claim, 'N') has_claim
                  into v_has_claim
                  from koc_law_sf_type
                 where law_sf_type = rec_detail.law_sf_type;
            exception when others then
                v_has_claim := null;
            end;

            if v_has_claim = 'Y' then
                select count(1)
                  into v_count
                  from koc_clm_recourse_detail
                 where claim_id = rec_detail.claim_id
                   and sf_no = rec_detail.sf_no;

                if v_count > 0 then
                    v_rec.detail_type := 'R';
                else
                    v_rec.detail_type := 'H';
                end if;
            end if;

/* DETAY MUALLAK
            if rec_detail.law_case_type = 'A' then
                if rec_detail.file_close_date is null then
                    koc_law_reserve_utils.muallak_asil_get_data_lawfile(
                                        p_law_file_no,
                                        rec_detail.detail_no,
                                        v_rec_sort_type,
                                        pme_public.opus_date,
                                        v_law_base_dtl_records);

                    v_rec.reserve_amount := round(koc_law_reserve_utils.execute_function_bordro(1, p_law_file_no, rec_detail.detail_no, pme_public.opus_date, v_law_base_dtl_records) , 2);--muallak asýl

                else
                    begin
                        koc_law_reserve_utils.execute_law_file_closed(
                            1,
                            p_law_file_no,
                            rec_detail.detail_no,
                            v_rec.reserve_amount,
                            v_temp_number,
                            v_temp_number,
                            v_temp_char,
                            v_temp_number);

                        v_rec.reserve_amount := round(v_rec.reserve_amount, 2);

                    exception when others then
                        v_rec.reserve_amount := null;
                    end;
                end if;

                v_rec.reserve_amount_swf := base_swift_code;
            end if;
*/

            v_list(i) := v_rec;
            i := i + 1;
        end loop;

        return v_list;
    end get_law_detail_list;

    function get_law_base_info(p_law_file_no in varchar2) return law_base_typ
    is

        cursor c1 is
        select *
          from koc_law_bases
         where law_file_no = p_law_file_no;

        v_rec   law_base_typ;
        v_list  law_base_detail_tbl;
        v_temp_number number;
        v_temp_char varchar2(20);

        v_rec_sort_type koc_law_reserve_utils.rec_sort_type;
        v_law_base_dtl_records  koc_law_reserve_utils.koc_law_bases_detail_type;
        v_law_reserve_list law_reserve_detail_tbl;
    begin
        v_list := get_law_detail_list(p_law_file_no);

        for rec1 in c1 loop

            v_rec := law_base_typ(
                        rec1.case_amount,
                        rec1.case_amount_swf,
                        get_authorization(rec1.law_file_no,
                                      'case_amount',
                                      null
                                      ),   -- case_amount_control,
                        rec1.cover_amount,
                        nvl(rec1.cover_amount_swf, base_swift_code),
                        null,   -- reserve_amount, -- hesaplanacak
                        null,   -- reserve_amount_swf,
                        null, -- total_reserve_amount
                        null, -- total_reserve_amount_swf
                        null,    -- last_amount,
                        base_swift_code,   -- last_amount_swf,
                        rec1.payment_denounce_date,  -- denounce_date,
                        rec1.interest_type,
                        get_authorization(rec1.law_file_no,
                                      'interest_type',
                                      null
                                      ) ,  -- interest_type_control,
                        nvl(rec1.interest_begin_date, rec1.payment_denounce_date),   -- interest_begin_date,
                        get_authorization(rec1.law_file_no,
                                      'interest_begin_date',
                                      null
                                      ) ,  -- interest_begin_date_control,
                        rec1.interested_amount,  -- interest_amount,
                        null,    -- lawyer_payment
                        null,    -- court_revenue
                        rec1.lawyer_court,
                        rec1.lawyer_foreclosure,
                        0, -- is_manuel
                        rec1.court_decision_amount,
                        rec1.court_decision_amount_swf,
                        get_authorization(rec1.law_file_no,
                                      'court_decision_amount',
                                      null
                                      ),   -- court_decision_control,
                        rec1.court_correction_amount,
                        rec1.court_correction_amount_swf,
                        get_authorization(rec1.law_file_no,
                                      'court_correction_amount',
                                      null
                                      ),   -- court_correction_control,
                        rec1.authority_amount,
                        rec1.authority_amount_swf,
                        get_authorization(rec1.law_file_no,
                                      'authority_amount',
                                      null
                                      ),   -- authority_amount_control,
                        rec1.expertise_amount,
                        rec1.expertise_amount_swf,
                        get_authorization(rec1.law_file_no,
                                      'expertise_amount',
                                      null
                                      ),   -- expertise_amount_control,
                        rec1.factura,
                        rec1.factura_swf,
                        get_authorization(rec1.law_file_no,
                                      'factura',
                                      null
                                      ),   -- factura_control,
                        rec1.law_beginning_type,
                        case
                            when nvl(rec1.law_ba, 'H') = 'H' then
                                0
                            else
                                1
                        end,
                        nvl(to_number(rec1.is_important_case), 0),
                        nvl(to_number(rec1.is_maktu), 0),
                        nvl(to_number(rec1.is_exception), 0),
                        nvl(to_number(rec1.is_inform), 0),
                        null  -- total_amount
                     );


            if rec1.law_file_type = 'L' then
                v_rec.last_amount := greatest(nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0) - nvl(koc_law_utils.toplam_tahsilat(rec1.law_file_no), 0) - nvl(koc_law_utils2.toplam_rvz(rec1.law_file_no), 0), 0);

                v_rec.lawyer_payment := koc_law_utils.lawyer_payment_web(p_law_file_no, 3, nvl(rec1.file_close_date, sysdate), rec1.user_name, nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0));

                --Dava Takip Masrafýna Lehte dosyalarda Avukat Masraf getirilmesi istendi
                select nvl(sum(trans_amount), 0)
                  into v_rec.court_revenue
                  from koc_law_trans_detail
                 where law_file_no = p_law_file_no
                   and sf_total_type = 33;

--                v_rec.total_amount := nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0) + nvl(v_rec.court_revenue, 0) + nvl(rec1.interested_amount,0);


            elsif rec1.law_file_type = 'A' then
                v_rec.last_amount := greatest(nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0) - nvl(koc_law_utils.toplam_tazminat(rec1.law_file_no), 0) - nvl(koc_law_utils2.toplam_rvz(rec1.law_file_no), 0), 0);
                v_rec.lawyer_payment := rec1.lawyer_payment;
                v_rec.court_revenue := rec1.court_revenue;

                if rec1.file_close_date is null then
                    begin
                        v_rec.interest_amount := koc_law_reserve_utils.execute_function(2, rec1.law_file_no, null, pme_public.opus_date);
                    exception when others then
                        v_rec.interest_amount := null;
                    end;

                    begin
                        koc_law_reserve_utils.muallak_asil_get_data_lawfile(
                                            p_law_file_no,
                                            null,
                                            v_rec_sort_type,
                                            pme_public.opus_date,
                                            v_law_base_dtl_records);

                        v_rec.reserve_amount := round(koc_law_reserve_utils.execute_function_bordro(1, p_law_file_no, null, pme_public.opus_date, v_law_base_dtl_records), 2);--muallak asýl
                        v_rec.reserve_amount_swf := base_swift_code;
                    exception when others then
                        v_rec.reserve_amount := null;
                        v_rec.reserve_amount_swf := null;
                    end;
                else
                    --hasarlý veya hasarsýz hukuk
                    begin
                        select sum(amount)
                          into v_rec.interest_amount
                          from alz_law_reserve_history
                         where law_file_no = rec1.law_file_no
                           and accessory_type = 2
                           and category = 'KAPAMA';
                    exception when others then
                        v_rec.interest_amount := 0;
                    end;

                    begin
                        koc_law_reserve_utils.execute_law_file_closed(
                            1,
                            p_law_file_no,
                            null,
                            v_rec.reserve_amount,
                            v_temp_number,
                            v_temp_number,
                            v_temp_char,
                            v_temp_number);

                        v_rec.reserve_amount := round(v_rec.reserve_amount, 2);
                    exception when others then
                        v_rec.reserve_amount := 0;
                    end;
                end if;

                begin
                    v_law_reserve_list := get_reserve_detail_bulk(p_law_file_no, null, 'HUKUK');
                exception when others then
                    v_law_reserve_list := null;
                end;

                if v_law_reserve_list is not null and
                   v_law_reserve_list.count > 0
                then
                    begin
                        select sum(nvl(current_reserve_distribution, 0))
                          into v_rec.total_reserve_amount
                          from table(v_law_reserve_list);

                        v_rec.total_reserve_amount_swf := base_swift_code;
                    exception when others then
                        v_rec.total_reserve_amount := null;
                        v_rec.total_reserve_amount_swf := null;
                    end;
                end if;

            elsif rec1.law_file_type = 'C' then
                v_rec.last_amount := greatest(nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0) - nvl(koc_law_utils.toplam_tazminat(rec1.law_file_no), 0) - nvl(koc_law_utils2.toplam_rvz(rec1.law_file_no), 0), 0);
                v_rec.court_revenue := koc_law_utils.toplam_masraf(rec1.law_file_no);

                if rec1.lawyer is not null then
                    v_rec.lawyer_payment := koc_law_utils.lawyer_payment_per_file(rec1.lawyer);
                else
                    v_rec.lawyer_payment := 0;
                end if;

                v_rec.total_amount := null;

            else
                v_rec.last_amount := greatest(nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0) - nvl(koc_law_utils.toplam_tazminat(rec1.law_file_no), 0) - nvl(koc_law_utils2.toplam_rvz(rec1.law_file_no), 0), 0);
                v_rec.lawyer_payment := rec1.lawyer_payment;
                v_rec.court_revenue := rec1.court_revenue;
                v_rec.total_amount := nvl(koc_law_utils.real_case_amount(rec1.law_file_no), 0) + nvl(v_rec.court_revenue, 0) + nvl(rec1.interested_amount,0);

            end if;

            alz_lawfile_utils.calc_interest_amount(p_law_file_no, v_rec);

            if v_list is not null and v_list.count > 0 then
                select sum(nvl(cover_amount, 0) * koc_curr_utils.retrieve_effective_parity(cover_amount_swf, nvl(v_rec.cover_amount_swf, base_swift_code), pme_public.opus_date, 36)),
                       sum(nvl(interest_amount, 0))
                  into v_rec.cover_amount,
                       v_rec.interest_amount
                  from table(v_list);

                  if v_rec.cover_amount = 0 then
                    v_rec.cover_amount := null;
                  end if;
            end if;

            if rec1.law_file_type = 'L' then
                v_rec.total_amount :=  nvl(v_rec.last_amount, 0) + nvl(v_rec.interest_amount, 0) + nvl(v_rec.lawyer_payment, 0) + nvl(v_rec.court_revenue, 0);

            elsif rec1.law_file_type = 'A' then
                v_rec.total_amount :=  nvl(v_rec.last_amount, 0) + nvl(v_rec.interest_amount, 0) + nvl(v_rec.lawyer_payment, 0) + nvl(v_rec.court_revenue, 0);

            end if;

            v_rec.total_amount := round(nvl(v_rec.total_amount, 0), find_round_digit(base_swift_code, 'S'));

        end loop;

        return v_rec;
    end get_law_base_info;

    procedure get_lawfile(p_law_file_no varchar2,
                          p_user_name varchar2,
                          p_ticket_id number,
                          p_status out number,
                          p_description out varchar2,
                          p_law_file_rec out law_file_all_typ,
                          p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(4000);
        v_count number;
        v_ext_control number;
        v_tp_control number;
        v_department_control number;
        v_supplier_type varchar2(3) := 'HDT';
        v_department varchar2(3) := 'HDT';
        v_court_enf_type varchar2(1);
        v_court_type varchar2(1);
        v_court_id varchar2(10);
        v_court_name varchar2(100);
        v_party_type varchar2(100);
        v_party_type_code varchar2(10);
        v_party_role varchar2(100);
        v_lawyer_id number;
        v_case_notif_date date;
        v_evolution_code number;
        v_evolution_exp varchar2(200);

        v_general_info_rec    law_general_info_typ;
        v_court_list          law_courts_tbl;
        v_court_rec           law_courts_typ;
        v_party_list          law_party_tbl;
        v_party_rec           law_party_typ;
        v_detail_list         law_base_detail_tbl;
        v_rucu_list           law_base_detail_tbl;
        v_detail_rec          law_base_detail_typ;
        v_law_base_rec        law_base_typ;
        i number := 0;
        v_swf_count number;
        v_law_case_type varchar2(1);
        v_is_rucu number;
        v_part_id number;

        cursor c_ticket is

        select a.lawfile_no,
               a.source,
               a.uyap_dosya_id,
               a.header_id,
               a.filenet_id,
               a.law_court_enf,
               a.uyap_birim_id,
               a.court_file_no,
               a.sirket_adi,
               b.department
          from alz_law_ticket a,
               alz_law_ticket_process b
         where a.ticket_id = p_ticket_id
           and a.ticket_id = b.ticket_id;

        cursor c_rucu is
        select rucu_file_no
          from alz_law_ticket alt
         where
         (  alt.ticket_id = p_ticket_id
            and parent is null
            and not exists
            (
             select 1
               from alz_law_ticket
              where parent = alt.ticket_id
            )
         )
         or alt.parent = p_ticket_id;

        cursor c_rucu_party(p_ext_reference varchar2) is

        select utr.taraf_rol_kodu as party_role_code,
               utr.taraf_rol_aciklama as party_role,
               decode(partner_type,'I', 'KRM','SHS') as party_type_code,
               crt.description as party_type,
               related_person_name||' '||related_person_surname as party_name
          from alz_uyap_taraf_rolleri utr,
               cp_role_types crt,
               koc_clm_recourse_detail a,
               koc_clm_recourse_person b
         where a.ext_reference = p_ext_reference
           and utr.taraf_rol_kodu = 2
           and crt.object_type = 'LAW'
           and role_type = decode(partner_type,'I', 'KRM','SHS')
           and a.claim_id = b.claim_id
           and a.sf_no = b.sf_no
           and related_person_name||' '||related_person_surname is not null;

        cursor c_court_enf(p_court_id varchar2) is

        select b.court_enf_type
          from alz_uyap_birim_listesi a,
               alz_law_court_uyap_rel b
         where a.birim_id = p_court_id
           and a.birim_turu_kod = b.court_unit_code
         order by decode(b.court_enf_type, 'M', 1, 'T', 2, 'I', 3, 'R', 4, 'Y', 5);

        cursor c_com_party(p_ticket_id number) is

        select b.communication_no,
               c.party_type as party_role_code,
               c.tax_number,
               c.full_name
          from alz_law_ticket a,
               alz_clm_com_docs_index_tbl b,
               alz_law_com_party_tbl c
         where (a.ticket_id = p_ticket_id or a.parent = p_ticket_id)
           and a.filenet_id = b.filenet_id
           and b.communication_no = c.communication_no;

        cursor c_tahkim_court is

        select court_type,
               court_id,
               court_name
          from alz_look_up a,
               alz_law_courts_v b
         where a.code = 'LAW_TAHKIM_DEFAULT'
           and court_type||court_id = a.parameter;

    begin
        p_status := 1;

        select count(1)
          into v_count
          from web_sec_system_users w,
               koc_cp_partners_ext k
         where w.user_name = p_user_name
           and w.customer_partner_id = k.part_id(+)
           and nvl(k.agen_int_id, 0) <> '12354';

        if v_count > 0 then
            p_description := 'Kullanýcý tanýmýnýzda hata vardýr.';
            p_status := 0;
            return;
        end if;

        begin
            select nvl(sum(decode(role_code,
                                    'LMRHA', 1,
                                    0
                          )
                       ),
                   0) as ext_control,
                   nvl(sum(decode(role_code,
                                    'LMRTP', 1,
                                    'LMRSY', 1,
                                    0
                          )
                       ),
                   0) as tp_control
              into v_ext_control,
                   v_tp_control
              from koc_auth_user_role_rel
             where username = p_user_name;

        exception when others then
            p_description := 'Yetkiniz yoktur.';
            p_status := 0;
            return;
        end;

        if v_tp_control = 1 then
            p_status := 0;
        end if;

        v_auth_from_ticket := 0;
        if p_law_file_no is not null and v_ext_control > 0 then
            v_auth_from_ticket := 1;
        end if;
        if p_law_file_no is not null and p_ticket_id is not null then
            for x_rec in (  select 1 rec
                                from alz_law_ticket
                                where ticket_id = p_ticket_id
                                and source = 'OTORIZASYON' )
            loop
                v_auth_from_ticket := 1;
            end loop;

            if v_ext_control > 0 then
                v_auth_from_ticket := 1;
            end if;
        end if;

        if p_law_file_no is not null then
            begin
                select supplier_type
                  into v_supplier_type
                  from koc_law_bases
                 where law_file_no = p_law_file_no;

            exception when others then
                v_supplier_type := null;
            end;

            if v_supplier_type is null then
                p_description := p_law_file_no||' nolu hukuk dosyasý bulunamamýþtýr.';
                p_status := 0;
                return;
            end if;

            if v_ext_control > 0 then
                select count(1)
                  into v_count
                  from web_sec_system_users w,
                       koc_law_bases lb
                 where w.user_name = p_user_name
                   and lb.law_file_no = p_law_file_no
                   and w.customer_partner_id = nvl(lb.lawyer, 0);

                if v_count = 0 then
                    p_description := p_law_file_no||' nolu hukuk dosyasý size atalý olmadýðý için iþlem yapamazsýnýz.';
                    p_status := 0;
                    return;
                end if;

            else
                if nvl(f_sftype_user(v_supplier_type, p_user_name), 0) = 1 then
                    p_description := 'Dosya '||v_supplier_type||' Yetkiniz Yoktur.';
                    p_status := 0;
                end if;
            end if;

            v_general_info_rec := get_lawfile_general_info(p_law_file_no);

            if p_description is null then
                if v_general_info_rec.law_case_type = 'A' and
                   v_general_info_rec.law_file_type in ('HUKUK', 'TESPIT')
                then
                    p_description := alz_lawfile_utils.control_claim_expert_report(p_law_file_no);
                end if;

                v_count := auth_check_base_record(p_law_file_no);

                if v_count > 0 then
                    p_description := p_law_file_no||' nolu hukuk dosyasýnda onayda bekleyen otorizasyonlar vardýr.';

                    if v_ext_control > 0 then
                        p_status := 0;
                        p_description := p_law_file_no||' nolu hukuk dosyasýnda onayda bekleyen otorizasyonlar olduðu için baþka bir iþlem yapamazsýnýz.';
                    end if;
                end if;
            end if;

            p_law_file_rec :=
                law_file_all_typ(
                    get_lawfile_general_info(p_law_file_no),
                    get_court_details(p_law_file_no),
                    get_party_list(p_law_file_no),
                    get_law_base_info(p_law_file_no),
                    get_law_detail_list(p_law_file_no),
                    get_expense_info_list(p_law_file_no)
                );

--            if p_law_file_rec.detail_list is not null and
--               p_law_file_rec.detail_list.count > 0
--            then
--                select count(1)
--                  into v_count
--                  from table(p_law_file_rec.detail_list)
--                 where interest_amount = -1;
--
--                if v_count > 0 then
--                    p_description := 'Faiz hesabýnda hata var!';
--                end if;
--            end if;

            return;
        end if;

        v_evolution_code := 2;

        begin
            select evolution_exp
              into v_evolution_exp
              from koc_law_evolution_ref
             where evolution_code = v_evolution_code;

        exception when others then
            v_evolution_exp := null;
        end;

        if p_ticket_id is not null then
            for rec_ticket in c_ticket loop
                if rec_ticket.lawfile_no is null then
                    if v_ext_control > 0 then
                        begin
                            select customer_partner_id
                              into v_lawyer_id
                              from web_sec_system_users
                             where user_name = p_user_name;
                        exception when others then
                            v_lawyer_id := null;
                        end;
                    end if;

                    if rec_ticket.source = 'UYAP' then
                        v_law_case_type := 'A';
                        v_is_rucu := 0;

                        select count(1)
                          into v_department_control
                          from alz_law_group_user_rel a,
                               alz_law_group_def b
                         where a.group_code = b.code
                           and a.username = p_user_name
                           and (upper(b.definition) like '%LEHE%');

                        if v_department_control > 0 then
                            v_law_case_type := 'L';
                            v_is_rucu := 1;
                        end if;

                        select count(1)
                          into v_department_control
                          from alz_law_group_user_rel a,
                               alz_law_group_def b
                         where a.group_code = b.code
                           and a.username = p_user_name
                           and (b.definition like '%KDT%');

                        if v_department_control > 0 then
                            v_department := 'KDT';
                        end if;

                        v_general_info_rec :=
                        law_general_info_typ(
                            v_department, --SUPPLIER_TYPE
                            v_law_case_type, --LAW_CASE_TYPE
                            'HUKUK', --LAW_FILE_TYPE
                            v_is_rucu, --IS_RUCU
                            null, --LAW_SF_TYPE
                            null, --LAW_SF_TYPE_EXPLANATION
                            null, --LAW_SF_GROUP
                            null, --RESERVE_EXT_REFERENCE
                            null, --LAW_TYPE
                            null, --LAW_TYPE_EXP
                            null, --LAWYER_ID
                            null, --LAWYER_NAME
                            null, --LAWYER_ASSIGN_DATE
                            null, --IN_LAWYER_ID
                            null, --IN_LAWYER_NAME
                            null, --IN_LAWYER_GROUP
                            null, --IS_SPECAIL_CONTRACT
                            null, --FILE_OPEN_DATE
                            null, --STATUS_ID
                            null, --STATUS_ID_DESC
                            null, --FILE_CLOSE_DATE
                            null, --RELATED_LAW_FILE_NO
                            null, --AGENT_ROLE
                            null, --PROSECUTION_TYPE
                            null, --PROSECUTION_TYPE_DESC
                            v_evolution_code, --EVOLUTION_CODE
                            v_evolution_exp, --EVOLUTION_EXP
                            null, --STATUS_ID_CONTROL
                            null, --CRIME_TYPE_CONTROL
                            p_ticket_id,
                            null,
                            null,
                            null,
                            null,
                            null
                        );

                        --UYAP Mahkeme Bilgileri
                        if rec_ticket.law_court_enf is not null then
                            open c_court_enf(rec_ticket.uyap_birim_id);
                            fetch c_court_enf into v_court_enf_type;
                            close c_court_enf;

                            begin
                                select court_name
                                  into v_court_name
                                  from alz_law_courts_v
                                 where court_type = rec_ticket.law_court_enf
                                   and court_id = rec_ticket.uyap_birim_id;
                            exception when others then
                                 v_court_name := null;
                            end;

                            if v_court_name is not null then
                                v_court_list := law_courts_tbl();

                                v_court_rec :=
                                law_courts_typ
                                (
                                    v_court_enf_type,
                                    rec_ticket.law_court_enf,
                                    rec_ticket.uyap_birim_id,
                                    v_court_name,
                                    rec_ticket.court_file_no,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                );

                                v_court_list.extend;
                                v_court_list(v_court_list.count) := v_court_rec;
                            end if;
                        end if;

                        get_default_party_list(p_law_file_no, v_general_info_rec.law_case_type, v_general_info_rec.law_file_type, v_party_list, p_process_results);

                        p_law_file_rec :=
                            law_file_all_typ(
                                v_general_info_rec,
                                v_court_list, --court_list
                                v_party_list,
                                null, --base_info
                                null, --detail_list
                                null --expense_info_list
                            );

                        return;

                    elsif rec_ticket.source = 'MUHABERAT' then

                        begin

                            select trunc(b.arrival_date)
                              into v_case_notif_date
                              from alz_clm_com_docs_index_tbl a,
                                   alz_law_com_tbl b
                             where a.filenet_id = rec_ticket.filenet_id
                               and a.communication_no = b.communication_no
                               and a.archive_no = b.archive_no;

                        exception when others then
                            v_case_notif_date := null;
                        end;

                        v_law_case_type := 'A';
                        v_is_rucu := 0;

                        select count(1)
                          into v_department_control
                          from alz_law_group_user_rel a,
                               alz_law_group_def b
                         where a.group_code = b.code
                           and a.username = p_user_name
                           and (upper(b.definition) like '%LEHE%');

                        if v_department_control > 0 then
                            v_law_case_type := 'L';
                            v_is_rucu := 1;
                        end if;

                        select count(1)
                          into v_department_control
                          from alz_law_group_user_rel a,
                               alz_law_group_def b
                         where a.group_code = b.code
                           and a.username = p_user_name
                           and (b.definition like '%KDT%');

                        if v_department_control > 0 then
                            v_department := 'KDT';
                        end if;

                        v_general_info_rec :=
                        law_general_info_typ(
                            v_department, --SUPPLIER_TYPE
                            'A', --LAW_CASE_TYPE
                            'HUKUK', --LAW_FILE_TYPE
                            v_is_rucu, --IS_RUCU
                            null, --LAW_SF_TYPE
                            null, --LAW_SF_TYPE_EXPLANATION
                            null, --LAW_SF_GROUP
                            null, --RESERVE_EXT_REFERENCE
                            null, --LAW_TYPE
                            null, --LAW_TYPE_EXP
                            v_lawyer_id, --LAWYER_ID
                            substr(koc_clm_utils.partner_name_bul(v_lawyer_id), 1, 2000), --LAWYER_NAME
                            null, --LAWYER_ASSIGN_DATE
                            null, --IN_LAWYER_ID
                            null, --IN_LAWYER_NAME
                            null, --IN_LAWYER_GROUP
                            null, --IS_SPECAIL_CONTRACT
                            null, --FILE_OPEN_DATE
                            null, --STATUS_ID
                            null, --STATUS_ID_DESC
                            null, --FILE_CLOSE_DATE
                            null, --RELATED_LAW_FILE_NO
                            null, --AGENT_ROLE
                            null, --PROSECUTION_TYPE
                            null, --PROSECUTION_TYPE_DESC
                            v_evolution_code, --EVOLUTION_CODE
                            v_evolution_exp, --EVOLUTION_EXP
                            null, --STATUS_ID_CONTROL
                            null, --CRIME_TYPE_CONTROL
                            p_ticket_id,
                            null,
                            null,
                            null,
                            null,
                            null
                        );

                        --Muhaberat Mahkeme Bilgileri
                        if rec_ticket.law_court_enf is not null then
                            if rec_ticket.law_court_enf = 'U' then
                                open c_court_enf(rec_ticket.uyap_birim_id);
                                fetch c_court_enf into v_court_enf_type;
                                close c_court_enf;
                            else
                                v_court_enf_type := rec_ticket.law_court_enf;
                            end if;

                            begin
                                select court_name
                                  into v_court_name
                                  from alz_law_courts_v
                                 where court_type = rec_ticket.law_court_enf
                                   and court_id = rec_ticket.uyap_birim_id;
                            exception when others then
                                 v_court_name := null;
                            end;

                            if v_court_name is not null then
                                v_court_list := law_courts_tbl();

                                v_court_rec :=
                                law_courts_typ
                                (
                                    v_court_enf_type,
                                    rec_ticket.law_court_enf,
                                    rec_ticket.uyap_birim_id,
                                    v_court_name,
                                    rec_ticket.court_file_no,
                                    null,
                                    v_case_notif_date,
                                    null,
                                    null,
                                    null,
                                    null
                                );

                                v_court_list.extend;
                                v_court_list(v_court_list.count) := v_court_rec;
                            end if;

                            if v_court_enf_type = 'I' then
                                v_evolution_code := 1;

                                begin
                                    select evolution_exp
                                      into v_evolution_exp
                                      from koc_law_evolution_ref
                                     where evolution_code = v_evolution_code;

                                exception when others then
                                    v_evolution_exp := null;
                                end;

                                v_general_info_rec.evolution_code := v_evolution_code;
                                v_general_info_rec.evolution_exp := v_evolution_exp;

                            elsif v_court_enf_type = 'S' then
                                v_general_info_rec.law_file_type := 'CEZA';
                            end if;

                        end if;

                        v_party_list := law_party_tbl();

                        for rec_party in c_com_party(p_ticket_id) loop
                            if length(rec_party.tax_number) = 10 then
                                v_party_type_code := 'KRM';
                            elsif length(rec_party.tax_number) = 11 then
                                v_party_type_code := 'SHS';
                            else
                                v_party_type_code := null;
                            end if;

                            begin
                                select description
                                  into v_party_type
                                  from cp_role_types
                                 where object_type = 'LAW'
                                   and role_type = v_party_type_code;

                            exception when others then
                                v_party_type := null;
                            end;

                            begin
                                select taraf_rol_aciklama
                                  into v_party_role
                                  from alz_uyap_taraf_rolleri
                                 where taraf_rol_kodu = rec_party.party_role_code;

                            exception when others then
                                v_party_role := null;
                            end;

                            v_party_rec :=
                            law_party_typ(
                                null, --UNIQUE_ID
                                null, --PARTY_ID
                                rec_party.full_name, --PARTY_NAME
                                rec_party.party_role_code, --ROLE_CODE
                                v_party_role, --ROLE
                                v_party_type_code, --TYPE_CODE
                                v_party_type, --TYPE
                                null, --PROSECUTION_STATUS
                                rec_party.tax_number, --TAX_NUMBER
                                sysdate, --PROCESS_DATE
                                'MUHABERAT', --SOURCE
                                rec_party.communication_no, --SOURCE_ID
                                null, --SOURCE_DETAIL_ID
                                null --PROXY_LIST
                            );

                            v_party_list.extend;
                            v_party_list(v_party_list.count) := v_party_rec;
                        end loop;

                        if v_party_list.count = 0 then
                            get_default_party_list(p_law_file_no, v_general_info_rec.law_case_type, v_general_info_rec.law_file_type, v_party_list, p_process_results);
                        end if;

                        p_law_file_rec :=
                            law_file_all_typ(
                                v_general_info_rec,
                                v_court_list, --court_list
                                v_party_list,
                                null, --base_info
                                null, --detail_list
                                null --expense_info_list
                            );

                        return;

                    elsif rec_ticket.source = 'TAHKIM' then
                        v_law_case_type := 'A';
                        v_is_rucu := 0;

                        select count(1)
                          into v_department_control
                          from alz_law_group_user_rel a,
                               alz_law_group_def b
                         where a.group_code = b.code
                           and a.username = p_user_name
                           and (upper(b.definition) like '%LEHE%');

                        if v_department_control > 0 then
                            v_law_case_type := 'L';
                            v_is_rucu := 1;
                        end if;

                        select count(1)
                          into v_department_control
                          from alz_law_group_user_rel a,
                               alz_law_group_def b
                         where a.group_code = b.code
                           and a.username = p_user_name
                           and (b.definition like '%KDT%');

                        if v_department_control > 0 then
                            v_department := 'KDT';
                        end if;

                        v_general_info_rec :=
                        law_general_info_typ(
                            v_department, --SUPPLIER_TYPE
                            v_law_case_type, --LAW_CASE_TYPE
                            'HUKUK', --LAW_FILE_TYPE
                            v_is_rucu, --IS_RUCU
                            null, --LAW_SF_TYPE
                            null, --LAW_SF_TYPE_EXPLANATION
                            null, --LAW_SF_GROUP
                            null, --RESERVE_EXT_REFERENCE
                            null, --LAW_TYPE
                            null, --LAW_TYPE_EXP
                            null, --LAWYER_ID
                            null, --LAWYER_NAME
                            null, --LAWYER_ASSIGN_DATE
                            null, --IN_LAWYER_ID
                            null, --IN_LAWYER_NAME
                            null, --IN_LAWYER_GROUP
                            null, --IS_SPECAIL_CONTRACT
                            null, --FILE_OPEN_DATE
                            null, --STATUS_ID
                            null, --STATUS_ID_DESC
                            null, --FILE_CLOSE_DATE
                            null, --RELATED_LAW_FILE_NO
                            null, --AGENT_ROLE
                            null, --PROSECUTION_TYPE
                            null, --PROSECUTION_TYPE_DESC
                            v_evolution_code, --EVOLUTION_CODE
                            v_evolution_exp, --EVOLUTION_EXP
                            null, --STATUS_ID_CONTROL
                            null, --CRIME_TYPE_CONTROL
                            p_ticket_id,
                            null,
                            null,
                            null,
                            null,
                            null
                        );

                        --Tahkim Mahkeme Bilgileri
                        if rec_ticket.law_court_enf is not null then

                            if rec_ticket.law_court_enf = 'U' then
                                open c_court_enf(rec_ticket.uyap_birim_id);
                                fetch c_court_enf into v_court_enf_type;
                                close c_court_enf;
                            else
                                v_court_enf_type := rec_ticket.law_court_enf;
                            end if;

                            begin
                                select court_name
                                  into v_court_name
                                  from alz_law_courts_v
                                 where court_type = rec_ticket.law_court_enf
                                   and court_id = rec_ticket.uyap_birim_id;

                                v_court_type := rec_ticket.law_court_enf;
                                v_court_id := rec_ticket.uyap_birim_id;
                            exception when others then
                                 v_court_name := null;
                            end;

                        else
                            v_court_enf_type := 'M';

                            open c_tahkim_court;
                            fetch c_tahkim_court into v_court_type, v_court_id, v_court_name;
                            close c_tahkim_court;
                        end if;

                        if v_court_name is not null then
                            v_court_list := law_courts_tbl();

                            v_court_rec :=
                            law_courts_typ
                            (
                                v_court_enf_type,
                                v_court_type,
                                v_court_id,
                                v_court_name,
                                rec_ticket.court_file_no,
                                null,
                                null,
                                null,
                                null,
                                null,
                                null
                            );

                            v_court_list.extend;
                            v_court_list(v_court_list.count) := v_court_rec;
                        end if;

                        get_default_party_list(p_law_file_no, v_general_info_rec.law_case_type, v_general_info_rec.law_file_type, v_party_list, p_process_results);

                        p_law_file_rec :=
                            law_file_all_typ(
                                v_general_info_rec,
                                v_court_list, --court_list
                                v_party_list,
                                null, --base_info
                                null, --detail_list
                                null --expense_info_list
                            );

                        return;

                    elsif rec_ticket.source = 'RUCU' then

                        v_general_info_rec :=
                        law_general_info_typ(
                            nvl(rec_ticket.department, 'HDT'), --SUPPLIER_TYPE
                            'L', --LAW_CASE_TYPE
                            'HUKUK', --LAW_FILE_TYPE
                            1, --IS_RUCU
                            'R', --LAW_SF_TYPE
                            'Rücu', --LAW_SF_TYPE_EXPLANATION
                            null, --LAW_SF_GROUP
                            null, --RESERVE_EXT_REFERENCE
                            2, --LAW_TYPE
                            'Yeni talep', --LAW_TYPE_EXP
                            v_lawyer_id, --LAWYER_ID
                            substr(koc_clm_utils.partner_name_bul(v_lawyer_id), 1, 2000), --LAWYER_NAME
                            null, --LAWYER_ASSIGN_DATE
                            null, --IN_LAWYER_ID
                            null, --IN_LAWYER_NAME
                            null, --IN_LAWYER_GROUP
                            null, --IS_SPECAIL_CONTRACT
                            null, --FILE_OPEN_DATE
                            null, --STATUS_ID
                            null, --STATUS_ID_DESC
                            null, --FILE_CLOSE_DATE
                            null, --RELATED_LAW_FILE_NO
                            null, --AGENT_ROLE
                            null, --PROSECUTION_TYPE
                            null, --PROSECUTION_TYPE_DESC
                            v_evolution_code, --EVOLUTION_CODE
                            v_evolution_exp, --EVOLUTION_EXP
                            null, --STATUS_ID_CONTROL
                            null, --CRIME_TYPE_CONTROL
                            p_ticket_id,
                            null,
                            null,
                            null,
                            null,
                            null
                        );

                        v_law_base_rec :=
                        law_base_typ(
                            null, --CASE_AMOUNT
                            null, --CASE_AMOUNT_SWF
                            null, --CASE_AMOUNT_CONTROL
                            null, --COVER_AMOUNT
                            null, --COVER_AMOUNT_SWF
                            null, --RESERVE_AMOUNT
                            null, --RESERVE_AMOUNT_SWF
                            null, --TOTAL_RESERVE_AMOUNT
                            null, --TOTAL_RESERVE_AMOUNT_SWF
                            null, --LAST_AMOUNT
                            null, --LAST_AMOUNT_SWF
                            null, --DENOUNCE_DATE
                            null, --INTEREST_TYPE
                            null, --INTEREST_TYPE_CONTROL
                            null, --INTEREST_BEGIN_DATE
                            null, --INTEREST_BEGIN_DATE_CONTROL
                            null, --INTEREST_AMOUNT
                            null, --LAWYER_PAYMENT
                            null, --COURT_REVENUE
                            null, --LAWYER_COURT
                            null, --LAWYER_FORECLOSURE
                            null, --IS_MANUEL
                            null, --COURT_DECISION_AMOUNT
                            null, --COURT_DECISION_AMOUNT_SWF
                            null, --COURT_DECISION_CONTROL
                            null, --COURT_CORRECTION_AMOUNT
                            null, --COURT_CORRECTION_AMOUNT_SWF
                            null, --COURT_CORRECTION_CONTROL
                            null, --AUTHORITY_AMOUNT
                            null, --AUTHORITY_AMOUNT_SWF
                            null, --AUTHORITY_AMOUNT_CONTROL
                            null, --EXPERTISE_AMOUNT
                            null, --EXPERTISE_AMOUNT_SWF
                            null, --EXPERTISE_AMOUNT_CONTROL
                            null, --FACTURA
                            null, --FACTURA_SWF
                            null, --FACTURA_CONTROL
                            null, --LAW_BEGINNING_TYPE
                            null, --LAW_BA
                            null, --IS_IMPORTANT_CASE
                            null, --IS_MAKTU
                            null, --IS_EXCEPTION
                            null, --IS_INFORM
                            null  --TOTAL_AMOUNT
                        );

                        get_default_party_list(p_law_file_no, v_general_info_rec.law_case_type, v_general_info_rec.law_file_type, v_party_list, p_process_results);

                        v_detail_list := law_base_detail_tbl();

                        for rec_rucu in c_rucu loop
                            v_detail_rec :=
                            law_base_detail_typ(
                                null, --DETAIL_NO
                                null, --CLAIM_ID
                                null, --SF_NO
                                rec_rucu.rucu_file_no, --EXT_REFERENCE
                                null, --POLICY_REF
                                null, --HYT_LOSS_RESULT_CODE
                                null, --HYT_LOSS_FILE_YEAR
                                null, --HYT_LOSS_FILE_NO
                                2, --LAW_TYPE
                                'Yeni talep', --LAW_TYPE_EXP
                                null, --COVER_CODE
                                null, --COVER_NAME
                                null, --COVER_AMOUNT
                                null, --COVER_AMOUNT_SWF
                                null, --CASE_AMOUNT
                                null, --CASE_AMOUNT_SWF
                                null, --CASE_AMOUNT_CONTROL
                                null, --AUTHORITY_AMOUNT
                                null, --AUTHORITY_AMOUNT_SWF
                                null, --AUTHORITY_AMOUNT_CONTROL
                                null, --COURT_CORRECTION_AMOUNT
                                null, --COURT_CORRECTION_AMOUNT_SWF
                                null, --COURT_CORRECTION_CONTROL
                                null, --COURT_DECISION_AMOUNT
                                null, --COURT_DECISION_AMOUNT_SWF
                                null, --COURT_DECISION_CONTROL
                                'Y', --INTEREST_TYPE
                                null, --INTEREST_TYPE_CONTROL
                                null, --INTEREST_BEGIN_DATE
                                null, --INTEREST_BEGIN_DATE_CONTROL
                                null, --INTEREST_AMOUNT
                                null, --LAW_BEGINNING_TYPE
                                null, --DENOUNCE_DATE
                                null, --RESERVE_AMOUNT
                                null, --RESERVE_AMOUNT_SWF
                                null, --TOTAL_RESERVE_AMOUNT
                                null, --TOTAL_RESERVE_AMOUNT_SWF
                                null, --FACTURA
                                null, --FACTURA_SWF
                                null, --FACTURA_CONTROL
                                null, --EXPERTISE_AMOUNT
                                null, --EXPERTISE_AMOUNT_SWF
                                null, --EXPERTISE_AMOUNT_CONTROL
                                null, --RECOURSE_AMOUNT
                                null, --LAW_BA
                                null, --IS_MAKTU
                                null, --IS_EXCEPTION
                                null, --IS_INFORM
                                null,  --IS_ADJUSTMENT
                                'R' --DETAIL_TYPE
                            );

--                            alz_lawfile_utils.validate_ext_reference
--                            (
--                                v_general_info_rec.law_case_type,
--                                v_general_info_rec.law_file_type,
--                                v_general_info_rec.law_sf_type,
--                                v_detail_rec,
--                                p_process_results
--                            );

                            alz_lawfile_utils.validate_ext_reference
                            (
                                v_general_info_rec.law_case_type,
                                v_general_info_rec.law_file_type,
                                v_general_info_rec.law_sf_type,
                                v_detail_rec,
                                v_rucu_list,
                                p_process_results
                            );

                            if p_process_results is not null and p_process_results.count > 0 then
                                if p_process_results(1).type = -1 then
                                    p_description := p_process_results(1).reason;
                                    p_status := 0;
                                    p_process_results := null;
                                    return;
                                end if;
                            end if;

                            if v_rucu_list is not null and v_rucu_list.count > 0 then
                                for rec in v_rucu_list.first..v_rucu_list.last loop
                                    v_detail_rec := v_rucu_list(rec);

                                    select max(ticket_date) tazminat_tarih
                                      into v_detail_rec.denounce_date
                                      from koc_clm_recourse_detail d,
                                           koc_clm_v_trans t
                                     where d.ext_reference = v_detail_rec.ext_reference
                                       and d.clm_ext_reference = t.ext_reference
                                       and t.ticket_date is not null
                                       and t.sf_total_type in ('11')
                                       and t.cover_no in
                                            (
                                                select distinct b.cover_no
                                                from koc_clm_cov_sf_links_ext a,
                                                     clm_pol_covers b,
                                                     cfg_v_prod_covers_api c,
                                                     clm_subfiles d
                                               where a.claim_id = d.claim_id
                                                 and a.sf_no = d.sf_no
                                                 and d.ext_reference = d.clm_ext_reference
                                                 and b.claim_id = a.claim_id
                                                 and b.contract_id = a.contract_id
                                                 and b.oar_no = a.oar_no
                                                 and b.cover_no = a.cover_no
                                                 and c.cover_code = b.cover_code
                                                 and b.cover_code = v_detail_rec.cover_code
                                            );

                                    select max(ticket_date) tazminat_tarih
                                      into v_law_base_rec.denounce_date
                                      from koc_clm_recourse_detail d,
                                           koc_clm_v_trans t
                                     where d.ext_reference = v_detail_rec.ext_reference
                                       and d.clm_ext_reference = t.ext_reference
                                       and t.ticket_date is not null
                                       and t.sf_total_type in ('11')
                                       and t.cover_no in
                                            (
                                                select distinct b.cover_no
                                                from koc_clm_cov_sf_links_ext a,
                                                     clm_pol_covers b,
                                                     cfg_v_prod_covers_api c,
                                                     clm_subfiles d
                                               where a.claim_id = d.claim_id
                                                 and a.sf_no = d.sf_no
                                                 and d.ext_reference = d.clm_ext_reference
                                                 and b.claim_id = a.claim_id
                                                 and b.contract_id = a.contract_id
                                                 and b.oar_no = a.oar_no
                                                 and b.cover_no = a.cover_no
                                                 and c.cover_code = b.cover_code
                                            );

                                    if v_law_base_rec.denounce_date < nvl(v_detail_rec.denounce_date, v_law_base_rec.denounce_date) then
                                        v_law_base_rec.denounce_date := v_detail_rec.denounce_date;
                                    end if;

                                    v_detail_rec.denounce_date := v_law_base_rec.denounce_date;
                                    v_detail_rec.interest_begin_date := v_detail_rec.denounce_date;
                                    v_law_base_rec.interest_begin_date := v_law_base_rec.denounce_date;

                                    v_detail_list.extend;
                                    v_detail_list(v_detail_list.count) := v_detail_rec;
                                end loop;
                            end if;

                            for rec_party in c_rucu_party(v_detail_rec.ext_reference) loop
                                v_party_rec :=
                                    law_party_typ(
                                        null, --UNIQUE_ID
                                        null, --PARTY_ID
                                        rec_party.party_name, --PARTY_NAME
                                        rec_party.party_role_code, --ROLE_CODE
                                        rec_party.party_role, --ROLE
                                        rec_party.party_type_code, --TYPE_CODE
                                        rec_party.party_type, --TYPE
                                        null, --PROSECUTION_STATUS
                                        null, --TAX_NUMBER
                                        null, --PROCESS_DATE
                                        null, --SOURCE
                                        null, --SOURCE_ID
                                        null, --SOURCE_DETAIL_ID
                                        null --PROXY_LIST
                                    );

                                v_party_list.extend;
                                v_party_list(v_party_list.count) := v_party_rec;
                            end loop;
                        end loop;

                        begin
                            if i > 0 then
                                select count(distinct case_amount_swf)
                                  into v_swf_count
                                  from table(v_detail_list);

                                if v_swf_count = 1 then
                                    v_law_base_rec.case_amount_swf := v_detail_list(1).case_amount_swf;

                                    select sum(nvl(case_amount, 0))
                                      into v_law_base_rec.case_amount
                                      from table(v_detail_list);
                                else
                                    v_law_base_rec.case_amount_swf := base_swift_code;

                                    select sum(nvl(case_amount, 0) * koc_curr_utils.retrieve_effective_parity(case_amount_swf, base_swift_code, pme_public.opus_date, 36))
                                      into v_law_base_rec.case_amount
                                      from table(v_detail_list);
                                end if;
                            end if;

                        exception when others then
                            v_law_base_rec.case_amount := null;
                            v_law_base_rec.case_amount_swf := null;
                        end;

                        p_law_file_rec :=
                            law_file_all_typ(
                                v_general_info_rec,
                                null, --court_list
                                v_party_list,
                                v_law_base_rec, --base_info
                                v_detail_list, --detail_list
                                null --expense_info_list
                            );

                        return;
                    end if;
                end if;
            end loop;
        end if;

        --Dava Giriþ ekraný defaultlar
        if p_law_file_no is null then
            v_law_case_type := 'A';
            v_is_rucu := 0;

            select count(1)
              into v_department_control
              from alz_law_group_user_rel a,
                   alz_law_group_def b
             where a.group_code = b.code
               and a.username = p_user_name
               and (upper(b.definition) like '%LEHE%');

            if v_department_control > 0 then
                v_law_case_type := 'L';
                v_is_rucu := 1;
            end if;

            select count(1)
              into v_department_control
              from alz_law_group_user_rel a,
                   alz_law_group_def b
             where a.group_code = b.code
               and a.username = p_user_name
               and (upper(b.definition) like '%KDT%');

            if v_department_control > 0 then
                v_department := 'KDT';
            end if;

            v_general_info_rec := law_general_info_typ
            (
                v_department, --SUPPLIER_TYPE
                v_law_case_type, --LAW_CASE_TYPE
                'HUKUK', --LAW_FILE_TYPE
                v_is_rucu, --IS_RUCU
                null, --LAW_SF_TYPE
                null, --LAW_SF_TYPE_EXPLANATION
                null, --LAW_SF_GROUP
                null, --RESERVE_EXT_REFERENCE
                null, --LAW_TYPE
                null, --LAW_TYPE_EXP
                null, --LAWYER_ID
                null, --LAWYER_NAME
                null, --LAWYER_ASSIGN_DATE
                null, --IN_LAWYER_ID
                null, --IN_LAWYER_NAME
                null, --IN_LAWYER_GROUP
                null, --IS_SPECAIL_CONTRACT
                null, --FILE_OPEN_DATE
                null, --STATUS_ID
                null, --STATUS_ID_DESC
                null, --FILE_CLOSE_DATE
                null, --RELATED_LAW_FILE_NO
                null, --AGENT_ROLE
                null, --PROSECUTION_TYPE
                null, --PROSECUTION_TYPE_DESC
                v_evolution_code, --EVOLUTION_CODE
                v_evolution_exp, --EVOLUTION_EXP
                null, --STATUS_ID_CONTROL
                null, --CRIME_TYPE_CONTROL
                p_ticket_id,
                null,
                null,
                null,
                null,
                null
            );

            get_default_party_list(p_law_file_no, v_general_info_rec.law_case_type, v_general_info_rec.law_file_type, v_party_list, p_process_results);

            p_law_file_rec := law_file_all_typ
            (
                v_general_info_rec,
                null, --court_list
                v_party_list,
                null, --base_info
                null,
                null --expense_info_list
            );

        end if;

--    exception when others then
--        v_error_msg := 'Hukuk Dosyasý bilgileri alýnýrken hata oldu: '||substr(SQLERRM, 1, 950);
--
--        process_result(
--            99, --p_process_no
--            0,
--            9,
--            -1,
--            'GET_LAWFILE',
--            v_error_msg,
--            v_error_msg,
--            null,
--            null,
--            'ALZ_LITIGATION_UTILS.GET_LAWFILE',
--            p_process_results
--        );
--        return;
    end get_lawfile;

    function get_court_min_amount(p_law_file_no varchar2, p_date date default sysdate) return number
    is
        v_return number := 0;
        v_court_type varchar2(1);
        v_court_id varchar2(10);

        -- Mahkeme No
        cursor c_court_m is
        select court_type, court_id
          from koc_law_base_courts
         where court_enf_type = 'M'
           and law_file_no = p_law_file_no;

        -- Ýcre Mahkeme No
        cursor c_court_i is
        select court_type, court_id
          from koc_law_base_courts
         where court_enf_type = 'I'
           and law_file_no = p_law_file_no;

        cursor c_uyap(p_court_type varchar2, p_court_id varchar2) is

        select lcup.min_amount
          from alz_law_courts_v alc,
               alz_law_court_uyap_payment_def lcup
         where alc.court_type = p_court_type
           and alc.court_id = p_court_id
           and alc.court_unit_code = lcup.court_unit_code
           and p_date between lcup.validity_start_date and nvl(lcup.validity_end_date, sysdate);

    begin

        open c_court_m;
        fetch c_court_m into v_court_type, v_court_id;
        close c_court_m;

        open c_uyap(v_court_type, v_court_id);
        fetch c_uyap into v_return;
        close c_uyap;

        if nvl(v_return, 0) = 0 then
            open c_court_i;
            fetch c_court_i into v_court_type, v_court_id;
            close c_court_i;

            open c_uyap(v_court_type, v_court_id);
            fetch c_uyap into v_return;
            close c_uyap;
        end if;

        return v_return;

    end get_court_min_amount;

    --Künye Bilgileri kaydetme
    procedure save_general_info(p_law_file_no in out varchar2,
                                p_user_name in varchar2,
                                p_rec in out law_general_info_typ,
                                p_process_results out customer.process_result_table,
                                p_type varchar2 default 'UPDATE')
    is
        v_rec law_general_info_typ := p_rec;
        v_error_msg varchar2(1000);
        v_is_closed number;
        v_old_rec law_general_info_typ;
        v_sf varchar2(5);
        v_law_file_type varchar2(5);
        v_master number;
        v_doubtful_debt number;
        v_prosecution_type number;
        v_lawyer_payment number;
        v_control number;
        v_is_private number;
        v_count number;

    begin

        -- Zorunlu kontrolleri
        if v_rec.supplier_type is null or
           v_rec.law_case_type is null or
           v_rec.law_file_type is null or
           v_rec.law_sf_type is null
        then
            rollback;
            v_error_msg := 'Künye bilgilerinde Departman, Taraf, Dava Türü, Dosya Tipi ve Dava Nedeni alanlarý boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_GENERAL_INFO',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                p_process_results
            );
            return;

        elsif v_rec.law_case_type = 'A' and v_rec.law_type is null then
            rollback;
            v_error_msg := 'Aleyhte Hukuk Dosyalarýnda Künye bilgilerinde Dava Nedeni alaný boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SAVE_GENERAL_INFO',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                p_process_results
            );
            return;
        end if;

        --Durum kapalý kontrolü
        begin
            select is_closed
              into v_is_closed
              from koc_law_status_ref
             where status_id = v_rec.status_id;
        exception when others then
            v_is_closed := 0;
        end;

        if v_is_closed = 1 and v_rec.file_close_date is null then
            rollback;
            v_error_msg := 'Dosya Kapanýþ Tarihi girmelisiniz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SAVE_GENERAL_INFO',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                p_process_results
            );
            return;
        end if;

        if v_rec.law_case_type = 'L' and
           v_rec.law_file_type = 'HUKUK'
        then
            v_doubtful_debt := 1;
        else
            v_doubtful_debt := 0;
        end if;

        if v_rec.related_law_file_no != null then
            v_master := 0;
        else
            v_master := 1;
        end if;

        if v_rec.law_case_type = 'A' then
            select count(1)
              into v_is_private
              from customer.koc_clm_lookup
             where type in (130, 131)
               and scode = v_rec.lawyer_id;

            if v_rec.lawyer_id is null or v_is_private = 0 then
                v_rec.is_specail_contract := 0;
            elsif v_is_private > 1 then
                v_rec.is_specail_contract := 1;
            end if;

            if nvl(v_rec.is_specail_contract, 0) = 1 then
                --Deðer Kaybý özel sözleþme kontrolü
                select count(1)
                  into v_count
                  from customer.koc_clm_lookup
                 where type = 131
                   and scode = v_rec.lawyer_id;

                if v_count > 0 then
                    begin
                        select icode
                          into v_lawyer_payment
                          from koc_clm_lookup
                         where type = 136;

                    exception when others then
                        rollback;
                        v_error_msg := nvl(v_error_msg, 'Deðer Kaybý Özel sözleþmeli avukat ücreti bulunamadý.');

                        process_result(
                            2, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_GENERAL_INFO',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                            p_process_results
                        );
                        return;
                    end;

                else
                    begin
                        select icode
                          into v_lawyer_payment
                          from koc_clm_lookup
                         where type = 135;

                    exception when others then
                        rollback;
                        v_error_msg := nvl(v_error_msg, 'Özel sözleþmeli avukat ücreti bulunamadý.');

                        process_result(
                            2, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_GENERAL_INFO',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                            p_process_results
                        );
                        return;
                    end;
                end if;
            end if;

        else
            v_rec.is_specail_contract := 0;
        end if;

        if v_rec.related_law_file_no is not null then
            v_control := koc_law_utils.check_law_file(v_rec.related_law_file_no);

            if v_control = 0 then
                rollback;
                v_error_msg := 'Baðlý dosya no yanlýþtýr. Lütfen kontrol ediniz.';

                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;
        end if;

        if v_rec.law_file_type = 'CEZA' then
            v_prosecution_type := v_rec.prosecution_type;
        else
            v_prosecution_type := null;
        end if;

        if p_type = 'UPDATE' then
            if p_law_file_no is null then
                rollback;
                v_error_msg := 'Künye bilgilerini güncellemek için Hukuk Dosya No boþ olamaz.';

                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;

            v_old_rec := get_lawfile_general_info(p_law_file_no);

            if v_old_rec.supplier_type is null then
                rollback;
                v_error_msg := 'Güncellenecek dosya bilgileri bulunamadý.';

                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;

            if v_rec.law_case_type != v_old_rec.law_case_type then
                v_error_msg := 'Taraf alanýný günceleyemezsiniz.';

            elsif v_rec.law_file_type != v_old_rec.law_file_type then
                v_error_msg := 'Dava Türü alanýný günceleyemezsiniz.';
            end if;

            if (v_old_rec.lawyer_id is null and v_rec.lawyer_id is not null) or nvl(v_old_rec.lawyer_id, 0) <> nvl(v_rec.lawyer_id, 0)
            then
                if v_rec.supplier_type = 'HDT' or
                   v_rec.lawyer_assign_date is null
                then
                    v_rec.lawyer_assign_date := trunc(sysdate);
                end if;

                v_rec.lawyer_reference := null;
            end if;

            if v_error_msg is not null then
                rollback;
                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;

            --Hasarlý dosya tipi hasarsýz dosya tipine güncellenemez
            select count(1)
              into v_control
              from koc_law_sf_type new_sf,
                   koc_law_sf_type old_sf
             where new_sf.law_sf_type = v_rec.law_sf_type
               and old_sf.law_sf_type = v_old_rec.law_sf_type
               and nvl(new_sf.has_claim, 'N') = 'N'
               and nvl(old_sf.has_claim, 'N') = 'Y';

            if v_control > 0 then
                rollback;
                v_error_msg := 'Hasarlý dosya tipi hasarsýz dosya tipine güncellenemez.';

                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;

            /*TO DO
            --Hasarsýz detaylý dosya tipi deðiþtirilemez
            select count(1)
              into v_control
              from koc_law_sf_type new_sf,
                   koc_law_sf_type old_sf
             where new_sf.law_sf_type = v_rec.law_sf_type
               and old_sf.law_sf_type = v_old_rec.law_sf_type
               and nvl(old_sf.has_detail, 'N') = 'Y'
               and new_sf.law_sf_type <> old_sf.law_sf_type;

            if v_control > 0 then
                rollback;
                v_error_msg := 'Hasarsýz detaylý dosya tipi deðiþtirilemez.';

                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;
            */

            --Durum güncellemesi
            if v_rec.status_id != v_old_rec.status_id then
                koc_law_utils.insert_status_info(p_law_file_no, sysdate, v_rec.status_id);
            end if;

            if nvl(v_old_rec.law_sf_type, '-') != nvl(v_rec.law_sf_type, '-') and
               nvl(v_old_rec.law_sf_type, '-') = 'A' --acente
            then
                v_rec.agent_role := null;
            end if;

            update koc_law_bases
               set supplier_type = decode(v_rec.supplier_type, 'KDT', 'HM', v_rec.supplier_type),
                   is_rucu = v_rec.is_rucu,
                   status_id = v_rec.status_id,
                   file_close_date = null, -- v_rec.file_close_date, Dosya kapama en son yapýlýyor
                   law_sf_type = v_rec.law_sf_type,
                   law_sf_group = v_rec.law_sf_group,
                   related_law_file_no = v_rec.related_law_file_no,
                   agent_role = v_rec.agent_role,
                   reserve_ext_reference = v_rec.reserve_ext_reference,
                   prosecution_type = v_prosecution_type,
                   law_type = v_rec.law_type,
                   law_type_exp = v_rec.law_type_exp,
                   in_lawyer = v_rec.in_lawyer_id,
                   in_lawyer_group = v_rec.in_lawyer_group,
                   lawyer = v_rec.lawyer_id,
                   lawyer_assign_date = v_rec.lawyer_assign_date,
                   is_specail_contract = v_rec.is_specail_contract,
                   lawyer_payment = v_lawyer_payment,
                   master_file = v_master,
                   user_name = p_user_name,
                   lawyer_reference = v_rec.lawyer_reference
             where law_file_no = p_law_file_no;

        elsif p_type = 'INSERT' then

-- DOSYA_NO

            if v_rec.law_file_type = 'HUKUK' then -- Hukuk
                v_sf := 'H'||v_rec.law_case_type;
                v_law_file_type := v_rec.law_case_type;

            elsif v_rec.law_file_type = 'CEZA' then -- Ceza
                v_sf := 'HC';
                v_law_file_type := 'C';

            elsif v_rec.law_file_type = 'TESPIT' then -- Tespit
                v_sf := 'HT'||v_rec.law_case_type;
                v_law_file_type := 'T'||v_rec.law_case_type;

            else
                rollback;
                v_error_msg := 'Yanlýþ Dava Türü.';

                process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end if;

            if p_law_file_no is null then
                begin
                    koc_law_utils.law_file_no(v_sf, p_law_file_no);
                exception when others then
                    rollback;
                    v_error_msg := 'Dosya numarasý alýnýrken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

                    p_law_file_no := null;
                end;

                if p_law_file_no is null then
                    rollback;
                    v_error_msg := nvl(v_error_msg, 'Dosya numarasý alýnýrken hata oldu');

                    process_result(
                        2, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_GENERAL_INFO',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                        p_process_results
                    );
                    return;
                end if;
            end if;
            if v_rec.ticket_id = 0 then
                v_rec.ticket_id := null;
            end if;

            --Harici avukat atama tarihi eðer boþsa varsayýlan olarak günün tarihini atýyoruz
            if v_rec.lawyer_id is not null then
                v_rec.lawyer_assign_date := nvl(v_rec.lawyer_assign_date, trunc(sysdate));
            else
                v_rec.lawyer_assign_date := null;
            end if;

-- INSERT_KOC_LAW_BASES
            insert into koc_law_bases
            (
                law_file_no,
                supplier_type,
                file_open_date,
                law_case_type,
                is_rucu,
                doubtful_debt,
                status_id,
                law_file_type,
                law_sf_type,
                law_sf_group,
                related_law_file_no,
                agent_role,
                reserve_ext_reference,
                prosecution_type,
                law_type,
                law_type_exp,
                in_lawyer,
                in_lawyer_group,
                lawyer,
                lawyer_assign_date,
                is_specail_contract,
                lawyer_payment,
                master_file,
                user_name,
                ticket_id,
                tanik_sayisi,
                authority_count,
                is_exploration,
                lawyer_reference
            )
            values
            (
                p_law_file_no,
                decode(v_rec.supplier_type, 'KDT', 'HM', v_rec.supplier_type),
                v_rec.file_open_date,
                v_rec.law_case_type,
                v_rec.is_rucu,
                v_doubtful_debt,
                v_rec.status_id, -- status_id default 8 geliyor kaydederken
                v_law_file_type,
                v_rec.law_sf_type,
                v_rec.law_sf_group,
                v_rec.related_law_file_no,
                v_rec.agent_role,
                v_rec.reserve_ext_reference,
                v_prosecution_type,
                v_rec.law_type,
                v_rec.law_type_exp,
                v_rec.in_lawyer_id,
                v_rec.in_lawyer_group,
                v_rec.lawyer_id,
                v_rec.lawyer_assign_date,
                v_rec.is_specail_contract,
                v_lawyer_payment,
                v_master, -- master
                p_user_name,
                v_rec.ticket_id,
                nvl(v_rec.witness_count, 0),
                nvl(v_rec.authority_count, 0),
                nvl(v_rec.is_exploration, 0),
                v_rec.lawyer_reference
            );

            begin
                koc_law_utils.insert_status_info(p_law_file_no, sysdate, 8);
            exception when others then
                rollback;
                v_error_msg := 'Dosya durum bilgisi kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end;

        else
            rollback;
            v_error_msg := 'Yanlýþ tipte iþlem.';

            process_result(
                5, --p_process_no
                0,
                9,
                -1,
                'SAVE_GENERAL_INFO',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                p_process_results
            );
            return;
        end if;

        if v_rec.evolution_code is not null then
            --Geliþme Kodu Kaydý
            begin
                insert into koc_law_evolution_details
                (
                    law_file_no,
                    evolution_code,
                    validity_start_date,
                    evolution_date
                )
                values
                (
                    p_law_file_no,
                    v_rec.evolution_code,
                    sysdate,
                    sysdate
                );

            exception when others then
                rollback;
                v_error_msg := 'Geliþme kodu kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_GENERAL_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                    p_process_results
                );
                return;
            end;
        end if;

        p_rec := v_rec;

    exception when others then
        rollback;
        v_error_msg := 'Künye bilgileri kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'SAVE_GENERAL_INFO',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
            p_process_results
        );
        return;
    end save_general_info;

    --Mahkeme Bilgileri kaydetme
    procedure save_court_details(p_law_file_no in varchar2,
                                 p_user_name in varchar2,
                                 p_list in law_courts_tbl,
                                 p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_count number;
        v_general_info_rec law_general_info_typ;
        v_type number;
        v_error_count number;
    begin

        if p_law_file_no is null then
            rollback;
            v_error_msg := 'Hukuk Dosya No boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_COURT_DETAILS',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_COURT_DETAILS',
                p_process_results
            );
            return;
        end if;

        select count(*)
          into v_count
          from table(p_list)
         where court_id is null
           and court_control is null;

        if v_count > 0 then
            rollback;
            v_error_msg := 'court_id bilgisi boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SAVE_COURT_DETAILS',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_COURT_DETAILS',
                p_process_results
            );
            return;
        end if;

        v_general_info_rec := get_lawfile_general_info(p_law_file_no);

        if v_general_info_rec is null or v_general_info_rec.law_file_type is null then
            rollback;
            v_error_msg := 'Künye bilgileri bulunamadý.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_COURT_DETAILS',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_COURT_DETAILS',
                p_process_results
            );

            return;
        end if;

        select count(1)
          into v_count
          from table(p_list) x
         where trunc(nvl(case_date, sysdate)) > trunc(sysdate);

        if v_count > 0 then
            rollback;
            v_error_msg := 'Mahkeme Esas Tarihi bugünden ileri girilemez.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_COURT_DETAILS',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_COURT_DETAILS',
                p_process_results
            );

            return;
        end if;

        --Mahkeme ve Esas No kontrolü
        for rec1 in
                    (
                        select alc.court_name||' - '||x.court_file_no||' dosyasý daha önce '||
                                (
                                select max(law_file_no)
                                  from koc_law_base_courts
                                 where law_file_no != p_law_file_no
                                   and court_enf_type = x.court_enf_type
                                   and court_type = x.court_type
                                   and court_id = x.court_id
                                   and court_file_no = x.court_file_no
                                )
                               ||' nolu hukuk dosyasýnda kaydedilmiþtir.'||decode(v_general_info_rec.supplier_type, 'HDT', CHR(10)||'Ayný Mahkeme ve Esas Numarasý tekrar kullanýlamaz.', null) as message,
                               x.court_enf_type,
                               x.court_type,
                               x.court_id,
                               x.court_file_no
                          from table(p_list) x,
                               alz_law_courts_v alc
                         where not exists
                         (
                           select 1
                             from koc_law_base_courts
                            where law_file_no = p_law_file_no
                              and court_enf_type = x.court_enf_type
                              and court_type = x.court_type
                              and court_id = x.court_id
                              and court_file_no = x.court_file_no
                         )
                         and exists
                         (
                           select 1
                             from koc_law_base_courts lbc,
                                  koc_law_bases lb
                            where lbc.law_file_no != p_law_file_no
                              and lbc.law_file_no = lb.law_file_no
                              and (
                                (v_general_info_rec.law_file_type = 'TESPIT' and lb.law_file_type in ('TA', 'TL')) or
                                (v_general_info_rec.law_file_type != 'TESPIT' and lb.law_file_type not in ('TA', 'TL'))
                              )
                              and lbc.court_enf_type = x.court_enf_type
                              and lbc.court_type = x.court_type
                              and lbc.court_id = x.court_id
                              and lbc.court_file_no = x.court_file_no
                         )
                         and x.court_type = alc.court_type
                         and x.court_id = alc.court_id
                     )
        loop
            select count(1)
              into v_count
              from table(p_list) x,
                   alz_law_courts_v alc
             where x.court_enf_type = rec1.court_enf_type
               and not exists
             (
               select 1
                 from koc_law_base_courts
                where law_file_no = p_law_file_no
                  and court_enf_type = x.court_enf_type
                  and court_type = x.court_type
                  and court_id = x.court_id
                  and court_file_no = x.court_file_no
             )
             and exists
             (
               select 1
                 from koc_law_base_courts lbc,
                      koc_law_bases lb,
                      koc_law_status_ref ls
                where lbc.law_file_no != p_law_file_no
                  and lbc.law_file_no = lb.law_file_no
                  and lb.status_id = ls.status_id
                  and decode(ls.status_id, null, 1, nvl(ls.is_closed, 0)) != 1 --HDTde Kapalý olmayan dosyada kullanýlýyor mu kontrolü
                  and (
                    (v_general_info_rec.law_file_type = 'TESPIT' and lb.law_file_type in ('TA', 'TL')) or
                    (v_general_info_rec.law_file_type != 'TESPIT' and lb.law_file_type not in ('TA', 'TL'))
                  )
                  and lbc.court_enf_type = x.court_enf_type
                  and lbc.court_type = x.court_type
                  and lbc.court_id = x.court_id
                  and lbc.court_file_no = x.court_file_no
             )
             and x.court_type = alc.court_type
             and x.court_id = alc.court_id;

            v_error_msg := rec1.message;

            if v_general_info_rec.supplier_type = 'KDT' then
                v_type := 100;
            else
                if v_count > 0 then
                    v_error_msg := v_error_msg||CHR(10)||'Ayný Mahkeme ve Esas Numarasý tekrar kullanýlamaz.';
                    v_type := -1;
                else
                    v_type := 100;
                end if;
            end if;

            process_result(
                3, --p_process_no
                0,
                9,
                v_type,
                'SAVE_COURT_DETAILS',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_COURT_DETAILS',
                p_process_results
            );

        end loop;

        if p_process_results is not null then
            select count(1)
              into v_error_count
              from table(p_process_results)
             where type = -1;

            if v_error_count > 0 then
                rollback;
                return;
            end if;
        end if;

        --Ýcra Ceza Hakimliði Kontrolü
        if v_general_info_rec.law_file_type = 'CEZA'
        then
            select count(1)
              into v_count
              from table(p_list) x
             where court_enf_type = 'S';

            if v_count = 0 then

                select count(1)
                  into v_count
                  from table(p_list) x,
                       alz_law_courts_v lcv,
                       alz_uyap_birim_turleri ubt
                 where x.court_type = lcv.court_type
                   and x.court_id = lcv.court_id
                   and lcv.court_unit_code = ubt.birim_tur_kodu
                   and ubt.birim_tur_kodu = '0924'; --Ýcra Ceza Hakimliði

                if v_count = 0 then
                    rollback;
                    v_error_msg := 'Ýcra Ceza Hakimliði olmayan Ceza dosyalarýnda Savcýlýk girilmesi zorunludur.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_COURT_DETAILS',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_COURT_DETAILS',
                        p_process_results
                    );
                    return;
                end if;
            end if;

        end if;

        --court_history
        insert into koc_law_base_courts_log
        select p_law_file_no,
               court_enf_type,
               court_type,
               court_id,
               court_file_no,
               case_date,
               case_notif_date,
               decision_no,
               decision_date,
               decision_notif_date,
               p_user_name,
               sysdate
          from table(p_list) x
         where court_id is not null
           and not exists
         (
            select 1
              from koc_law_base_courts
             where law_file_no = p_law_file_no
               and court_enf_type = x.court_enf_type
               and court_type = x.court_type
               and court_id = x.court_id
               and nvl(court_file_no, 'X') = nvl(x.court_file_no, 'X')
               and nvl(case_date, sysdate) = nvl(x.case_date, sysdate)
               and nvl(case_notif_date, sysdate) = nvl(x.case_notif_date, sysdate)
               and nvl(decision_no, -1) = nvl(x.decision_no, -1) --TODO melih varchar2 yapýlacak
               and nvl(decision_date, sysdate) = nvl(x.decision_date, sysdate)
               and nvl(decision_notif_date, sysdate) = nvl(x.decision_notif_date, sysdate)
         );

        delete from koc_law_base_courts lbc
         where lbc.law_file_no = p_law_file_no
           and not exists
             (
                select 1
                  from table(p_list)
                 where court_enf_type = lbc.court_enf_type
             );

        merge into koc_law_base_courts lbc
             using table(p_list) x
                on (lbc.law_file_no = p_law_file_no and lbc.court_enf_type = x.court_enf_type)
               when
            matched then
             update set lbc.court_id = x.court_id,
                        lbc.court_type = x.court_type,
                        lbc.court_file_no = x.court_file_no,
                        lbc.case_date = x.case_date,
                        lbc.case_notif_date = x.case_notif_date,
                        lbc.decision_no = x.decision_no,
                        lbc.decision_date = x.decision_date,
                        lbc.decision_notif_date = x.decision_notif_date,
                        lbc.last_updated_by = p_user_name,
                        lbc.last_update_date = sysdate
               when not matched then
             insert (lbc.law_file_no,
                     lbc.court_enf_type,
                     lbc.court_type,
                     lbc.court_id,
                     lbc.court_file_no,
                     lbc.case_date,
                     lbc.case_notif_date,
                     lbc.decision_no,
                     lbc.decision_date,
                     lbc.decision_notif_date,
                     lbc.created_by)
             values (p_law_file_no,
                     x.court_enf_type,
                     x.court_type,
                     x.court_id,
                     x.court_file_no,
                     x.case_date,
                     x.case_notif_date,
                     x.decision_no,
                     x.decision_date,
                     x.decision_notif_date,
                     p_user_name);

        delete from koc_law_base_courts lbc
         where lbc.law_file_no = p_law_file_no
           and lbc.court_id is null;

    end save_court_details;

    --Taraf bilgileri kaydetme
    procedure save_party_list(p_law_file_no in varchar2,
                              p_user_name in varchar2,
                              p_list in out law_party_tbl,
                              p_process_results out customer.process_result_table)
    is
        v_list law_party_tbl := p_list;
        v_error_msg varchar2(1000);
        v_old_list law_party_tbl;
        v_partner_type varchar2(1);
        v_first_name varchar2(250);
        v_surname  varchar2(250);
        v_name  varchar2(250);
        sayac number;
        v_seq  number;
        v_count number;
        v_count1 number;
    begin

        if v_list is null or v_list.count = 0 then
            rollback;
            v_error_msg := 'taraf bilgilerini boþ geçemezsiniz!';  --'Bu Hukuk dosyasý için taraf kaydetmediniz, taraf bilgilerini kaydederek devam etmenizi öneririz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'taraf kaydetme',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                p_process_results
            );
            return;
          end if;


         select count(distinct a.role_code) into v_count from table(v_list) a ;

       if v_count < 2 then  --insert
            rollback;
            v_error_msg := 'Taraf sekmesinde en az iki taraf türü seçmelisiniz!(örnek: davalý ve davacý)';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'taraf kaydetme',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                p_process_results
            );
            return;

       end if;


        /*select count(*) into v_count1
         from (  select count(a.party_name)
                 from table(v_list) a
                 where a.party_name is not null
                 group by a.party_name having count(a.party_name) > 1
              );*/

        select count(*) into v_count1
         from (  select count(a.party_name)
                 from table(v_list) a
                 where a.party_name is not null and a.role_code is not null
                 group by a.party_name, a.role_code  having count(a.party_name) > 1
              );

       if v_count1 > 0 then  --insert
            rollback;
            v_error_msg := 'Taraf sekmesinde ayný tarafý ve taraf türünü sadece bir defa seçebilirsiniz';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'taraf kaydetme',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                p_process_results
            );
            return;

       end if;


         select count(*) into v_count1
         from (  select count(a.party_id)
                 from table(v_list) a
                 where a.party_id is not null and a.role_code is not null
                 group by a.party_id, a.role_code having count(a.party_id) > 1
              );

       if v_count1 > 0 then
            rollback;
            v_error_msg := 'Taraf sekmesinde ayný tarafý ve taraf türünü sadece bir defa seçebilirsiniz';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'taraf kaydetme',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                p_process_results
            );
            return;

       end if;

         for i in 1..v_list.count  loop
           if v_list(i).proxy_list is null or v_list(i).proxy_list.count = 0 then
             null;
           else

               select count(*) into v_count1
                 from (  select count(a.full_name)
                         from table(v_list(i).proxy_list) a
                         where a.full_name is not null
                         group by a.full_name having count(a.full_name) > 1
                      );

               if v_count1 > 0 then
                    rollback;
                    v_error_msg := 'Ayný Taraf vekil adýný birden fazla ekleyemezsiniz. '||v_list(i).party_name||' tarafýndaki vekillere bakýnýz';

                    process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,
                        'taraf kaydetme',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                        p_process_results
                    );
                    return;

               end if;


           end if;

         end loop;

             --v_list(i).proxy_list(y).full_name


       if p_law_file_no is null then  --insert
            rollback;
            v_error_msg := 'hukuk dosya no boþ olamaz!';  --'Bu Hukuk dosyasý için taraf kaydetmediniz, taraf bilgilerini kaydederek devam etmenizi öneririz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'taraf kaydetme',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                p_process_results
            );
            return;

       end if;

       v_old_list := get_party_list(p_law_file_no);

       if v_old_list is null or v_old_list.count = 0 then  --new insert
           for i in 1..v_list.count  loop
            v_seq := koc_law_interested_parties_seq.nextval;

            v_list(i).unique_id := v_seq;


                 /*if v_list(i).role_code <> 7 then --ceza deðilse
                  v_list(i).prosecution_status := null;
                 end if;*/

             if v_list(i).party_id is not null then

                 koc_law_utils.insert_law_interested_parties(p_law_file_no,v_list(i).party_id,
                                                        v_list(i).role_code,v_list(i).type_code,substr(v_list(i).type_code,1,1),null,v_list(i).prosecution_status);

                update koc_law_interested_parties set unique_id = v_seq , resp_tcvkn = v_list(i).tax_number, source = v_list(i).source, source_id = v_list(i).source_id,
                            source_detail_id = v_list(i).source_detail_id, user_name = p_user_name
                     where law_file_no = p_law_file_no and part_id = v_list(i).party_id
                       and decode(res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', res_def_type) = to_char(v_list(i).role_code);


             elsif v_list(i).party_id is null then

               select decode(v_list(i).type_code,'SHS','P','I') into v_partner_type from dual;

                if v_list(i).type_code = 'SHS' then
                    koc_law_utils.pr_name_surname(v_list(i).party_name,v_first_name,v_surname);
                    v_name := v_surname;
                else
                    v_first_name := v_list(i).party_name;
                    v_surname := null;
                    v_name := v_list(i).party_name;
                end if;

                  begin
                    koc_law_utils.insert_cp_partners(v_list(i).party_id,sysdate,p_user_name,
                             v_partner_type,substr(v_name,1,50),v_first_name,v_surname);
                  exception when others then
                    if instr(sqlerrm,'SURNAME deðeri') > 0 then
                        rollback;
                        v_error_msg := 'Taraf kiþiliði "Þahýs" seçildiðinde ad ve soyadýndan oluþan en az iki kelime giriþi yapmalýsýnýz. Taraf: '||v_first_name||' '||v_surname;  --'Bu Hukuk dosyasý için taraf kaydetmediniz, taraf bilgilerini kaydederek devam etmenizi öneririz.';

                        process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,
                            'taraf kaydetme',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                            p_process_results
                        );
                        return;

                    else
                       raise;
                    end if;

                  end;

                  INSERT INTO cp_partner_roles (OBJECT_TYPE, PART_ID, INS_OBJ_UID, ROLE_TYPE, FROM_DATE, OBJ_REFERENCE)
                  VALUES ('LAW',v_list(i).party_id,v_list(i).party_id,v_list(i).type_code,sysdate,p_law_file_no);


                 koc_law_utils.insert_law_interested_parties(p_law_file_no,v_list(i).party_id,
                                                        v_list(i).role_code,v_list(i).type_code,substr(v_list(i).type_code,1,1),null,v_list(i).prosecution_status);


                update koc_law_interested_parties set unique_id = v_seq , resp_tcvkn = v_list(i).tax_number, source = v_list(i).source, source_id = v_list(i).source_id,
                            source_detail_id = v_list(i).source_detail_id, user_name = p_user_name
                     where law_file_no = p_law_file_no and part_id = v_list(i).party_id
                        and decode(res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', res_def_type) = to_char(v_list(i).role_code);


             end if;

                if v_list(i).proxy_list is not null then
                    for  y in 1..v_list(i).proxy_list.count loop
                        Insert into CUSTOMER.KOC_LAW_PARTY_PROXY
                           (LAW_FILE_NO, PART_ID, TAX_NUMBER, FULL_NAME, SOURCE,
                           CREATED_BY, SOURCE_ID, SOURCE_DETAIL_ID,UNIQUE_ID)
                         Values
                           ( p_law_file_no, v_list(i).party_id, v_list(i).proxy_list(y).tax_number, v_list(i).proxy_list(y).full_name, v_list(i).proxy_list(y).source,
                            p_user_name, v_list(i).proxy_list(y).source_id, v_list(i).proxy_list(y).source_detail_id, v_seq);
                    end loop;
                end if;

           end loop;

       else  --update

           for i in 1..v_list.count  loop

              /*if v_list(i).role_code <> 7 then --ceza deðilse
                v_list(i).prosecution_status := null;
              end if;*/

             if v_list(i).party_id is null then
                v_seq := koc_law_interested_parties_seq.nextval;

                v_list(i).unique_id := v_seq;

               select decode(v_list(i).type_code,'SHS','P','I') into v_partner_type from dual;

                if v_list(i).type_code = 'SHS' then
                    koc_law_utils.pr_name_surname(v_list(i).party_name,v_first_name,v_surname);
                    v_name := v_surname;
                else
                    v_first_name := v_list(i).party_name;
                    v_surname := null;
                    v_name := v_list(i).party_name;
                end if;

                  begin
                    koc_law_utils.insert_cp_partners(v_list(i).party_id,sysdate,p_user_name,
                             v_partner_type,substr(v_name,1,50),v_first_name,v_surname);
                  exception when others then
                    if instr(sqlerrm,'SURNAME deðeri') > 0 then
                        rollback;
                        v_error_msg := 'Taraf kiþiliði "Þahýs" seçildiðinde ad ve soayaddan oluþan en az iki kelime giriþi yapmalýsýnýz. Taraf: '||v_first_name||' '||v_surname;  --'Bu Hukuk dosyasý için taraf kaydetmediniz, taraf bilgilerini kaydederek devam etmenizi öneririz.';

                        process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,
                            'taraf kaydetme',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                            p_process_results
                        );
                        return;

                   else
                       raise;
                    end if;

                  end;


                  INSERT INTO cp_partner_roles (OBJECT_TYPE, PART_ID, INS_OBJ_UID, ROLE_TYPE, FROM_DATE, OBJ_REFERENCE)
                  VALUES ('LAW',v_list(i).party_id,v_list(i).party_id,v_list(i).type_code,sysdate,p_law_file_no);


                 koc_law_utils.insert_law_interested_parties(p_law_file_no,v_list(i).party_id,
                                                        v_list(i).role_code,v_list(i).type_code,substr(v_list(i).type_code,1,1),null,v_list(i).prosecution_status);

                --to_do resp_tcvkn  için objeye melih field'ý ekledikten sonra ekleyeceðim
                update koc_law_interested_parties set unique_id = v_seq , resp_tcvkn = v_list(i).tax_number, source = v_list(i).source, source_id = v_list(i).source_id,
                            source_detail_id = v_list(i).source_detail_id, user_name = p_user_name
                     where law_file_no = p_law_file_no and part_id = v_list(i).party_id
                       and decode(res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', res_def_type) = to_char(v_list(i).role_code);


                if v_list(i).proxy_list is not null then
                   for  y in 1..v_list(i).proxy_list.count loop
                        Insert into CUSTOMER.KOC_LAW_PARTY_PROXY
                           (LAW_FILE_NO, PART_ID, TAX_NUMBER, FULL_NAME, SOURCE,
                           CREATED_BY, SOURCE_ID, SOURCE_DETAIL_ID, UNIQUE_ID)
                         Values
                           ( p_law_file_no, v_list(i).party_id, v_list(i).proxy_list(y).tax_number, v_list(i).proxy_list(y).full_name, v_list(i).proxy_list(y).source,
                            p_user_name, v_list(i).proxy_list(y).source_id, v_list(i).proxy_list(y).source_detail_id, v_seq);
                   end loop;
                end if;

             elsif v_list(i).party_id is not null then --zaten varolan ve deðiþiklik yapýlan veya yapýlmayan bir tarafsa
                sayac := 0 ;
                for m in 1..v_old_list.count loop
                   if v_old_list(m).unique_id = v_list(i).unique_id then
                      sayac := m;
                      exit;
                   end if;
                end loop;
              if sayac > 0 then
                    if not (v_old_list(sayac).role_code = v_list(i).role_code and v_old_list(sayac).type_code = v_list(i).type_code and
                         koc_clm_utils.partner_name_bul(v_old_list(sayac).party_id ) = v_list(i).party_name and
                         nvl(v_old_list(sayac).prosecution_status,0) = nvl(v_list(i).prosecution_status,0) and
                         nvl(v_old_list(sayac).tax_number,0) = nvl(v_list(i).tax_number,0) ) then


                        if not (v_old_list(sayac).type_code = v_list(i).type_code and
                           koc_clm_utils.partner_name_bul(v_old_list(sayac).party_id ) = v_list(i).party_name and
                           nvl(v_old_list(sayac).tax_number,0) = nvl(v_list(i).tax_number,0) ) then

                           select decode(v_list(i).type_code,'SHS','P','I') into v_partner_type from dual;

                            if v_list(i).type_code = 'SHS' then
                                koc_law_utils.pr_name_surname(v_list(i).party_name,v_first_name,v_surname);
                                v_name := v_surname;
                            else
                                v_first_name := v_list(i).party_name;
                                v_surname := null;
                                v_name := v_list(i).party_name;
                            end if;

                            begin
                              koc_law_utils.insert_cp_partners(v_list(i).party_id,sysdate,p_user_name,
                                         v_partner_type,substr(v_name,1,50),v_first_name,v_surname);
                            exception when others then
                              if instr(sqlerrm,'SURNAME deðeri') > 0 then
                                  rollback;
                                  v_error_msg := 'Taraf kiþiliði "Þahýs" seçildiðinde ad ve soayaddan oluþan en az iki kelime giriþi yapmalýsýnýz. Taraf: '||v_first_name||' '||v_surname;  --'Bu Hukuk dosyasý için taraf kaydetmediniz, taraf bilgilerini kaydederek devam etmenizi öneririz.';
                                  process_result(
                                      1, --p_process_no
                                      0,
                                      9,
                                      -1,
                                      'taraf kaydetme',
                                      v_error_msg,
                                      v_error_msg,
                                      null,
                                      null,
                                      'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
                                     p_process_results
                                  );
                                  return;

                              else
                                 raise;
                              end if;

                            end;


                            INSERT INTO cp_partner_roles (OBJECT_TYPE, PART_ID, INS_OBJ_UID, ROLE_TYPE, FROM_DATE, OBJ_REFERENCE)
                              VALUES ('LAW',v_list(i).party_id,v_list(i).party_id,v_list(i).type_code,sysdate,p_law_file_no);
                        end if;



                        update koc_law_interested_parties set part_id = v_list(i).party_id,  resp_tcvkn = v_list(i).tax_number, source = v_list(i).source,
                           source_id = v_list(i).source_id, source_detail_id = v_list(i).source_detail_id, user_name = p_user_name,
                            res_def_type = v_list(i).role_code, role_type = v_list(i).type_code, part_type = substr(v_list(i).type_code,1,1),
                            prosecution_status = v_list(i).prosecution_status
                             where unique_id = v_list(i).unique_id;

                    end if;

                       delete from koc_law_party_proxy where unique_id = v_list(i).unique_id; --law_file_no = p_law_file_no and part_id = v_list(i).party_id  and unique_id = v_list(i).unique_id;

                       --for  y in 1..v_list(i).proxy_list.count loop
                       if v_list(i).proxy_list is not null then
                            Insert into CUSTOMER.KOC_LAW_PARTY_PROXY
                               (LAW_FILE_NO, PART_ID, TAX_NUMBER, FULL_NAME, SOURCE,
                               CREATED_BY, SOURCE_ID, SOURCE_DETAIL_ID,UNIQUE_ID)
                             /*Values
                               ( p_law_file_no, v_list(i).party_id, v_list(i).proxy_list(y).tax_number, v_list(i).proxy_list(y).full_name, v_list(i).proxy_list(y).source,
                                p_user_name, v_list(i).proxy_list(y).source_id, v_list(i).proxy_list(y).source_detail_id, v_seq);*/
                             (select p_law_file_no, v_list(i).party_id, a.tax_number, a.full_name, a.source, p_user_name, a.source_id, a.source_detail_id, v_list(i).unique_id
                                from table( v_list(i).proxy_list) a );
                       end if;
                       --end loop;


              elsif sayac = 0 then


                 v_seq := koc_law_interested_parties_seq.nextval;
                 v_list(i).unique_id := v_seq;

                 /*if v_list(i).role_code <> 7 then --ceza deðilse
                  v_list(i).prosecution_status := null;
                 end if;*/

                 koc_law_utils.insert_law_interested_parties(p_law_file_no,v_list(i).party_id,
                                                        v_list(i).role_code,v_list(i).type_code,substr(v_list(i).type_code,1,1),null,v_list(i).prosecution_status);


                update koc_law_interested_parties set unique_id = v_seq , resp_tcvkn = v_list(i).tax_number, source = v_list(i).source, source_id = v_list(i).source_id,
                            source_detail_id = v_list(i).source_detail_id, user_name = p_user_name
                     where law_file_no = p_law_file_no and part_id = v_list(i).party_id
                       and decode(res_def_type, 'R', '1', 'D', '2', 'A', '3', 'C', '7', res_def_type) = to_char(v_list(i).role_code);


                    if v_list(i).proxy_list is not null then
                       --for  y in 1..v_list(i).proxy_list.count loop
                            Insert into CUSTOMER.KOC_LAW_PARTY_PROXY
                               (LAW_FILE_NO, PART_ID, TAX_NUMBER, FULL_NAME, SOURCE,
                               CREATED_BY, SOURCE_ID, SOURCE_DETAIL_ID, UNIQUE_ID)
                             /*Values
                               ( p_law_file_no, v_list(i).party_id, v_list(i).proxy_list(y).tax_number, v_list(i).proxy_list(y).full_name, v_list(i).proxy_list(y).source,
                                p_user_name, v_list(i).proxy_list(y).source_id, v_list(i).proxy_list(y).source_detail_id, v_seq);*/
                             (select p_law_file_no, v_list(i).party_id, a.tax_number, a.full_name, a.source, p_user_name, a.source_id, a.source_detail_id, v_seq
                                from table( v_list(i).proxy_list) a );
                       --end loop;
                    end if;



              end if;
             end if;

           end loop;

            --silinenleri koc_law_interested_parties'ten de sil

            for m in 1..v_old_list.count loop
                 sayac := 0 ;
                  for i in 1..v_list.count loop
                       if v_old_list(m).unique_id = v_list(i).unique_id then
                          sayac := 1;
                          exit;
                       end if;
                  end loop;
              if sayac = 0 then
               delete from koc_law_interested_parties where unique_id =  v_old_list(m).unique_id;
               delete from koc_law_party_proxy where unique_id = v_old_list(m).unique_id;
              end if;
            end loop;

       end if;

       p_list := v_list;  --to_do (info) p_list in out law_party_tbl  aslýmda sadece in paramere olarak set edilebilir. melihle konuþ

--    exception when others then
--        v_error_msg := 'Taraf bilgileri kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);
--
--        process_result(
--            99, --p_process_no
--            0,
--            9,
--            -1,
--            'SAVE_PARTY_LIST',
--            v_error_msg,
--            v_error_msg,
--            null,
--            null,
--            'ALZ_LITIGATION_UTILS.SAVE_PARTY_LIST',
--            p_process_results
--        );
--        return;
    end save_party_list;

    procedure save_law_detail_list(p_law_file_no in varchar2,
                               p_user_name in varchar2,
                               p_list in out law_base_detail_tbl,
                               p_base_rec in out law_base_typ,
                               p_simple_questions in out customer.simple_question_table,
                               p_process_results out customer.process_result_table,
                               p_type varchar2 default 'UPDATE')
    is
        v_list law_base_detail_tbl := law_base_detail_tbl();
        v_old_list law_base_detail_tbl := law_base_detail_tbl();
        v_base_rec law_base_typ := p_base_rec;
        v_rec_sort_type koc_law_reserve_utils.rec_sort_type;
        v_law_base_dtl_records koc_law_reserve_utils.koc_law_bases_detail_type;

        v_error_msg varchar2(1000);
        v_has_claim varchar2(1);
        v_has_detail varchar2(1);

        v_general_info_rec law_general_info_typ;
        v_opus_date date := pme_public.opus_date;
        v_count number;
        v_cover_swift_code varchar2(3);
        v_private number;
        v_status_id number;
        v_clm_status varchar2(10);
        v_line_id number;
        v_sf_desc varchar2(100);
        v_temp varchar2(100);
        v_date_parity date := sysdate;
        v_qst_cnt number;
        v_detail_no number := 0;
        v_claim_id number;
        v_sf_no number;
        v_temp_number number;
        v_temp_char varchar2(20);
        v_court_decided_amount number;
        v_court_decided_amount_swf varchar2(3);
        v_ext_reference varchar2(4000);

        cursor c_detail is

        select *
          from table(v_list)
         order by nvl(detail_no, rownum);

    begin

        v_list := alz_lawfile_utils.copy_law_details(p_list);

        v_general_info_rec := get_lawfile_general_info(p_law_file_no);

        if v_general_info_rec is null or v_general_info_rec.law_file_type is null then
            rollback;
            v_error_msg := 'Künye bilgileri bulunamadý.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAW_DETAIL_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                p_process_results
            );

            return;
        end if;

        begin
            select nvl(has_claim, 'N') has_claim,
                   nvl(has_detail, 'N') has_detail
              into v_has_claim,
                   v_has_detail
              from koc_law_sf_type
             where law_sf_type = v_general_info_rec.law_sf_type;

        exception when others then
            v_has_claim := 'N';
            v_has_detail := 'N';
        end;

        if --v_general_info_rec.law_sf_type in ('A', 'D', 'F', 'O', 'Y') and
           v_has_detail = 'N' and
           (v_list is null or v_list.count = 0)
        then
            rollback;
            v_error_msg := v_general_info_rec.law_sf_type_explanation||' Dosya Tipinde detay kayýt edemezsiniz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAW_DETAIL_LIST',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                p_process_results
            );

            return;
        end if;

        if p_type = 'UPDATE' then
            v_old_list := get_law_detail_list(p_law_file_no);

            --Hasar Detay kontrolleri
            if v_general_info_rec.law_file_type != 'TESPIT' and
               v_old_list is not null and
               v_old_list.count > 0 and
               (v_list is null or v_list.count = 0)
            then
                rollback;
                v_error_msg := 'Var olan hasar dosyasýný silemezsiniz.';

                process_result(
                    99, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_DETAIL_LIST',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                    p_process_results
                );

                return;
            end if;

            --Detay Bilgileri kontrolü
            if v_general_info_rec.law_file_type = 'HUKUK' and
               v_general_info_rec.law_sf_type in ('H', 'R', 'T', 'M', 'I', 'B', 'E')
            then --Hasarlýlar

                select count(1)
                  into v_count
                  from table(v_old_list) x
                 where nvl(detail_type, 'X') != 'R'
                   and (
                       not exists
                             (
                                select 1
                                  from table(v_list) y
                                 where x.detail_no = y.detail_no
                                   and x.claim_id = y.claim_id
                                   and x.sf_no = y.sf_no
                             )
                        or not exists
                             (
                                select 1
                                  from table(v_list) y
                                 where x.detail_no = y.detail_no
                                   and nvl(x.cover_code, 'X')  = nvl(y.cover_code, 'X')
                             )
                   );

                if v_count > 0 then
                    rollback;
                    v_error_msg := 'Var olan hasar dosya numarasýný ve teminatýný güncelleyemezsiniz.';
                    process_result(
                        99, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DETAIL_LIST',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                        p_process_results
                    );

                    return;
                end if;
            end if;
        end if;

        if v_general_info_rec.law_file_type = 'CEZA' then

            delete from koc_law_bases_detail where law_file_no = p_law_file_no;

            for rec_detail in c_detail loop

                if rec_detail.ext_reference is not null then
                    begin
                        select claim_id,
                               sf_no
                          into v_claim_id,
                               v_sf_no
                          from clm_subfiles
                         where ext_reference = rec_detail.ext_reference;

                    exception when others then
                        rollback;
                        v_error_msg := rec_detail.ext_reference||' nolu hasar dosyasý bulunamadý.';

                        process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DETAIL_LIST',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                            p_process_results
                        );
                        return;

                    end;

                    insert into koc_law_bases_detail
                    (
                        law_file_no,
                        detail_no,
                        claim_id,
                        sf_no,
                        policy_ref,
                        recourse_amount,
                        swift_code,
                        user_name
                    )
                    values
                    (
                        p_law_file_no,
                        rec_detail.detail_no,
                        v_claim_id,
                        v_sf_no,
                        null, --policy
                        0, -- recourse_amount
                        base_swift_code,
                        p_user_name
                    );
                end if;
            end loop;

        else
            if v_general_info_rec.law_file_type = 'HUKUK' then -- A ve L dosyalar

                -- Faiz baþlangýç tarihi ve tipi kontrolü
                select count(*)
                  into v_count
                  from table(v_list)
                 where interest_begin_date is null
                    or interest_type is null;

                if v_count > 0 then
                    rollback;
                    v_error_msg := 'Faiz hesabý yapýlabilmesi için Faiz baþlangýç tarihi ve Faiz tipi girilmelidir.';

                    process_result(
                        2, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DETAIL_LIST',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                        p_process_results
                    );
                    return;
                end if;

                --Sabit faiz kontrolü
                select count(*)
                  into v_count
                  from table(v_list)
                 where interest_type = 'S'
                   and interest_amount is null;

                if v_count > 0 then
                    rollback;
                    v_error_msg := 'Hasar Faiz tutarý, "Sabit Faiz"  seçtiðiniz için  boþ  geçilemez.';

                    process_result(
                        2, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DETAIL_LIST',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                        p_process_results
                    );
                    return;
                end if;

                --Aleyhe dosya kontrolleri
                if v_general_info_rec.law_case_type = 'A' then
                    --Teminat kontrolleri
                    select count(*)
                      into v_count
                      from table(v_list)
                     where cover_amount is null
                       or cover_name is null;

                    if v_count > 0 then
                        rollback;
                        v_error_msg := 'Teminat Tutarý ve Teminat Adý boþ geçilemez.';

                        process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DETAIL_LIST',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                            p_process_results
                        );
                        return;
                    end if;

                    --dava tipi kontrolü
                    select count(*)
                      into v_count
                      from table(v_list)
                     where law_type is null;

                    if v_count > 0 then
                        rollback;
                        v_error_msg := 'Hasar Dava tipi boþ geçilemez.';

                        process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DETAIL_LIST',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                            p_process_results
                        );
                        return;
                    end if;

                    if v_has_claim = 'Y' then
                        --Hasar Dosyasý, Teminat Adý ve Dava Tipi mükerrer kontrolü
                        select count(1)
                          into v_count
                          from
                          (
                            select ext_reference, cover_code, law_type
                              from table(v_list)
                             group by ext_reference, cover_code, law_type
                            having count(1) > 1
                          );

                        if v_count > 0 then
                            rollback;
                            v_error_msg := 'Birden fazla ayný Hasar Dosyasý, teminat adý ve dava tipi birlikte girilemez.';

                            process_result(
                                1, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DETAIL_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                p_process_results
                            );

                            return;
                        end if;
                    else
                        --Hasar Dosyasý ve Dava Tipi mükerrer kontrolü
                        select count(1)
                          into v_count
                          from
                          (
                            select ext_reference, policy_ref, law_type
                              from table(v_list)
                             group by ext_reference, policy_ref, law_type
                            having count(1) > 1
                          );

                        if v_count > 0 then
                            rollback;

                            if v_general_info_rec.law_sf_type = 'Z' then
                                v_error_msg := 'Birden fazla ayný Hayat Dosya No ve Dava Tipi birlikte girilemez.';
                            elsif v_general_info_rec.law_sf_type = 'W' then
                                v_error_msg := 'Birden fazla ayný Sözleþme No ve Dava Tipi birlikte girilemez.';
                            elsif v_general_info_rec.law_sf_type = 'L' then
                                v_error_msg := 'Birden fazla ayný Dava Tipi girilemez.';
                            else
                                v_error_msg := 'Birden fazla ayný Poliçe No ve Dava Tipi birlikte girilemez.';
                            end if;

                            process_result(
                                1, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DETAIL_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                p_process_results
                            );

                            return;
                        end if;
                    end if;

                elsif v_general_info_rec.law_case_type = 'L' then

                    if v_has_claim = 'Y' then
                        --Hasar Dosyasý, Teminat Adý
                        select count(1)
                          into v_count
                          from
                          (
                            select ext_reference, cover_code
                              from table(v_list)
                             group by ext_reference, cover_code
                            having count(1) > 1
                          );

                        if v_count > 0 then
                            rollback;
                            v_error_msg := 'Birden fazla ayný Hasar Dosyasý ve teminat adý birlikte girilemez..';

                            process_result(
                                1, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DETAIL_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                p_process_results
                            );

                            return;
                        end if;

                    else

                        --Hayat Dosya No / Sözleþme No / Poliçe No ve Dava Tipi mükerrer kontrolü
                        select count(1)
                          into v_count
                          from
                          (
                            select ext_reference, policy_ref, law_type
                              from table(v_list)
                             group by ext_reference, policy_ref, law_type
                            having count(1) > 1
                          );

                        if v_count > 0 then
                            rollback;

                            if v_general_info_rec.law_sf_type = 'Z' then
                                v_error_msg := 'Birden fazla ayný Hayat Dosya No ve Dava Tipi birlikte girilemez.';
                            elsif v_general_info_rec.law_sf_type = 'W' then
                                v_error_msg := 'Birden fazla ayný Sözleþme No ve Dava Tipi birlikte girilemez.';
                            elsif v_general_info_rec.law_sf_type = 'L' then
                                v_error_msg := 'Birden fazla ayný Dava Tipi girilemez.';
                            else
                                v_error_msg := 'Birden fazla ayný Poliçe No ve Dava Tipi birlikte girilemez.';
                            end if;

                            process_result(
                                1, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DETAIL_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                p_process_results
                            );

                            return;
                        end if;
                    end if;
                end if;

                if v_has_claim = 'Y' then
                    -- Hasar Ýhbar Tarihi kontrolü
                    select substr(listagg(ext_reference, ', ') within group (order by ext_reference), 1, 4000)
                      into v_ext_reference
                      from
                          (
                            select ext_reference
                              from table(v_list)
                             where denounce_date is null
                               and nvl(detail_type, 'X') <> 'R'
                          );

                    if v_ext_reference is not null then
                        rollback;

                        if instr(v_ext_reference, ',') > 0 then
                            v_error_msg := v_ext_reference||' hasar dosyalarýnýn Hasar Ýhbar Tarihi alaný dolu olmalýdýr.';
                        else
                            v_error_msg := v_ext_reference||' hasar dosyasýnýn Hasar Ýhbar Tarihi alaný dolu olmalýdýr.';
                        end if;

                        process_result(
                            3, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DETAIL_LIST',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                            p_process_results
                        );
                        return;
                    end if;

                    --Ýhbar Tarihi - Faiz Tarihi kontrolü
                    select substr(listagg(ext_reference, ', ') within group (order by ext_reference), 1, 4000)
                      into v_ext_reference
                      from
                          (
                            select ext_reference
                              from table(v_list) x,
                                   clm_pol_bases cpb
                             where x.claim_id = cpb.claim_id
                               and x.interest_begin_date < cpb.date_of_loss
                          );

                    if v_ext_reference is not null then
                        rollback;

                        if instr(v_ext_reference, ',') > 0 then
                            v_error_msg := v_ext_reference||' hasar dosyalarýnýn Faiz Baþlangýç Tarihi Hasar Tarihinden önce olmamalýdýr.';
                        else
                            v_error_msg := v_ext_reference||' hasar dosyasýnýn Faiz Baþlangýç Tarihi Hasar Tarihinden önce olmamalýdýr.';
                        end if;

                        process_result(
                            3, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DETAIL_LIST',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                            p_process_results
                        );
                        return;
                    end if;

                end if;
            end if;

            if v_has_detail = 'Y' then
--            if v_general_info_rec.law_sf_type in ('H','R','I','B','E','P','N','W','Z','L','S') then

                if v_general_info_rec.law_sf_type in ('H', 'R', 'I', 'B', 'E') then
                    select count(*)
                      into v_count
                      from table(v_list)
                     where ext_reference is null;

                    if v_count > 1 then
                        rollback;
                        v_error_msg := 'Hasar dosya no alaný boþ olamaz.';

                        process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAW_DETAIL_LIST',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                            p_process_results
                        );
                        return;
                    end if;

                    --Rücu Kontrolleri
                    if v_general_info_rec.law_sf_type ='R' then

                        for rec_detail in c_detail loop
                            begin
                               select s.claim_id,
                                      s.sf_no
                                 into v_list(rec_detail.detail_no).claim_id,
                                      v_list(rec_detail.detail_no).sf_no
                                 from clm_subfiles s,
                                      koc_clm_recourse_detail l
                                where l.ext_reference = rec_detail.ext_reference
                                  and s.ext_reference = l.ext_reference;  --task:189473_1 cover kirilimi

                                begin
                                     select substr(sf_type, 1, 1)
                                       into v_temp
                                       from koc_clm_recourse_detail
                                      where ext_reference = rec_detail.ext_reference;

                                exception when others then
                                    rollback;
                                    v_error_msg := 'Ýlgili dosya numarasý olarak hasar dosya numarasý girilmelidir.';

                                    process_result(
                                        1, --p_process_no
                                        0,
                                        9,
                                        -1,
                                        'SAVE_LAW_DETAIL_LIST',
                                        v_error_msg,
                                        v_error_msg,
                                        null,
                                        null,
                                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                        p_process_results
                                    );
                                    return;
                                end;

                                begin
                                    select d.ext_reference
                                      into v_temp
                                      from koc_clm_recourse_detail d
                                     where d.ext_reference = rec_detail.ext_reference
                                       and d.recourse_status != 'CLOSED'
                                       and rownum < 2;

                                exception when no_data_found then
                                    begin
                                      select d.ext_reference
                                        into v_temp
                                        from koc_clm_recourse_detail d
                                       where d.clm_ext_reference = rec_detail.ext_reference
                                         and d.recourse_status != 'CLOSED'
                                         and rownum < 2;

                                    exception when others then
                                        rollback;
                                        v_error_msg := 'Rücu dosyasý açýlmamýþ, þüpheli alacak olarak tanýmlanamaz.';

                                        process_result(
                                            1, --p_process_no
                                            0,
                                            9,
                                            -1,
                                            'SAVE_LAW_DETAIL_LIST',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                            p_process_results
                                        );
                                        return;
                                    end;

                                    begin
                                        select 1
                                          into v_temp
                                          from koc_clm_recourse_detail a
                                         where a.ext_reference = v_temp
                                           and exists
                                                (
                                                    select e.claim_id,e.sf_no
                                                      from koc_clm_examination_trans e
                                                     where e.claim_id= a.claim_id
                                                       and e.sf_no   = a.sf_no
                                                       and e.destination_supp_type in ('HDT','HUKK')
                                                       and e.exm_order_no = (select max(f.exm_order_no)
                                                                               from koc_clm_examination_trans f
                                                                              where f.claim_id = e.claim_id
                                                                                and f.sf_no = e.sf_no
                                                                            )
                                                );
                                    exception when others then
                                        rollback;
                                        v_error_msg := 'Rücu dosyasý sevk edilmemiþ, þüpheli alacak olarak tanýmlanamaz.';

                                        process_result(
                                            1, --p_process_no
                                            0,
                                            9,
                                            -1,
                                            'SAVE_LAW_DETAIL_LIST',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                            p_process_results
                                        );
                                        return;
                                    end;
                                end;

                            exception when others then
                                select count(1)
                                  into v_count
                                  from clm_subfiles
                                 where ext_reference = rec_detail.ext_reference;

                                if v_count = 0 then
                                    rollback;
                                    v_error_msg := 'Hasar dosyasý sistemde mevcut deðil.';

                                    process_result(
                                        1, --p_process_no
                                        0,
                                        9,
                                        -1,
                                        'SAVE_LAW_DETAIL_LIST',
                                        v_error_msg,
                                        v_error_msg,
                                        null,
                                        null,
                                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                        p_process_results
                                    );
                                    return;
                                end if;
                            end;
                        end loop;

                    else
                        for rec_detail in c_detail loop
                            begin
                               select claim_id,
                                      sf_no
                                 into v_list(rec_detail.detail_no).claim_id,
                                      v_list(rec_detail.detail_no).sf_no
                                 from clm_subfiles
                                where ext_reference = rec_detail.ext_reference;
                            exception when others then
                                rollback;
                                v_error_msg := 'Dosya sistemde mevcut deðil.';

                                process_result(
                                    1, --p_process_no
                                    0,
                                    9,
                                    -1,
                                    'SAVE_LAW_DETAIL_LIST',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                    p_process_results
                                );
                                return;
                            end;
                        end loop;
                    end if;

                    if v_general_info_rec.law_case_type = 'A' and
                       v_general_info_rec.law_file_type = 'HUKUK'
                    then
                        --Hasar Dosyasý Açma (kapalý hasar dosyasý varsa ve ihtiyaten ve mükerrer deðilse dosyayý yeniden açýyor. -- Aleyhte hukuk için)
                        for rec_detail in c_detail loop
                            begin
                                select clm_status
                                  into v_clm_status
                                  from clm_subfiles
                                 where claim_id = rec_detail.claim_id
                                   and sf_no = rec_detail.sf_no;

                            exception when others then
                                rollback;
                                v_error_msg := 'Hasar dosya durum bilgisi çekilemedi.';

                                process_result(
                                    1, --p_process_no
                                    0,
                                    9,
                                    -1,
                                    'SAVE_LAW_DETAIL_LIST',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                    p_process_results
                                );
                                return;
                            end;

                            -- güncellemede 'CANCELLED' statüsü de eklenmiþ
                            if v_clm_status not in ('REOPENED','IHBR', 'CANCELLED') and rec_detail.law_type not in (29,30) then
                                v_sf_desc := 'Hukuk dosyasý: '||p_law_file_no|| ' iþlemi için açýldý';

                                update clm_subfiles
                                   set clm_status = 'REOPENED',
                                     sf_desc = v_sf_desc
                                where claim_id = rec_detail.claim_id
                                  and sf_no = rec_detail.sf_no;

                                select clm_status_id_seq.nextval into v_status_id from dual;

                                begin
                                    select clm_line_id
                                      into v_line_id
                                      from clm_bases
                                     where claim_id = rec_detail.claim_id;

                                exception when others then
                                    rollback;
                                    v_error_msg := 'Hasar dosya bilgisi çekilemedi.';

                                    process_result(
                                        1, --p_process_no
                                        0,
                                        9,
                                        -1,
                                        'SAVE_LAW_DETAIL_LIST',
                                        v_error_msg,
                                        v_error_msg,
                                        null,
                                        null,
                                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                        p_process_results
                                    );
                                    return;
                                end;

                                insert into clm_status_history
                                (
                                    status_id,
                                    claim_id,
                                    clm_line_id,
                                    clm_level,
                                    clm_status,
                                    csh_date,
                                    csh_username,
                                    sf_no,
                                    trans_no,
                                    csh_comment
                                )
                                values
                                (
                                    v_status_id,
                                    rec_detail.claim_id,
                                    v_line_id,
                                    'SUBFILE',
                                    'REOPENED',
                                    v_opus_date,
                                    p_user_name,
                                    rec_detail.sf_no,
                                    null,
                                    v_sf_desc
                                );

                                insert into koc_clm_status_history_ext
                                (
                                    status_id,
                                    claim_id,
                                    sf_no,
                                    clm_status,
                                    process_date
                                )
                                values
                                (
                                    v_status_id,
                                    rec_detail.claim_id,
                                    rec_detail.sf_no,
                                    'REOPENED',
                                    v_opus_date
                                );
                            end if;
                        end loop;
                    end if;

                elsif v_general_info_rec.law_sf_type in ('K', 'P', 'S', 'W') then

                    if v_general_info_rec.law_type != 18 then -- Dava Nedeni Diðer
                        select count(*)
                          into v_count
                          from table(v_list)
                         where policy_ref is null;

                        if v_count > 0 then
                            rollback;
                            v_error_msg := 'Poliçe alaný dolu olmalýdýr.';

                            process_result(
                                1, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DETAIL_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                p_process_results
                            );
                            return;
                        end if;
                    end if;

                elsif v_general_info_rec.law_sf_type = 'Z' then

                    if v_general_info_rec.law_type != 18 then -- Dava Nedeni Diðer
                        select count(*)
                          into v_count
                          from table(v_list)
                         where ext_reference is null;

                        if v_count > 0 then
                            rollback;
                            v_error_msg := 'Hayat Dosya No alaný dolu olmalýdýr.';

                            process_result(
                                1, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAW_DETAIL_LIST',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                                p_process_results
                            );
                            return;
                        end if;
                    end if;
                end if;

--                begin
                    alz_lawfile_utils.calc_lawfile_amounts
                    (
                        p_law_file_no, --v_general_info_rec.law_case_type,
                        v_list,
                        v_base_rec
                    );

                select count(1)
                  into v_count
                  from table(v_list)
                 where nvl(law_ba, 0) = 0
                   and case_amount is null
                   and court_decision_amount is null
                   and court_correction_amount is null
                   and authority_amount is null
                   and expertise_amount is null
                   and factura is null;

                if v_count > 0 then
                    rollback;
                    v_error_msg := 'Hasarlý hukuk dosyalarýnda detay satýrlarda BA Hayýr ise; Dava/Ýcra, Karar, Islah, Bilirkiþi, Eksper, Fatura tutarlarýndan biri dolu olmalýdýr.';

                    process_result(
                        88, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAW_DETAIL_LIST',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
                        p_process_results
                    );
                    return;
                end if;

--                exception when others then
--                    rollback;
--                    v_error_msg := 'Dava tutarlarý hesaplanýrken hata oldu: '||substr(SQLERRM, 1, 950);
--
--                    process_result(
--                        3, --p_process_no
--                        0,
--                        9,
--                        -1,
--                        'SAVE_LAW_DETAIL_LIST',
--                        v_error_msg,
--                        v_error_msg,
--                        null,
--                        null,
--                        'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
--                        p_process_results
--                    );
--                    return;
--                end;

                delete from koc_law_bases_detail where law_file_no = p_law_file_no;

                v_base_rec.interest_amount := null;

                --Detay kayýt iþlemleri
                for rec_detail in c_detail loop
                    v_detail_no := v_detail_no + 1;

                    if
                       v_general_info_rec.law_case_type = 'A' and
                       v_general_info_rec.law_file_type = 'HUKUK' and
                       (
                           rec_detail.court_decision_amount is not null or
                           rec_detail.court_correction_amount is not null or
                           rec_detail.authority_amount is not null or
                           rec_detail.expertise_amount is not null or
                           rec_detail.factura is not null
                       )
                   then
                       v_list(v_detail_no).law_ba := 0;
                   end if;

--                    --BA Faiz tipi Döviz kontrolü
--                    if rec_detail.law_ba = 1 and
--                       rec_detail.interest_type = 'D'
--                    then
--                        rec_detail.interest_type := alz_lawfile_utils.find_interest_type(rec_detail.ext_reference, v_general_info_rec.law_case_type);
--                    end if;

                    if rec_detail.court_decision_amount is not null then
                        v_court_decided_amount := rec_detail.court_decision_amount;
                        v_court_decided_amount_swf := rec_detail.court_decision_amount_swf;

                    elsif rec_detail.court_correction_amount is not null then
                        v_court_decided_amount := rec_detail.court_correction_amount;
                        v_court_decided_amount_swf := rec_detail.court_correction_amount_swf;

                    else
                        v_court_decided_amount := null;
                        v_court_decided_amount_swf := null;
                    end if;

                    insert into koc_law_bases_detail
                    (
                        law_file_no,
                        detail_no,
                        claim_id,
                        sf_no,
                        policy_ref,
                        hyt_loss_result_code,
                        hyt_loss_file_year,
                        hyt_loss_file_no,
                        law_type,
                        recourse_amount,
                        swift_code,
                        cover_code,
                        cover_name,
                        cover_amount,
                        cover_amount_swf,
                        case_amount,
                        case_amount_swf,
                        court_correction_amount,
                        court_correction_amount_swf,
                        court_decision_amount,
                        court_decision_amount_swf,
                        court_decided_amount,
                        court_decided_amount_swf,
                        authority_amount,
                        authority_amount_swf,
                        expertise_amount,
                        expertise_amount_swf,
                        factura,
                        factura_swf,
                        law_ba,
                        is_maktu,
                        is_exception,
                        is_inform,
                        is_adjustment,
                        interested_amount,
                        interest_type,
                        interest_begin_date,
                        law_beginning_type,
                        payment_denounce_date,
                        user_name
--                        payment_claim_date
                    )
                    values
                    (
                        p_law_file_no,
                        rec_detail.detail_no,
                        rec_detail.claim_id,
                        rec_detail.sf_no,
                        rec_detail.policy_ref,
                        rec_detail.hyt_loss_result_code,
                        rec_detail.hyt_loss_file_year,
                        rec_detail.hyt_loss_file_no,
                        rec_detail.law_type,
                        rec_detail.recourse_amount,
                        base_swift_code,
                        rec_detail.cover_code,
                        rec_detail.cover_name,
                        rec_detail.cover_amount,
                        rec_detail.cover_amount_swf,
                        rec_detail.case_amount,
                        rec_detail.case_amount_swf,
                        rec_detail.court_correction_amount,
                        rec_detail.court_correction_amount_swf,
                        rec_detail.court_decision_amount,
                        rec_detail.court_decision_amount_swf,
                        v_court_decided_amount,
                        v_court_decided_amount_swf,
                        rec_detail.authority_amount,
                        rec_detail.authority_amount_swf,
                        rec_detail.expertise_amount,
                        rec_detail.expertise_amount_swf,
                        rec_detail.factura,
                        rec_detail.factura_swf,
                        decode(v_list(v_detail_no).law_ba, 0, 'H', 1, 'E', v_list(v_detail_no).law_ba),
                        nvl(rec_detail.is_maktu, 0),
                        nvl(rec_detail.is_exception, 0),
                        nvl(rec_detail.is_inform, 0),
                        nvl(rec_detail.is_adjustment, 0),
                        rec_detail.interest_amount,
                        rec_detail.interest_type,
                        rec_detail.interest_begin_date,
                        rec_detail.law_beginning_type,
                        rec_detail.denounce_date,
                        p_user_name
--                        rec_detail.clm_ticket_date,
                    );

                    if nvl(rec_detail.interest_type, '-') <> 'S' then

                        if v_general_info_rec.file_close_date is null then
                            if v_general_info_rec.law_case_type = 'A' and
                               v_general_info_rec.law_file_type = 'HUKUK'
                            then
                                if rec_detail.interest_type <> 'S' then
                                    v_list(v_detail_no).interest_amount := koc_law_reserve_utils.execute_function( 2, p_law_file_no, rec_detail.detail_no, pme_public.opus_date);
                                end if;
                            elsif v_general_info_rec.law_case_type = 'L' and
                                  v_general_info_rec.law_file_type = 'HUKUK'
                            then
                                if rec_detail.interest_type <> 'S' then
                                    v_list(v_detail_no).interest_amount := koc_law_reserve_utils.execute_function1( 2, p_law_file_no, rec_detail.detail_no, pme_public.opus_date);
                                end if;
                            end if;

                        else
                            begin
                                select amount
                                  into v_list(v_detail_no).interest_amount
                                  from alz_law_reserve_history
                                 where law_file_no = p_law_file_no
                                   and detail_no = rec_detail.detail_no
                                   and accessory_type = 2
                                   and category = 'KAPAMA';
                            exception when others then
                                v_list(v_detail_no).interest_amount := 0;
                            end;
                        end if;

                        if v_list(v_detail_no).interest_amount = 0 then
                            v_list(v_detail_no).interest_amount := null;
                        end if;

                    else
                        v_list(v_detail_no).interest_amount := rec_detail.interest_amount;
                    end if;

                    v_base_rec.interest_amount := nvl(v_base_rec.interest_amount, 0) + nvl(v_list(v_detail_no).interest_amount, 0);

                    if v_general_info_rec.law_case_type = 'A' and
                       v_general_info_rec.law_file_type = 'HUKUK' and
                       v_general_info_rec.law_sf_type in ('H','B') and
                       rec_detail.ext_reference is not null and
                       rec_detail.claim_id is not null and
                       rec_detail.sf_no is not null
                    then
                        select count(claim_id)
                          into v_count
                          from koc_clm_detail
                         where claim_id = rec_detail.claim_id
                           and sf_no = rec_detail.sf_no
                           and private_code_explanation like '%' || p_law_file_no || '%';

                        if v_count = 0 then
                            begin
                                select private_code
                                  into v_private
                                  from koc_clm_detail
                                 where claim_id = rec_detail.claim_id
                                   and sf_no = rec_detail.sf_no;
                            exception when others then
                                v_private := null;
                            end;

                            update koc_clm_detail
                               set private_code = 1,
                                   private_code_explanation = private_code_explanation||' '||'HUKUK NO:'||p_law_file_no,
                                   law_file_no = p_law_file_no
                             where claim_id = rec_detail.claim_id
                               and sf_no = rec_detail.sf_no;

                            select clm_status_id_seq.nextval into v_status_id from dual;

                            insert into clm_status_history
                            (
                                status_id,
                                claim_id,
                                clm_line_id,
                                clm_level,
                                clm_status,
                                csh_date,
                                csh_username,
                                sf_no,
                                ext_user,
                                csh_comment
                            )
                            values
                            (
                                v_status_id,
                                rec_detail.claim_id,
                                1,
                                'SUBFILE',
                                'DZLT',
                                sysdate,
                                p_user_name,
                                rec_detail.sf_no,
                                v_private ,
                                'Hasar dosyasý dava numarasý girildi.'
                            );
                        end if;
                    end if;

/* DETAY MUALLAK
                    --muallak asýl
                    if v_general_info_rec.law_case_type = 'A' and
                       v_general_info_rec.law_file_type = 'HUKUK'
                    then

                        if v_general_info_rec.file_close_date is null then
                            koc_law_reserve_utils.muallak_asil_get_data_lawfile(
                                                p_law_file_no,
                                                rec_detail.detail_no,
                                                v_rec_sort_type,
                                                pme_public.opus_date,
                                                v_law_base_dtl_records);

                             v_list(v_detail_no).reserve_amount := round(koc_law_reserve_utils.execute_function_bordro(1, p_law_file_no, rec_detail.detail_no, pme_public.opus_date, v_law_base_dtl_records), 2);--muallak asýl
                        else
                            begin
                                koc_law_reserve_utils.execute_law_file_closed(
                                    1,
                                    p_law_file_no,
                                    rec_detail.detail_no,
                                     v_list(v_detail_no).reserve_amount,
                                    v_temp_number,
                                    v_temp_number,
                                    v_temp_char,
                                    v_temp_number);

                                v_list(v_detail_no).reserve_amount := round(v_list(v_detail_no).reserve_amount, 2);
                            exception when others then
                                v_list(v_detail_no).reserve_amount := null;
                            end;
                        end if;

                        v_list(v_detail_no).reserve_amount_swf := base_swift_code;
                    end if;
*/
                end loop;
            end if;
        end if;

        p_list := v_list;
        p_base_rec := v_base_rec;

--    exception when others then
--        v_error_msg := 'Hasar Detay bilgileri kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);
--
--        process_result(
--            99, --p_process_no
--            0,
--            9,
--            -1,
--            'SAVE_LAW_DETAIL_LIST',
--            v_error_msg,
--            v_error_msg,
--            null,
--            null,
--            'ALZ_LITIGATION_UTILS.SAVE_LAW_DETAIL_LIST',
--            p_process_results
--        );
--        return;
    end save_law_detail_list;

    --Hukuk bilgileri kaydetme
    procedure save_law_base_info(p_law_file_no in varchar2,
                                 p_user_name in varchar2,
                                 p_rec in out law_base_typ,
                                 p_process_results out customer.process_result_table)
    is
        v_rec law_base_typ := p_rec;
        v_error_msg varchar2(1000);
        v_general_info_rec law_general_info_typ;
        v_court_list law_courts_tbl;
        v_detail_list law_base_detail_tbl;
        v_rec_sort_type koc_law_reserve_utils.rec_sort_type;
        v_law_base_dtl_records koc_law_reserve_utils.koc_law_bases_detail_type;
        v_law_reserve_list law_reserve_detail_tbl;

        v_type varchar2(10);
        v_opus_date date := pme_public.opus_date;
        v_tariff_type number := 3; -- Sadece bu tip kullanýlýyor
        v_cover_swift_code varchar2(3);
        v_date_parity date := sysdate;
        v_count number;
        v_court_correction_sum number;
        v_court_decision_sum number;
        v_factura_sum number;
        v_temp_number number;
        v_temp_char varchar2(20);
        v_court_decided_amount number;
        v_court_decided_amount_swf varchar2(3);

    begin

        v_general_info_rec := get_lawfile_general_info(p_law_file_no);
        v_detail_list := get_law_detail_list(p_law_file_no);
        v_court_list := get_court_details(p_law_file_no);

        if v_rec is null then
            rollback;
            v_error_msg := 'Kaydedilecek Hukuk Bilgileri boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAW_BASE_INFO',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAW_BASE_INFO',
                p_process_results
            );
            return;
        end if;

        -- Zorunlu alan kontrolleri

        --Giriþ Güncelleme Kontrolü
        if p_law_file_no is null then
            v_type := 'INSERT';
        else
            v_type := 'UPDATE';
        end if;

        if v_general_info_rec.law_file_type = 'HUKUK' and
           (v_detail_list is null or v_detail_list.count = 0)
        then
            --Faiz tarihi kontrolü ve faiz tipi
            if v_rec.interest_begin_date is null or
               v_rec.interest_type is null
            then
                rollback;
                v_error_msg := 'Faiz hesabý yapýlabilmesi için Faiz baþlangýç tarihi ve Faiz tipi girilmelidir.';

                process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_BASE_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_BASE_INFO',
                    p_process_results
                );
                return;
            end if;

            --Sabit Faiz tipi kontrolü
            if v_rec.interest_type = 'S' and v_rec.interest_amount is null then
                rollback;
                v_error_msg := 'Hukuk Faiz tutarý, "Sabit Faiz"  seçtiðiniz için  boþ  geçilemez.';

                process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_BASE_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_BASE_INFO',
                    p_process_results
                );
                return;
            end if;

            if v_general_info_rec.law_case_type = 'A' then

                if v_rec.cover_amount_swf is null then
                    v_rec.cover_amount_swf := base_swift_code;
                end if;

                --aleyhte de BA = E ise faiz tipi döviz seçemez, bu durumda default 'Y' set et interest_type'a
                if v_rec.law_ba = 1 and v_rec.interest_type = 'D' then
                    v_rec.interest_type := 'Y';
                end if;
            end if;
        end if;

        if v_detail_list is not null and v_detail_list.count > 0 then
            select sum(nvl(court_correction_amount, 0) * nvl(koc_curr_utils.retrieve_effective_parity(court_correction_amount_swf, v_rec.court_correction_amount_swf, v_date_parity, 36),0)) as court_correction_sum,
                   sum(nvl(court_decision_amount, 0) * nvl(koc_curr_utils.retrieve_effective_parity(court_decision_amount_swf, v_rec.court_decision_amount_swf, v_date_parity, 36),0)) as court_decision_sum,
                   sum(nvl(factura, 0) * nvl(koc_curr_utils.retrieve_effective_parity(factura_swf, v_rec.factura_swf, v_date_parity, 36),0)) as factura_sum
              into v_court_correction_sum,
                   v_court_decision_sum,
                   v_factura_sum
              from table(v_detail_list);


            if v_court_correction_sum != nvl(v_rec.court_correction_amount, 0)then
                v_error_msg := 'Islah tutarý hatalý.';

            elsif v_court_decision_sum != nvl(v_rec.court_decision_amount, 0) then
                v_error_msg := 'Karar tutarý hatalý.';

            elsif v_factura_sum != nvl(v_rec.factura, 0) then
                v_error_msg := 'Fatura tutarý hatalý.';

            end if;

            if v_error_msg is not null then
                rollback;
                process_result(
                    90, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAW_BASE_INFO',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAW_BASE_INFO',
                    p_process_results
                );
                return;
            end if;
        end if;

        --SWIFT_CODE_CHECK
        if v_rec.case_amount is not null then
            if v_rec.case_amount_swf is null then
                v_rec.case_amount_swf := base_swift_code;
            end if;
        else
            v_rec.case_amount_swf := null;
        end if;

        if v_rec.authority_amount is not null then
            if v_rec.authority_amount_swf is null then
                v_rec.authority_amount_swf := base_swift_code;
            end if;
        else
            v_rec.authority_amount_swf := null;
        end if;

        if v_rec.expertise_amount is not null then
            if v_rec.expertise_amount_swf is null then
                v_rec.expertise_amount_swf := base_swift_code;
            end if;
        else
            v_rec.expertise_amount_swf := null;
        end if;

        if v_rec.factura is not null then
            if v_rec.factura_swf is null then
                v_rec.factura_swf := base_swift_code;
            end if;
        else
            v_rec.factura_swf := null;
        end if;

        if v_rec.court_correction_amount is not null then
            if v_rec.court_correction_amount_swf is null then
                v_rec.court_correction_amount_swf := base_swift_code;
            end if;

            v_court_decided_amount := v_rec.court_correction_amount;
            v_court_decided_amount_swf := v_rec.court_correction_amount_swf;
        else
            v_rec.court_correction_amount_swf := null;
        end if;

        if v_rec.court_decision_amount is not null then
            if v_rec.court_decision_amount_swf is null then
                v_rec.court_decision_amount_swf := base_swift_code;
            end if;

            v_court_decided_amount := v_rec.court_decision_amount;
            v_court_decided_amount_swf := v_rec.court_decision_amount_swf;
        else
            v_rec.court_decision_amount_swf := null;
        end if;

        if v_rec.cover_amount is not null then
            if v_rec.cover_amount_swf is null then
                v_rec.cover_amount_swf := base_swift_code;
            end if;
        end if;

        --update_law_bases'den
        if v_rec.factura = 0 then
            v_rec.factura := null;
            v_rec.factura_swf := null;
        end if;

        update koc_law_bases
           set case_amount = v_rec.case_amount,
               case_amount_swf = v_rec.case_amount_swf,
               cover_amount = v_rec.cover_amount,
               cover_amount_swf = v_rec.cover_amount_swf,
               payment_denounce_date = v_rec.denounce_date,
               interest_type = v_rec.interest_type,
               interest_begin_date = v_rec.interest_begin_date,
               interested_amount = v_rec.interest_amount,
               lawyer_payment = v_rec.lawyer_payment,
               court_revenue = v_rec.court_revenue,
               lawyer_court = v_rec.lawyer_court,
               lawyer_foreclosure = v_rec.lawyer_foreclosure,
               court_decision_amount = v_rec.court_decision_amount,
               court_decision_amount_swf = v_rec.court_decision_amount_swf,
               court_decided_amount = v_court_decided_amount,
               court_decided_amount_swf = v_court_decided_amount_swf,
               court_correction_amount = v_rec.court_correction_amount,
               court_correction_amount_swf = v_rec.court_correction_amount_swf,
               authority_amount = v_rec.authority_amount,
               authority_amount_swf = v_rec.authority_amount_swf,
               expertise_amount = v_rec.expertise_amount,
               expertise_amount_swf = v_rec.expertise_amount_swf,
               factura = v_rec.factura,
               factura_swf = v_rec.factura_swf,
               law_beginning_type = v_rec.law_beginning_type,
               law_ba = decode(nvl(v_rec.law_ba, 0), 0, 'H', 'E'),
               is_important_case = v_rec.is_important_case,
               is_maktu = nvl(v_rec.is_maktu, 0),
               is_exception = nvl(v_rec.is_exception, 0),
               is_inform = nvl(v_rec.is_inform, 0),
               tariff_type = v_tariff_type,
               user_name = p_user_name
         where law_file_no = p_law_file_no;

        alz_lawfile_utils.calc_interest_amount(p_law_file_no, v_rec);

        update koc_law_bases
           set interested_amount = v_rec.interest_amount,
               court_revenue = v_rec.court_revenue,
               lawyer_payment = v_rec.lawyer_payment
         where law_file_no = p_law_file_no;

        if v_general_info_rec.law_case_type = 'A' and
        v_general_info_rec.law_file_type = 'HUKUK'
        then

            if v_general_info_rec.file_close_date is null then
                koc_law_reserve_utils.muallak_asil_get_data_lawfile(
                                    p_law_file_no,
                                    null,
                                    v_rec_sort_type,
                                    pme_public.opus_date,
                                    v_law_base_dtl_records);

                v_rec.reserve_amount := round(koc_law_reserve_utils.execute_function_bordro(1, p_law_file_no, null, pme_public.opus_date, v_law_base_dtl_records), 2);--muallak asýl

            else
                begin
                    koc_law_reserve_utils.execute_law_file_closed(
                        1,
                        p_law_file_no,
                        null,
                        v_rec.reserve_amount,
                        v_temp_number,
                        v_temp_number,
                        v_temp_char,
                        v_temp_number);

                    v_rec.reserve_amount := round(v_rec.reserve_amount, 2);
                exception when others then
                    v_rec.reserve_amount := null;
                end;
            end if;

            v_rec.reserve_amount_swf := base_swift_code;

            v_law_reserve_list := get_reserve_detail_bulk(p_law_file_no, null, 'HUKUK');

            if v_law_reserve_list is not null and
               v_law_reserve_list.count > 0
            then
                begin
                    select sum(nvl(current_reserve_distribution, 0))
                      into v_rec.total_reserve_amount
                      from table(v_law_reserve_list);

                    v_rec.total_reserve_amount_swf := base_swift_code;
                exception when others then
                    v_rec.total_reserve_amount := null;
                    v_rec.total_reserve_amount_swf := null;
                end;
            end if;
        end if;

        p_rec := v_rec;

--    exception when others then
--        v_error_msg := 'Hukuk bilgileri kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);
--
--        process_result(
--            99, --p_process_no
--            0,
--            9,
--            -1,
--            'SAVE_LAW_BASE_INFO',
--            v_error_msg,
--            v_error_msg,
--            null,
--            null,
--            'ALZ_LITIGATION_UTILS.SAVE_LAW_BASE_INFO',
--            p_process_results
--        );
--        return;
    end save_law_base_info;

    procedure save_bre_info(p_law_file_no in varchar2, p_user_name in varchar2, p_rec in law_file_all_typ)
    is
    pragma autonomous_transaction;

        v_rel_law_sf_type varchar2(30);
        v_rel_law_sf_group varchar2(30);
        v_rel_in_lawyer varchar2(30);
        v_rel_in_lawyer_group varchar2(30);
        v_count number;

    begin

        if p_rec.general_info_rec is not null and
           p_rec.base_info_rec is not null
        then
            if p_rec.general_info_rec.related_law_file_no is not null then
                begin
                    select law_sf_type,
                           law_sf_group,
                           in_lawyer,
                           in_lawyer_group
                      into v_rel_law_sf_type,
                           v_rel_law_sf_group,
                           v_rel_in_lawyer,
                           v_rel_in_lawyer_group
                      from koc_law_bases
                     where law_file_no = p_rec.general_info_rec.related_law_file_no;

                exception when others then
                    null;
                end;

                if v_rel_in_lawyer is not null then
                    select count(1)
                      into v_count
                      from alz_lawyers al,
                           alz_law_ticket_user_status tus
                     where al.id = v_rel_in_lawyer
                       and al.aznet_user = tus.user_id
                       and tus.status = 'IZINDE'
                       and sysdate between validity_start_date and nvl(validity_end_date, sysdate);

                    if v_count > 0 then
                        v_rel_in_lawyer := null;
                    end if;
                end if;
            end if;


            insert into alz_law_base_bre_rel
            (
                law_file_no,
                department,
                law_case_type,
                law_file_type,
                is_rucu,
                law_sf_type,
                law_sf_group,
                law_type,
                status_id,
                case_amount,
                case_amount_swf,
                cover_amount,
                cover_amount_swf,
                authority_amount,
                authority_amount_swf,
                court_correction_amount,
                court_correction_amount_swf,
                court_decision_amount,
                court_decision_amount_swf,
                reserve_amount,
                reserve_amount_swf,
                total_reserve_amount,
                total_reserve_amount_swf,
                is_maktu,
                law_ba,
                related_law_file_no,
                related_sf_type,
                related_sf_group,
                related_in_lawyer,
                related_in_lawyer_group,
                creation_date,
                created_by
            )
            values
            (
                p_law_file_no,
                decode(p_rec.general_info_rec.supplier_type, 'HM', 'KDT', p_rec.general_info_rec.supplier_type),
                p_rec.general_info_rec.law_case_type,
                case
                    when p_rec.general_info_rec.law_file_type = 'CEZA' then
                        'C'
                    when p_rec.general_info_rec.law_file_type = 'HUKUK' then
                        case
                            when p_rec.general_info_rec.law_case_type = 'A' then
                                'A'
                            else
                                'L'
                        end
                    when p_rec.general_info_rec.law_file_type = 'TESPIT' then
                        case
                            when p_rec.general_info_rec.law_case_type = 'A' then
                                'TA'
                            else
                                'TL'
                        end
                end,
                nvl(p_rec.general_info_rec.is_rucu, 0),
                p_rec.general_info_rec.law_sf_type,
                p_rec.general_info_rec.law_sf_group,
                p_rec.general_info_rec.law_type,
                p_rec.general_info_rec.status_id,
                p_rec.base_info_rec.case_amount,
                p_rec.base_info_rec.case_amount_swf,
                p_rec.base_info_rec.cover_amount,
                p_rec.base_info_rec.cover_amount_swf,
                p_rec.base_info_rec.authority_amount,
                p_rec.base_info_rec.authority_amount_swf,
                p_rec.base_info_rec.court_correction_amount,
                p_rec.base_info_rec.court_correction_amount_swf,
                p_rec.base_info_rec.court_decision_amount,
                p_rec.base_info_rec.court_decision_amount_swf,
                null, --reserve_amount,
                'TL', --reserve_amount_swf,
                null, --total_reserve_amount,
                'TL', --total_reserve_amount_swf,
                nvl(p_rec.base_info_rec.is_maktu, 0), --is_maktu,
                nvl(p_rec.base_info_rec.law_ba, 0),
                p_rec.general_info_rec.related_law_file_no,
                v_rel_law_sf_type,
                v_rel_law_sf_group,
                v_rel_in_lawyer,
                v_rel_in_lawyer_group,
                sysdate,
                p_user_name
            );

            commit;
        end if;

        if p_rec.detail_list is not null and p_rec.detail_list.count > 0 then
            insert into alz_law_base_detail_bre_rel
            select p_law_file_no,
                   detail_no,
                   claim_id,
                   sf_no,
                   law_type,
                   cause_type,
                   sysdate,
                   p_user_name
                  from
                  (
                    select lbd.detail_no,
                           lbd.claim_id,
                           lbd.sf_no,
                           lbd.law_type,
                           c_loss.maddi_bedeni as cause_type
                      from table(p_rec.detail_list) lbd,
                           clm_pol_bases cpb,
                           koc_clm_subfile_cause1_rel c1,
                           koc_cc_loss_cause1 c_loss
                     where lbd.claim_id = cpb.claim_id
                       and lbd.claim_id = c1.claim_id
                       and lbd.sf_no = c1.sf_no
                       and cancel_date is null
                       and c1.cause1_code = c_loss.cause1_code
                       and cpb.date_of_loss < YENI_HASAR_KOD_BAS_TRH
                       and c1.cause1_code < 10000
                  union
                    select lbd.detail_no,
                           lbd.claim_id,
                           lbd.sf_no,
                           lbd.law_type,
                           c_loss.maddi_bedeni as cause_type
                      from table(p_rec.detail_list) lbd,
                           clm_pol_bases cpb,
                           koc_clm_subfile_cause1_rel c1,
                           koc_clm_subfile_cause2_rel c2,
                           koc_clm_subfile_cause3_rel c3,
                           koc_clm_cause_rel c_loss
                     where lbd.claim_id = cpb.claim_id
                       and lbd.claim_id = c1.claim_id
                       and lbd.sf_no = c1.sf_no
                       and c1.cancel_date is null
                       and lbd.claim_id = c2.claim_id
                       and lbd.sf_no = c2.sf_no
                       and c2.cancel_date is null
                       and lbd.claim_id = c3.claim_id
                       and lbd.sf_no = c3.sf_no
                       and c3.cancel_date is null
                       and cpb.date_of_loss >= YENI_HASAR_KOD_BAS_TRH
                       and to_number(c1.cause1_code) >= 10000
                       and to_number(c2.cause2_code) >= 10000
                       and to_number(c3.cause3_code) >= 10000
                       and c1.cause1_code = c_loss.cause1_code
                       and c2.cause2_code = c_loss.cause2_code
                       and c3.cause3_code = c_loss.cause3_code
                     order by detail_no
                  );
        end if;

        commit;

    end save_bre_info;

    procedure delete_bre_info(p_law_file_no in varchar2)
    is
    pragma autonomous_transaction;

    begin

        update alz_law_base_bre_rel
           set law_file_no = '-'||law_file_no
         where law_file_no = p_law_file_no;

        update alz_law_base_detail_bre_rel
           set law_file_no = '-'||law_file_no
         where law_file_no = p_law_file_no;

        commit;

    end delete_bre_info;

    procedure save_lawfile(p_law_file_no in out varchar2,
                           p_user_name in varchar2,
                           p_rec in out law_file_all_typ,
                           p_simple_questions in out customer.simple_question_table,
                           p_process_results out customer.process_result_table,
                           p_description out varchar2 ,
                           p_status out number  )
    is
        v_rec law_file_all_typ := p_rec;
        v_old_rec law_file_all_typ;
        v_old_list law_base_detail_tbl := law_base_detail_tbl();

        v_error_msg varchar2(1000);
        v_type varchar2(10);
        v_status number;
        v_description varchar2(1000);
        v_count number;
        v_status_closed_old number;
        v_status_closed_new number;
        v_date_parity date := sysdate;
        v_tariff_type number := 3;
        v_lawyer_amount number;
        v_min_lawyer number;
        v_opus_date date := pme_public.opus_date;
        v_rec_sort_type koc_law_reserve_utils.rec_sort_type;
        v_rec_sort koc_law_reserve_utils.rec_sort_type;
        v_law_base_dtl_records koc_law_reserve_utils.koc_law_bases_detail_type;
        v_list law_base_detail_tbl := law_base_detail_tbl();
        v_qst_cnt number;

        p_create_ticket_id number;
        v_auth_count number;
        v_authed number:=0;
        v_approve_lawyer varchar2(100);

        v_cre_bank number;
        v_cre_subs number;
        v_corres_bank number;
        v_corres_subs number;
        v_account_no varchar2(100);
        v_trans number;
        v_court_revenue number;
        v_stopaj number;
        v_kdv number;
        v_lawyer_user varchar2(30);

        v_clm_status varchar2(10);
        v_ext_reference varchar2(30);
        v_status_id number;

        v_ext_control number;
        v_tp_control number;
        v_law_note law_note_typ;
        v_law_count number;
        v_name varchar2(100);

        cursor c_month_control(p_file_close_date date) is
          select status_code
            from koc_process_close
           where p_file_close_date between process_date and close_date
             and agent_int_id =   12354
             and process_type = 'CLAM'
             and branch_id    = 1; -- oto kazayý gösteriyor.

        v_close_month number := 0;
        i number := 0;

        cursor c_detail is
        select nvl(detail_no, rownum) as row_detail_no,
               a.*
          from table(v_rec.detail_list) a
         order by nvl(detail_no, rownum);

        cursor c_ticket(p_ticket_id number) is
        select lawfile_no,
               uyap_dosya_id,
               source
          from alz_law_ticket
         where ticket_id = p_ticket_id;

        v_law_file_no varchar2(30);
        v_uyap_id number;
        v_source varchar2(30);
        v_bre_control varchar2(5);
        v_in_lawyer_group varchar2(30);
        v_law_sf_group varchar2(30);
        v_auth_ticket_type varchar2(20) := 'OTORIZASYON';--'OTORIZASYON' ;
        v_tmp_auth_check number :=1 ;
        v_bre_unique_key varchar2(30);
        err_code      number;
        err_msg       varchar2(1250);
        err_msg_start number;
        err_msg_end   number;
        v_subject  varchar2(100);
        v_error_count number;
        v_process_results customer.process_result_table;

    begin

        --Simple Question kontrolü
        if p_simple_questions is not null then

            select count(1)
              into v_count
              from table(p_simple_questions)
             where nvl(questionanswer, '-1') = '0';

            if v_count > 0 then
                rollback;
                if v_type = 'INSERT' then
                    p_law_file_no := null;
                end if;

                v_error_msg := 'Kayýt iþlemi isteðiniz üzere iptal edilmiþtir.';

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;
        end if;

        if p_user_name is null then
            v_error_msg := 'Kullanýcý bilgisi boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if v_rec is null then
            v_error_msg := 'Dosya bilgileri boþ olamaz.';

            process_result(
                1, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if v_rec.general_info_rec is null then
            v_error_msg := 'Künye bilgileri boþ olamaz.';

            process_result(
                2, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if v_rec.court_list is null then
            rollback;
            v_error_msg := 'Mahkeme bilgileri boþ olamaz.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if v_rec.party_list is null then
            v_error_msg := 'Taraf bilgileri boþ olamaz.';

            process_result(
                4, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if v_rec.general_info_rec.file_open_date is null then
            v_error_msg := 'Dosya açýlýþ tarihi boþ olamaz.';

            process_result(
                6, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if nvl(v_rec.general_info_rec.in_lawyer_id, 0) > 0 and
           v_rec.general_info_rec.in_lawyer_group is null
        then
            rollback;
            v_error_msg := 'Dahili avukat grubu boþ olamaz.';

            process_result(
                90, --p_process_no
                0,
                9,
                -1,
                'SAVE_GENERAL_INFO',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                p_process_results
            );
            return;
        end if;

        --Dosya statü ve dosya kapanýþ tarihi kontrol
        if v_rec.general_info_rec.file_close_date is not null then
            begin
                select nvl(is_closed, 0)
                  into v_status_closed_new
                  from koc_law_status_ref
                 where status_id = v_rec.general_info_rec.status_id;
            exception when others then
                v_status_closed_new := 0;
            end;

            if v_status_closed_new = 0 then
                v_error_msg := 'Kapalý olmayan dosya durumuna Dosya Kapanýþ Tarihi giremezsiniz.';

                process_result(
                    6, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;
        end if;

        --Giriþ Güncelleme Kontrolü
        if p_law_file_no is null then
            v_type := 'INSERT';
        else
            v_type := 'UPDATE';
        end if;

        --Ceza Dosyasý kosya kapama kontrolü
        if  v_rec.general_info_rec.file_close_date is not null and
            v_rec.general_info_rec.law_file_type = 'CEZA'
        then

            select count(1)
              into v_count
              from table(v_rec.party_list) a
             where a.prosecution_status is null;

            if v_count > 0 then
                rollback;
                v_error_msg := 'Ceza dosyalarýnda dosya kapanýrken Beraat-Mahkumiyet bilgisini seçmek zorundasýnýz!';

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;
        end if;

        --Harici Avukat Kontrolü
        select nvl(sum(decode(role_code,
                                'LMRHA', 1,
                                0
                      )
                   ),
               0) as ext_control
          into v_ext_control
          from koc_auth_user_role_rel
         where username = p_user_name;

        if v_type = 'INSERT' then
            --Harici Avukat Dosya Açma Kontrolleri
            if v_ext_control > 0
            then

                select count(1)
                  into v_count
                  from table(v_rec.court_list)
                 where court_enf_type = 'I'
                   and not exists
                   (
                    select 1
                      from table(v_rec.court_list)
                     where court_enf_type = 'M'
                   );

                if v_rec.general_info_rec.witness_count = -1 then
                    v_rec.general_info_rec.witness_count := 3;
                end if;

                if v_count > 0 then
                    if nvl(v_rec.general_info_rec.authority_count, 0) > 0 then
                        v_error_msg := 'Ýcra seçiminde Bilirkiþi Sayýsý giriþi yapýlamaz.';

                    elsif nvl(v_rec.general_info_rec.witness_count, 0) > 0 then
                        v_error_msg := 'Ýcra seçiminde Tanýk Sayýsý giriþi yapýlamaz.';

                    elsif nvl(v_rec.general_info_rec.is_exploration, 0) > 0 then
                        v_error_msg := 'Ýcra seçiminde Keþif seçimi yapýlamaz.';
                    end if;

                elsif nvl(v_rec.general_info_rec.authority_count, 0) > 3 then
                    v_error_msg := 'Bilirkiþi sayýsý 3ten fazla olamaz.';
                end if;

                if v_error_msg is not null then
                    process_result(
                        6, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;
                end if;
            end if;

            if p_rec.general_info_rec.ticket_id is not null then
                select count(*)
                  into v_count
                  from koc_law_bases
                 where ticket_id = p_rec.general_info_rec.ticket_id;

                if v_count > 0 then
                    v_error_msg := p_rec.general_info_rec.ticket_id||' nolu iþ için önceden '||p_law_file_no||' nolu hukuk dosyasý oluþturulduðu için yeni dosya açamazsýnýz.';

                    process_result(
                        100, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;
                end if;
            end if;

        elsif v_type = 'UPDATE' then
            -- Otorizasyon sadece iþ üzerinden yapýlabildiði için koyuldu
            v_tmp_auth_check := v_auth_from_ticket;

            get_lawfile(p_law_file_no, p_user_name, null, v_status, v_description, v_old_rec, p_process_results);

            v_auth_from_ticket :=  v_tmp_auth_check;

            begin
                v_count := p_process_results.count;
            exception when others then
                v_count := 0;
            end;

            if v_count > 0 or v_old_rec is null then
                if p_process_results(1).type = -1 then
                    v_error_msg := p_law_file_no||' nolu dosya bilgileri bulunamadý.';

                    process_result(
                        7, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;
                end if;
            end if;

            --Hukuk dosyasý baþka bir kullanýcý tarafýndan güncellendi mi kontrolü
            if nvl(v_old_rec.general_info_rec.law_log_no, -1) <> nvl(v_rec.general_info_rec.law_log_no, 0) then
                begin
                    select case
                            when c.part_id is null then
                                a.user_name
                            when c.surname is null then
                                c.name
                           else
                                c.first_name || ' ' || c.surname
                           end display_name
                      into v_name
                      from alz_law_bases_log a,
                           web_sec_system_users b,
                           cp_partners c
                     where a.user_name = b.user_name
                       and b.customer_partner_id = c.part_id(+)
                       and a.law_file_no = p_law_file_no
                       and a.law_log_no = v_old_rec.general_info_rec.law_log_no;

                exception when others then
                    begin
                        select user_name
                          into v_name
                          from alz_law_bases_log
                         where law_file_no = p_law_file_no
                           and law_log_no = v_old_rec.general_info_rec.law_log_no;
                    exception when others then
                        v_name := null;
                    end;
                end;

                v_error_msg := 'Deðiþiklik yapmak istediðiniz dosya þu anda baþka bir kullanýcý tarafýndan deðiþtirildiðinden ('||v_name||') kayýt iþlemi gerçekleþtirilememektedir.';

                get_lawfile(
                    p_law_file_no,
                    p_user_name,
                    p_rec.general_info_rec.ticket_id,
                    p_status,
                    p_description,
                    p_rec,
                    p_process_results
                );

                process_result(
                    8, --p_process_no
                    0,
                    9,
                    100,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;

            --Dosya Tipi Güncelleme Kontrolleri
            select count(1)
              into v_count
              from koc_law_sf_type old_sf,
                   koc_law_sf_type new_sf
             where old_sf.law_sf_type = v_old_rec.general_info_rec.law_sf_type
               and new_sf.law_sf_type = v_rec.general_info_rec.law_sf_type
               and nvl(old_sf.has_claim, 'N') = 'Y'
               and nvl(old_sf.has_claim, 'N') <> nvl(new_sf.has_claim, 'N');

            if v_count > 0 then
                v_error_msg := 'Hasarlý dosya tipi hasarsýz dosya tipine güncellenemez.';
            end if;

            if v_old_rec.general_info_rec.law_sf_type = 'Z' and
               v_rec.general_info_rec.law_sf_type != 'Z'
            then
                v_error_msg := 'Hayat Dosya Tipini güncelleyemezsiniz.';
            end if;

            if v_old_rec.general_info_rec.law_sf_type = 'S' and
               v_rec.general_info_rec.law_sf_type != 'S'
            then
                v_error_msg := 'Saðlýk Dosya Tipini güncelleyemezsiniz.';
            end if;

            if v_error_msg is not null then
                process_result(
                    8, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;

            --ay_kapalý kontrolü
            if nvl(to_char(v_old_rec.general_info_rec.file_close_date, 'DD/MM/YYYY'), '01/01/1900') <> nvl(to_char(v_rec.general_info_rec.file_close_date, 'DD/MM/YYYY'), '01/01/1900')
            then
                if trunc(nvl(v_rec.general_info_rec.file_close_date, v_rec.general_info_rec.file_open_date)) < trunc(v_rec.general_info_rec.file_open_date) then
                    v_error_msg := 'Dosya açýlýþ tarihinden önce bir tarihe dosyaya kapatamazsýnýz.';

                elsif trunc(nvl(v_rec.general_info_rec.file_close_date, sysdate)) > trunc(sysdate) then
                    v_error_msg := 'Bugünden ileri bir tarihe dosyaya kapatamazsýnýz.';
                end if;

                if v_error_msg is not null then
                    process_result(
                        7, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;
                end if;

                open c_month_control(v_rec.general_info_rec.file_close_date);
                fetch c_month_control into v_status_id;

                if c_month_control%FOUND then
                    if v_status_id != 1 then
                        v_close_month := 1;
                    end if;

                else
                    v_close_month := 1;
                end if;
                close c_month_control;

                if v_close_month = 1 then
                    v_error_msg := 'Bu ay kapanmýþtýr, dosya kapama iþlemi yapamazsýnýz.';

                    process_result(
                        7, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;
                end if;
            end if;

            --Dosya Durum kontrolleri
            begin
                select nvl(is_closed, 0)
                  into v_status_closed_old
                  from koc_law_status_ref
                 where status_id = v_old_rec.general_info_rec.status_id;

            exception when others then
                v_status_closed_old := 0;
            end;

            --Kapalý dosya güncellemeleri
            if v_status_closed_old = 1 and
               nvl(v_old_rec.general_info_rec.status_id, 0) <> nvl(v_rec.general_info_rec.status_id, 0)
            then
                begin
                    select nvl(is_closed, 0)
                      into v_status_closed_new
                      from koc_law_status_ref
                     where status_id = v_rec.general_info_rec.status_id;

                exception when others then
                    v_status_closed_new := 0;
                end;

                if v_status_closed_old = 1 and
                   v_status_closed_new = 0
                then
                    rollback;
                    v_rec := v_old_rec;
                    v_error_msg := 'Kapalý bir dosyada açýk durum kodu seçemezsiniz!';

                    process_result(
                        91, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );

                    return;
                end if;

                update koc_law_bases
                   set status_id = v_rec.general_info_rec.status_id
                 where law_file_no = p_law_file_no;

                save_lawfile_log(p_law_file_no,
                                 p_process_results);

                begin
                    select law_log_no
                      into v_rec.general_info_rec.law_log_no
                      from koc_law_bases
                     where law_file_no = p_law_file_no;
                exception when others then
                    v_rec.general_info_rec.law_log_no  := null;
                end;

                if p_process_results is not null then
                    rollback;
                    p_rec := v_old_rec;

                    return;
                end if;

                v_error_msg := 'Dosya durum kodu güncellenmiþtir.';

                process_result(
                    101, --p_process_no
                    0,
                    9,
                    100,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );

                v_old_rec.general_info_rec.status_id := v_rec.general_info_rec.status_id;
                v_old_rec.general_info_rec.law_log_no := v_rec.general_info_rec.law_log_no;
                v_rec := v_old_rec;
                return;
            end if;

            if nvl(v_status_closed_old, 0) = 1
                or v_old_rec.general_info_rec.file_close_date is not null
            then
                rollback;
                v_error_msg := 'Kapalý bir dosyada güncelleme yapamazsýnýz.';

                process_result(
                    91, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );

                return;
            end if;

            --Harici avukat deðiþikliði kontrolü
            if nvl( v_rec.general_info_rec.lawyer_id,0 ) <> nvl( v_old_rec.general_info_rec.lawyer_id,0 ) and auth_check_base_record(p_law_file_no) > 0  then
                v_error_msg := 'Üzerinde otorizasyon olan dosyanýn harici avukatýný deðiþtiremezsiniz. Otorizasyon iþi üzerinden otorizasyonlara onay veya red iþlemi uygulayabilirsiniz.';
                declare
                    v_auth_lawyer_name varchar2(100);
                    v_auth_ticket_id number;
                begin
                    select distinct ltp.ticket_id , nvl( al.name_surname , ltp.owner )
                    into v_auth_ticket_id , v_auth_lawyer_name
                    from alz_lawyers al,
                    alz_law_ticket_process ltp,
                    alz_law_auth la
                    where ltp.owner = al.aznet_user(+)
                    and ltp.ticket_id = la.ticket_id
                    and la.is_approved = 0
                    and la.is_cancelled = 0
                    and la.lawfile_no = p_law_file_no ;

                    v_error_msg := v_error_msg||' Ýlgili otorizasyon iþi '||v_auth_ticket_id||' numara ile '||v_auth_lawyer_name||' üzerindedir.' ;
                exception when others then
                    null;
                end;
                process_result(
                    7, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;

            --Harici avukat deðiþikliðinde iþ düzenlemeleri
            if nvl(v_old_rec.general_info_rec.lawyer_id, 0) <> 0 and
               v_rec.general_info_rec.lawyer_id is null
            then
                for rec_ticket in
                                (
                                    select lt.*
                                      from alz_law_ticket lt,
                                           alz_law_ticket_process ltp,
                                           alz_law_group_user_rel lgu
                                     where lt.source = 'DOSYA'
                                       and lt.lawfile_no = p_law_file_no
                                       and lt.ticket_id = ltp.ticket_id
                                       and ltp.close_date is null
                                       and ltp.status = 'OPEN'
                                       and lgu.group_code = 'LMHA' --Harici Avukatlar
                                       and ltp.owner = lgu.username
                                 )
                loop

                    alz_law_ticket_process_utils.update_ticket_status(rec_ticket.ticket_id, 'CANCELLED', p_user_name, p_process_results);

                    if p_process_results is not null then
                        rollback;
                        return;
                    end if;
                end loop;

            elsif nvl( v_rec.general_info_rec.lawyer_id,0) <> 0 and nvl( v_old_rec.general_info_rec.lawyer_id,0) <> 0 and v_rec.general_info_rec.lawyer_id <> v_old_rec.general_info_rec.lawyer_id then
                declare
                    v_old_lawyer varchar2(100);
                    v_new_lawyer varchar2(100);
                begin

                    begin
                        select user_name
                          into v_new_lawyer
                          from web_sec_system_users
                         where customer_partner_id = v_rec.general_info_rec.lawyer_id;

                        select user_name
                        into v_old_lawyer
                        from web_sec_system_users
                        where customer_partner_id = v_old_rec.general_info_rec.lawyer_id;
                    exception when others then
                        rollback;
                        v_error_msg := 'Harici avukat( '||v_rec.general_info_rec.lawyer_name||') kullanýcýsý bulunamamýþtýr.';

                        process_result(
                            29, --p_process_no
                            2,
                            9,
                            -1,
                            'SEND_APPROVE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                            p_process_results
                        );
                        return;
                    end;

                    for x_rec in ( select distinct lt.ticket_id from alz_law_ticket lt, alz_law_ticket_process ltp where lt.ticket_id = ltp.ticket_id and lt.source not in ('DOSYA','OTORIZASYON') and ltp.status not in ('CLOSED','CANCELLED') and ltp.owner = v_old_lawyer and lt.lawfile_no = p_law_file_no )
                    loop
                        alz_law_ticket_process_utils.REDIRECT_TICKET( p_assigned_group => 'LMHA',
                                                                                  p_assigned_user=> v_new_lawyer,
                                                                                  p_redirector  => p_user_name ,
                                                                                  p_deadline   => null ,
                                                                                  p_subject   => 'Harici avukat güncellenmesi sebebiyle iþ atamasý.' ,
                                                                                  p_redirect_reason_code  => 1,
                                                                                  p_ticket_id    => x_rec.ticket_id,
                                                                                  p_process_results   => p_process_results );
                        begin
                            v_count := p_process_results.count;
                        exception when others then
                            v_count := 0;
                        end;
                        if v_count > 0 then
                            if p_process_results(1).type = -1 then
                                rollback;
                                v_error_msg := 'Harici avukatýn iþleri yonlendirilirken sorun oluþtu.' ;
                                process_result(
                                            31,
                                            0,
                                            9,
                                            -1,
                                            'SAVE_LAWFILE',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                            p_process_results
                                        );
                                return;
                            end if;
                        end if;
                    end loop;
                end;
            end if;

            -- dahili avukat deðiþtirildiði zaman üzerindeki iþlerin yeniden atanmasýný saðlayacak kýsým law_file_all_typ
            if nvl( v_old_rec.general_info_rec.in_lawyer_id,0) <> 0 and nvl( v_rec.general_info_rec.in_lawyer_id,0) <> 0 and v_rec.general_info_rec.in_lawyer_id <> v_old_rec.general_info_rec.in_lawyer_id then
                declare
                    v_old_lawyer varchar2(100);
                    v_new_group varchar2(100);
                    v_new_lawyer varchar2(100);
                    v_new_lawyer_status varchar2(100);
                    v_lawyer_bre_user varchar2(100);
                    v_lawyer_bre_message varchar2(1000);
                begin

                    begin
                        select al.aznet_user , altus.status
                        into v_new_lawyer,v_new_lawyer_status
                        from alz_lawyers al,
                        alz_law_ticket_user_status altus
                        where id = v_rec.general_info_rec.in_lawyer_id
                        and al.aznet_user = altus.user_id(+)
                        and altus.validity_end_date(+) is null;

                        select max( group_code )
                        into v_new_group
                        from alz_law_group_user_rel
                        where username = v_new_lawyer;

                        select aznet_user
                        into v_old_lawyer
                        from alz_lawyers
                        where id = v_old_rec.general_info_rec.in_lawyer_id;

                        if v_new_lawyer_status = 'IZINDE' then

                            LITIGATION_BRE_CLIENT.FIND_ASSIGNED_USER('YES', v_new_group, v_lawyer_bre_user,  v_lawyer_bre_message);

                            if v_lawyer_bre_user is null and v_lawyer_bre_message is null then
                                rollback;
                                v_error_msg :=  'Avukat izinde olduðu için sýradaki avukat aranýrken BRE den kullanýcý alýnamadý. Hata mesajý: '||v_lawyer_bre_message;
                                process_result (
                                          21,
                                          0,
                                          9,
                                          -1,
                                          'IZINDE_INLAWYER',
                                          v_error_msg,
                                          v_error_msg,
                                          NULL,
                                          NULL,
                                          'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                          p_process_results);

                                RETURN;
                            end if;
                            v_new_lawyer := v_lawyer_bre_user ;
                        end if;

                    exception when others then
                        rollback;
                        v_error_msg := 'Dahili avukat( '||v_rec.general_info_rec.in_lawyer_name||') kullanýcýsý bulunamamýþtýr.';

                        process_result(
                            29, --p_process_no
                            2,
                            9,
                            -1,
                            'SEND_APPROVE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                            p_process_results
                        );
                        return;
                    end;

                    for x_rec in ( select distinct lt.ticket_id from alz_law_ticket lt, alz_law_ticket_process ltp where lt.ticket_id = ltp.ticket_id and lt.source not in ('DOSYA') and ltp.status not in ('CLOSED','CANCELLED') and ltp.owner = v_old_lawyer and lt.lawfile_no = p_law_file_no )
                    loop
                        alz_law_ticket_process_utils.REDIRECT_TICKET( p_assigned_group => v_new_group,
                                                                                  p_assigned_user=> v_new_lawyer,
                                                                                  p_redirector  => p_user_name ,
                                                                                  p_deadline   => null ,
                                                                                  p_subject   => 'Dahili avukat güncellenmesi sebebiyle iþ atamasý.' ,
                                                                                  p_redirect_reason_code  => 1,
                                                                                  p_ticket_id    => x_rec.ticket_id,
                                                                                  p_process_results   => p_process_results );
                        begin
                            v_count := p_process_results.count;
                        exception when others then
                            v_count := 0;
                        end;
                        if v_count > 0 then
                            if p_process_results(1).type = -1 then
                                rollback;
                                v_error_msg := 'Dahili avukatýn iþleri yonlendirilirken sorun oluþtu.' ;
                                process_result(
                                            31,
                                            0,
                                            9,
                                            -1,
                                            'SAVE_LAWFILE',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                            p_process_results
                                        );
                                return;
                            end if;
                        end if;
                    end loop;

                end;
            end if;

            --Harici Avukat kontrolü ve otorizasyon iþlemleri
             if p_user_name is not null then
                    if v_ext_control > 0 then

                        v_count := auth_check_base_record(p_law_file_no);

                        if v_count > 0 then
                            v_error_msg := p_law_file_no||' nolu hukuk dosyasýnda onayda bekleyen otorizasyonlar olduðu için baþka bir iþlem yapamazsýnýz.';

                            process_result(
                                8,
                                0,
                                9,
                                -1,
                                'SAVE_LAWFILE',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                p_process_results
                            );
                            return;
                        end if;

                        --bases kolonlarý
                        if v_rec.detail_list is not null then
                            v_count := v_rec.detail_list.count ;
                        else
                            v_count := 0;
                        end if;

                        for x_auth_rec in ( select * from alz_law_auth_rule where active=1 and ( ( v_count > 0 and substr( auth_type , 5,1) in ( 'D','X' )) or (v_count = 0 and substr( auth_type , 5,1) in ( 'H','X' )) ) and  substr( auth_type , 1,1) in ('U','X') )
                        loop
                            CHECK_LAW_FILE_AUTH_APPROVE (p_lawfile_no  => p_law_file_no,
                                                  p_source_id => p_law_file_no,
                                                  p_source_table => x_auth_rec.source_table ,
                                                  p_source_column => x_auth_rec.source_column_name ,
                                                  p_user => p_user_name,
                                                  p_old_rec => v_old_rec,
                                                  p_new_rec => v_rec,
                                                  p_process_results => p_process_results );
                              begin
                                v_count := p_process_results.count;
                            exception when others then
                                v_count := 0;
                            end;

                              if v_count > 0 then
                                if p_process_results(1).type = -1 then
                                    rollback;
                                    v_error_msg := 'Otorizasyon kaydý oluþturulurken hata oldu:'||chr(10)||p_process_results(1).reason;

                                    process_result(
                                        20, --p_process_no
                                        2,
                                        9,
                                        -1,
                                        'SEND_APPROVE',
                                        v_error_msg,
                                        v_error_msg,
                                        null,
                                        null,
                                        'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                                        p_process_results
                                    );
                                    return;
                                end if;
                              end if;
                        end loop;

                        --buradan
                        select count(1)
                        into v_auth_count
                        from alz_law_auth
                        where LAWFILE_NO = p_law_file_no
                        and ticket_id is null
                        and is_approved = 0
                        and is_cancelled = 0;

                        if v_auth_count > 0 then
                            begin
                                select aznet_user
                                into v_approve_lawyer
                                from alz_lawyers
                                where  id = v_rec.GENERAL_INFO_REC.IN_LAWYER_ID
                                and aznet_user is not null ;
                            exception when others then
                                rollback;
                                v_error_msg := 'Otorizasyon kaydý atýlýrken hata oldu: Dahili avukat bulunamadý.';

                                process_result(
                                    20, --p_process_no
                                    2,
                                    9,
                                    -1,
                                    'SEND_APPROVE',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                                    p_process_results
                                );
                                return;
                            end;

                            alz_law_ticket_process_utils.create_ticket(
                                                                    p_source_type       => v_auth_ticket_type,
                                                                    p_assigned_user     => v_approve_lawyer ,
                                                                    p_param_id          => p_law_file_no,
                                                                    p_deadline          => trunc( add_months(sysdate+3,1) , 'MONTH' )-1, -- ayýn son iki gunuyse diðer aya sarksýn
                                                                    p_subject           => p_law_file_no||' dosyasýnda bekleyen otorizasyon onaylarý var' ,
                                                                    p_create_user       => p_user_name,
                                                                    p_arrival_date      => SYSDATE,
                                                                    p_department        => v_old_rec.general_info_rec.supplier_type ,
                                                                    p_new_ticket_id     => p_create_ticket_id,
                                                                    p_process_results   => p_process_results);
                            begin
                                v_count := p_process_results.count;
                            exception when others then
                                v_count := 0;
                            end;

                            if v_count > 0 then
                                if p_process_results(1).type = -1 then
                                    rollback;
                                    v_error_msg := 'Ýþ listesine Otorizasyon kaydý atýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;

                                    process_result(
                                        20, --p_process_no
                                        2,
                                        9,
                                        -1,
                                        'SEND_APPROVE',
                                        v_error_msg,
                                        v_error_msg,
                                        null,
                                        null,
                                        'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                                        p_process_results
                                    );
                                    return;
                                end if;
                            end if;

                            update alz_law_auth
                            set ticket_id = p_create_ticket_id
                            where LAWFILE_NO = p_law_file_no
                            and ticket_id is null
                            and is_approved = 0
                            and is_cancelled = 0;
                        end if;
                    end if;
                end if;
            --Harici Avukat kontrolü ve otorizasyon iþlemleri

            v_old_list := get_law_detail_list(p_law_file_no);

            --Hasar Detay kontrolleri
            if v_rec.general_info_rec.law_file_type != 'TESPIT' and
               v_old_list is not null and
               v_old_list.count > 0 and
               (v_rec.detail_list is null or v_rec.detail_list.count = 0)
            then
                rollback;
                v_error_msg := 'Var olan hasar dosyasýný silemezsiniz.';

                process_result(
                    91, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );

                return;
            end if;

            --Detay Bilgileri kontrolü
            if  v_rec.general_info_rec.law_file_type != 'TESPIT' and
                v_rec.general_info_rec.law_sf_type in ('H', 'R', 'T', 'M', 'I', 'B', 'E') then --Hasarlýlar
                select count(1)
                  into v_count
                  from table(v_old_list) x
                 where not exists
                         (
                            select 1
                              from table(v_rec.detail_list) y
                             where x.detail_no = y.detail_no
                               and x.claim_id = y.claim_id
                               and x.sf_no = y.sf_no
                         );

                if v_count > 0 then
                    v_error_msg := 'Var olan hasar dosya satýrýný silemezsiniz.';
                end if;

            elsif v_rec.general_info_rec.law_file_type != 'TESPIT' and
                  v_rec.general_info_rec.law_sf_type in ('K', 'P', 'S', 'W')
            then

                select count(1)
                  into v_count
                  from table(v_old_list) x
                 where policy_ref is not null
                   and not exists
                         (
                            select 1
                              from table(v_rec.detail_list) y
                             where x.detail_no = y.detail_no
                               and nvl(x.policy_ref, 'X') = nvl(y.policy_ref, 'X')
                         );

                if v_count > 0 then
                    v_error_msg := 'Var olan detay satýrýný silemezsiniz.';
                end if;

            elsif v_rec.general_info_rec.law_file_type != 'TESPIT' and
                  v_rec.general_info_rec.law_sf_type = 'L'
            then

                select count(1)
                  into v_count
                  from table(v_old_list) x
                 where not exists
                         (
                            select 1
                              from table(v_rec.detail_list) y
                             where x.detail_no = y.detail_no
                         );

                if v_count > 0 then
                    v_error_msg := 'Var olan detay satýrýný silemezsiniz.';
                end if;

            elsif v_rec.general_info_rec.law_file_type != 'TESPIT' and
                  v_rec.general_info_rec.law_sf_type = 'Z'
            then

                select count(1)
                  into v_count
                  from table(v_old_list) x
                 where ext_reference is not null
                   and not exists
                         (
                            select 1
                              from table(v_rec.detail_list) y
                             where x.detail_no = y.detail_no
                               and NVL(x.ext_reference, 'X') = NVL(y.ext_reference, 'X')
                         );

                if v_count > 0 then
                    v_error_msg := 'Var olan hayat dosya satýrýný silemezsiniz.';
                end if;
            end if;

            if v_error_msg is not null then
                rollback;
                process_result(
                    99, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );

                return;
            end if;
        end if;

        if v_ext_control > 0 and
           v_type = 'INSERT'
        then
            begin
                koc_law_utils.law_file_no(null, p_law_file_no);
            exception when others then
                rollback;
                v_error_msg := 'Dosya numarasý alýnýrken hata oldu: '||SUBSTR(SQLERRM, 1, 950);
                p_law_file_no := null;

                process_result(
                    3, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end;

            --bases kolonlarý
            if v_rec.detail_list is not null then
                v_count := v_rec.detail_list.count ;
            else
                v_count := 0;
            end if;

            for x_auth_rec in ( select * from alz_law_auth_rule where active=1 and ( ( v_count > 0 and substr( auth_type , 5,1) in ( 'D','X' )) or (v_count = 0 and substr( auth_type , 5,1) in ( 'H','X' )) ) and  substr( auth_type , 1,1) in ('I','X') )
            loop
                v_count := 0 ;
                declare
                    v_rucu_list           law_base_detail_tbl;
                    v_detail_yedek     law_base_detail_tbl;
                begin
                    if lower( x_auth_rec.source_column_name ) = 'case_amount' and lower( x_auth_rec.source_table ) = 'koc_law_bases_detail'  then

                            v_count := -1;
                            v_detail_yedek := v_rec.detail_list ;
                            for indis in 1.. v_rec.detail_list.count
                            loop
                                alz_lawfile_utils.validate_ext_reference
                                (
                                    v_rec.general_info_rec.law_case_type,
                                    v_rec.general_info_rec.law_file_type,
                                    v_rec.general_info_rec.law_sf_type,
                                    v_rec.detail_list(indis),
                                    v_rucu_list,
                                    p_process_results
                                );
                                for x_rucu_rec in ( select * from table(v_rucu_list))
                                loop
                                    if nvl( x_rucu_rec.cover_code,'X' ) = nvl(v_rec.detail_list(indis).cover_code,'X') and x_rucu_rec.EXT_REFERENCE = v_rec.detail_list(indis).EXT_REFERENCE and x_rucu_rec.case_amount <> v_rec.detail_list(indis).case_amount then
                                        v_count := 0;
                                        v_detail_yedek(indis).case_amount := x_rucu_rec.case_amount ;
                                        v_detail_yedek(indis).case_amount_swf := x_rucu_rec.case_amount_swf ;
                                    end if;
                                end loop;
                                v_rucu_list := null ;
                            end loop;
                            --v_detail_yedek := v_rec.detail_list ;
                    end if;

                    if v_count >= 0 then
                        CHECK_LAW_FILE_AUTH_APPROVE (p_lawfile_no  => p_law_file_no,
                                              p_source_id => p_law_file_no,
                                              p_source_table => x_auth_rec.source_table ,
                                              p_source_column => x_auth_rec.source_column_name ,
                                              p_user => p_user_name,
                                              p_old_rec => null,
                                              p_new_rec => v_rec,
                                              p_process_results => p_process_results );
                        begin
                            v_count := p_process_results.count;
                        exception when others then
                            v_count := 0;
                        end;

                        if v_count > 0 then
                            if p_process_results(1).type = -1 then
                                rollback;
                                v_error_msg := 'Otorizasyon kaydý oluþturulurken hata oldu:'||chr(10)||p_process_results(1).reason;

                                process_result(
                                    20, --p_process_no
                                    2,
                                    9,
                                    -1,
                                    'SEND_APPROVE',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                                    p_process_results
                                );
                                return;
                            end if;
                        end if;
                        if lower( x_auth_rec.source_column_name ) = 'case_amount' and v_detail_yedek is not null then
                            for indis in 1..v_rec.detail_list.count
                            loop
                                v_rec.detail_list(indis).case_amount := v_detail_yedek(indis).case_amount ;
                                v_rec.detail_list(indis).case_amount_swf := v_detail_yedek(indis).case_amount_SWF ;
                            end loop;
                        end if;
                    end if;
                end;
            end loop;

            if auth_check_base_record( p_law_file_no ) = 0 then
                p_law_file_no := null;
            end if;
        end if;

        --Künye bilgilerini kaydediyoruz
        save_general_info
        (
            p_law_file_no,
            p_user_name,
            v_rec.general_info_rec,
            p_process_results,
            v_type
        );

        if p_process_results is not null then
            return;
        end if;

        if p_law_file_no is null then
            rollback;
            v_error_msg := 'Hukuk Dosyasý oluþturulamadý.';

            process_result(
                3, --p_process_no
                0,
                9,
                -1,
                'SAVE_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                p_process_results
            );
            return;
        end if;

        if v_rec.court_list is not null then

            select count(*)
              into v_count
              from table(v_rec.court_list);

            -- Mahkeme bilgilerini kaydediyoruz
            save_court_details(p_law_file_no,
                               p_user_name,
                               v_rec.court_list,
                               p_process_results);

            if p_process_results is not null then
                select count(1)
                  into v_error_count
                  from table(p_process_results)
                 where type = -1;

                if v_error_count > 0 then
                    rollback;
                    return;
                else
                    v_process_results := p_process_results;
                end if;
            end if;
        end if;

        -- Taraf bilgilerini kaydediyoruz
        save_party_list(p_law_file_no,
                        p_user_name,
                        v_rec.party_list,
                        p_process_results);

        if p_process_results is not null then
            select count(1)
              into v_error_count
              from table(p_process_results)
             where type = -1;

            if v_error_count > 0 then
                rollback;
                return;
            end if;
        end if;

        if v_rec.general_info_rec.law_file_type = 'HUKUK' and
           (v_rec.detail_list is null or v_rec.detail_list.count = 0)
        then
            --hayat ise hayat'ýn teminatini doldur --burada teminatýnb döviz tipini bulmak için hayat db'ye ulasmak gerekiyor simdili default cover_code_swf = 'TL' verildi
            if nvl(v_rec.general_info_rec.law_sf_type, 'xxx') = 'Z' then
                null;

            else
                --hasarsýz hukuk dosyalarýnda teminat boþ ise karar, ýslah, bilirkiþi,(eksper/fatura) ya da dava miktarýna ve döviz tipine set et
                if v_rec.base_info_rec.court_decision_amount is not null then
                    if nvl(v_rec.base_info_rec.cover_amount, 0) < v_rec.base_info_rec.court_decision_amount then
                        v_rec.base_info_rec.cover_amount := v_rec.base_info_rec.court_decision_amount;
                        v_rec.base_info_rec.cover_amount_swf := v_rec.base_info_rec.court_decision_amount_swf;
                    end if;

                elsif v_rec.base_info_rec.court_correction_amount is not null then
                    if nvl(v_rec.base_info_rec.cover_amount, 0) < v_rec.base_info_rec.court_correction_amount then
                        v_rec.base_info_rec.cover_amount := v_rec.base_info_rec.court_correction_amount;
                        v_rec.base_info_rec.cover_amount_swf := v_rec.base_info_rec.court_correction_amount_swf;
                    end if;

                elsif v_rec.base_info_rec.authority_amount is not null then
                    if nvl(v_rec.base_info_rec.cover_amount,0) < v_rec.base_info_rec.authority_amount then
                        v_rec.base_info_rec.cover_amount := v_rec.base_info_rec.authority_amount;
                        v_rec.base_info_rec.cover_amount_swf := v_rec.base_info_rec.authority_amount_swf;
                    end if;
                elsif v_rec.base_info_rec.expertise_amount is not null or v_rec.base_info_rec.factura is not null then
                    if (nvl(v_rec.base_info_rec.expertise_amount, 0) * koc_curr_utils.retrieve_effective_parity(v_rec.base_info_rec.expertise_amount_swf, base_swift_code, v_opus_date, 36) )
                      >= (nvl(v_rec.base_info_rec.factura, 0) * koc_curr_utils.retrieve_effective_parity(v_rec.base_info_rec.factura_swf, base_swift_code, v_opus_date, 36))
                    then --eksper yada faturadan büyük olan alýnýyor
                        if nvl(v_rec.base_info_rec.cover_amount, 0) < v_rec.base_info_rec.expertise_amount then
                            v_rec.base_info_rec.cover_amount := v_rec.base_info_rec.expertise_amount;
                            v_rec.base_info_rec.cover_amount_swf := v_rec.base_info_rec.expertise_amount_swf;
                        end if;
                    else
                        if nvl(v_rec.base_info_rec.cover_amount,0) < v_rec.base_info_rec.factura then
                            v_rec.base_info_rec.cover_amount := v_rec.base_info_rec.factura;
                            v_rec.base_info_rec.cover_amount_swf := v_rec.base_info_rec.factura_swf;
                        end if;
                    end if;
                elsif v_rec.base_info_rec.case_amount is not null then
                    if nvl(v_rec.base_info_rec.cover_amount, 0) < v_rec.base_info_rec.case_amount then
                        v_rec.base_info_rec.cover_amount := v_rec.base_info_rec.case_amount;
                        v_rec.base_info_rec.cover_amount_swf := v_rec.base_info_rec.case_amount_swf;
                    end if;

                else
                    if nvl(v_rec.base_info_rec.law_ba, 0) = 0 then
                        rollback;
                        v_error_msg := 'Hasarsýz hukuk dosyalarýnda BA Hayýr ise; Dava/Ýcra, Karar, Islah, Bilirkiþi, Eksper, Fatura tutarlarýndan biri dolu olmalýdýr.';

                        process_result(
                            3, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAWFILE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                            p_process_results
                        );
                        return;
                    end if;
                end if;
            end if;
        end if;

        if v_rec.detail_list is not null and v_rec.detail_list.count > 0 then
            --Detay satýr bilgilerini kaydediyoruz
            save_law_detail_list
            (
                p_law_file_no,
                p_user_name,
                v_rec.detail_list,
                v_rec.base_info_rec,
                p_simple_questions,
                p_process_results
            );

            if p_process_results is not null then
                select count(1)
                  into v_error_count
                  from table(p_process_results)
                 where type = -1;

                if v_error_count > 0 then
                    rollback;
                    return;
                end if;
            end if;

        end if;

        --Hukuk bilgilerini kaydediyoruz
        save_law_base_info
        (
            p_law_file_no,
            p_user_name,
            v_rec.base_info_rec,
            p_process_results
        );

        if p_process_results is not null then
            select count(1)
              into v_error_count
              from table(p_process_results)
             where type = -1;

            if v_error_count > 0 then
                rollback;
                return;
            end if;
        end if;

        --Dava takip masrafýný kaydediyoruz
        if v_rec.expense_info_rec is not null then
            save_expense_info_list(p_law_file_no,
                                   v_rec.expense_info_rec,
                                   p_user_name,
                                   v_court_revenue,
                                   p_process_results,
                                   0 --p_log_active
                                   );

            if p_process_results is not null then
                select count(1)
                  into v_error_count
                  from table(p_process_results)
                 where type = -1;

                if v_error_count > 0 then
                    rollback;
                    return;
                end if;
            end if;
        end if;

        if v_rec.general_info_rec.law_file_type = 'HUKUK' then
            if v_rec.general_info_rec.law_case_type = 'A' and
               (v_old_rec.general_info_rec is null or v_old_rec.general_info_rec.file_close_date is null) -- güncelleme için eklendi
            then
                koc_law_reserve_utils.muallak_asil_get_data(p_law_file_no, v_rec_sort_type, v_date_parity);

                --Teminat tutarlarý güncelleniyor
                if v_rec.detail_list is not null and v_rec.detail_list.count > 0 then

                    v_rec.base_info_rec.cover_amount := 0;
                    for rec_detail in c_detail loop
                        i := i + 1;

                        select nvl(cover_amount, 0)
                          into v_rec.detail_list(i).cover_amount
                          from koc_law_bases_detail
                         where law_file_no = p_law_file_no
                           and detail_no = rec_detail.row_detail_no;

                        v_rec.base_info_rec.cover_amount := nvl(v_rec.base_info_rec.cover_amount, 0) + v_rec.detail_list(i).cover_amount;
                    end loop;

                    update koc_law_bases
                       set cover_amount = v_rec.base_info_rec.cover_amount,
                           user_name = p_user_name
                     where law_file_no = p_law_file_no;

                end if;

                --LAWYER_PAYMENT
                if v_rec.base_info_rec.court_decision_amount is not null then
                    v_lawyer_amount := nvl(v_rec.base_info_rec.court_decision_amount, 0) * koc_curr_utils.retrieve_effective_parity(v_rec.base_info_rec.court_decision_amount_swf, base_swift_code, v_date_parity, 36);

                elsif v_rec.base_info_rec.court_correction_amount is not null then
                    v_lawyer_amount := nvl(v_rec.base_info_rec.court_correction_amount, 0) * koc_curr_utils.retrieve_effective_parity(v_rec.base_info_rec.court_correction_amount_swf, base_swift_code, v_date_parity, 36);

                else
                    v_lawyer_amount := nvl(v_rec.base_info_rec.case_amount, 0) * koc_curr_utils.retrieve_effective_parity(v_rec.base_info_rec.case_amount_swf, base_swift_code, v_date_parity, 36);
                end if;

                if v_type = 'INSERT' then

                    begin
                        koc_law_utils.law_payment_create
                        (
                            p_law_file_no,
                            v_tariff_type, --tariff_type,
                            v_opus_date,
                            p_user_name,
                            v_lawyer_amount,
                            v_rec.base_info_rec.lawyer_payment
                        );

                    exception when others then
                        rollback;
                        v_error_msg := 'Vekalet ücreti kayýtlarý atýlýrken hata oluþtu';

                        process_result(
                            3, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAWFILE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                            p_process_results
                        );
                        return;
                    end;
                end if;

                --insert_payment_bases
                if v_rec.general_info_rec.law_case_type = 'A' and
                   v_rec.general_info_rec.law_file_type = 'HUKUK' and
                   v_rec.base_info_rec.cover_amount >= 0 and
                   v_rec.base_info_rec.cover_amount < v_lawyer_amount
                then
                    v_lawyer_amount := nvl(v_rec.base_info_rec.cover_amount, 0);
                end if;

                if v_tariff_type != '4'
                then
                    koc_law_utils.lawyer_payment
                    (
                        p_law_file_no,
                        v_tariff_type,
                        v_opus_date,
                        p_user_name,
                        v_lawyer_amount,
                        v_rec.base_info_rec.lawyer_payment
                    );

                    v_min_lawyer := get_court_min_amount(p_law_file_no);--nvl(koc_law_utils.min_vekalet_bul_tekil(v_court_no, 'M', sysdate), 0) ;

                    if nvl(v_rec.base_info_rec.lawyer_payment, 0) < v_min_lawyer then
                        v_rec.base_info_rec.lawyer_payment := v_min_lawyer;
                    end if;
                end if;

                --Deðer Kaybý özel sözleþme kontrolü
                select count(1)
                  into v_law_count
                  from koc_clm_lookup
                 where type = 131
                   and scode = v_rec.general_info_rec.lawyer_id;

                if v_rec.general_info_rec.law_case_type = 'A' and
                   v_rec.general_info_rec.law_file_type = 'HUKUK' and
                   nvl(v_rec.general_info_rec.is_specail_contract, 0) = 1
                then
                    if v_law_count > 0 then
                        begin
                            select icode
                              into v_rec.base_info_rec.lawyer_payment
                              from koc_clm_lookup
                             where type = 136;

                        exception when others then
                            rollback;
                            v_error_msg := nvl(v_error_msg, 'Deðer Kaybý Özel sözleþmeli avukat ücreti bulunamadý.');

                            process_result(
                                2, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_GENERAL_INFO',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                                p_process_results
                            );
                            return;
                        end;
                    else
                        select icode
                          into v_rec.base_info_rec.lawyer_payment
                          from koc_clm_lookup
                         where type = 135;
                    end if;
                end if;

                if v_law_count = 0 then
                    update koc_law_bases
                       set lawyer_payment = v_rec.base_info_rec.lawyer_payment,
                           user_name = p_user_name
                     where law_file_no = p_law_file_no;
                end if;

                if v_type = 'INSERT' then
                    --lawyer_trans_insert
                    if v_rec.general_info_rec.law_case_type = 'A' and
                       v_rec.general_info_rec.law_file_type = 'HUKUK' and
                       nvl(v_rec.general_info_rec.lawyer_id, 0) != 0 and
                       v_rec.base_info_rec.lawyer_payment is not null and
                       v_tariff_type is not null
                    then
                        if v_law_count > 0 then
                            v_lawyer_amount := v_rec.base_info_rec.lawyer_payment;
                        else
                            v_lawyer_amount := v_rec.base_info_rec.lawyer_payment*(50/100);
                        end if;

                        alz_lawfile_utils.lawyer_trans_insert(p_law_file_no,
                                                              v_rec.general_info_rec.lawyer_id,
                                                              v_lawyer_amount,
                                                              p_user_name,
                                                              p_process_results);

                        if p_process_results is not null then
                            select count(1)
                              into v_error_count
                              from table(p_process_results)
                             where type = -1;

                            if v_error_count > 0 then
                                rollback;
                                return;
                            end if;
                        end if;
                    end if;

                elsif v_type = 'UPDATE' then

                    if v_rec.general_info_rec.file_close_date is not null then --sayet kapanan bir dosya ise ALZ_LAW_RESERVE_HISTORY_PK tablosuna kayýt at
                        if v_rec.general_info_rec.law_sf_type in ('H', 'R', 'T', 'M','I', 'B', 'E') and
                           v_rec.detail_list is not null and
                           v_rec.detail_list.count > 0
                        then --hasarlý bir dosyaysa

                            --HASAR_DOSYASI_KAPAMA
                            for rec_claim in (select distinct claim_id, sf_no from koc_law_bases_detail where law_file_no = p_law_file_no) loop
                                select count(1)
                                  into v_count
                                  from koc_law_bases lb,
                                       koc_law_bases_detail lbd
                                 where lb.law_file_no != p_law_file_no
                                   and lb.file_close_date is null
                                   and lb.law_file_type = 'A'
                                   and lb.law_file_no = lbd.law_file_no
                                   and lbd.claim_id = rec_claim.claim_id
                                   and lbd.sf_no = rec_claim.sf_no;

                                -- Hasar dosyasý baþka bir hukuk dosyasýnda geçmiyorsa
                                if v_count = 0 then
                                    select clm_status,
                                           ext_reference
                                      into v_clm_status,
                                           v_ext_reference
                                      from clm_subfiles
                                     where claim_id = rec_claim.claim_id
                                       and sf_no = rec_claim.sf_no;

                                    if v_clm_status not in  ('CLOSED','CANCELLED') then

                                        update opus_core.clm_subfiles
                                           set clm_status = 'CLOSED',
                                               sf_desc = to_char(v_opus_date,'dd/mm/yyyy')||' '||'Dosya kapatildi.'||' Hukuk Dosyasý:'||p_law_file_no
                                         where claim_id = rec_claim.claim_id
                                           and sf_no = rec_claim.sf_no;

                                        select clm_status_id_seq.nextval into v_status_id from dual;

                                        insert into clm_status_history
                                        (
                                            status_id,
                                            claim_id,
                                            clm_line_id,
                                            clm_level,
                                            clm_status,
                                            csh_date,
                                            csh_username,
                                            sf_no,
                                            trans_no,
                                            csh_comment
                                        )
                                        values
                                        (
                                            v_status_id,
                                            rec_claim.claim_id,
                                            1,
                                            'SUBFILE',
                                            'CLOSED',
                                            v_opus_date,
                                            p_user_name,
                                            rec_claim.sf_no,
                                            null ,
                                            to_char(v_opus_date,'dd/mm/yyyy')||' '||'Dosya kapatildi.'||' Hukuk Dosyasý:'||p_law_file_no
                                        );

                                        insert into koc_clm_status_history_ext
                                        (
                                            status_id,
                                            claim_id,
                                            sf_no,
                                            clm_status,
                                            process_date
                                        )
                                        values
                                        (
                                            v_status_id,
                                            rec_claim.claim_id,
                                            rec_claim.sf_no,
                                            'CLOSED',
                                            v_opus_date
                                        );

                                    end if;
                                end if;
                            end loop;
                        end if;

                        koc_law_reserve_utils.muallak_matriks_doldur_kapali(p_law_file_no);
                    end if;
                end if; --v_type
            else

                -- court expense
                if v_rec.general_info_rec.law_case_type = 'L' and
                   v_rec.general_info_rec.law_file_type = 'HUKUK'
                then
                    --Dava Takip Masrafýna Lehte dosyalarda Avukat Masraf getirilmesi istendi

                    select nvl(sum(trans_amount), 0)
                      into v_rec.base_info_rec.court_revenue
                      from koc_law_trans_detail
                     where law_file_no = p_law_file_no
                       and sf_total_type = 33;

                    v_rec.base_info_rec.lawyer_payment := koc_law_utils.lawyer_payment_web(p_law_file_no, 3, nvl(v_rec.general_info_rec.file_close_date, sysdate), p_user_name, nvl(koc_law_utils.real_case_amount(p_law_file_no), 0));
                end if;

                update koc_law_bases
                   set court_revenue = v_rec.base_info_rec.court_revenue,
                       user_name = p_user_name
                 where law_file_no = p_law_file_no;

                alz_lawfile_utils.supheli_alacak_raw_data_leyhte(p_law_file_no,
                                                                 v_rec_sort,
                                                                 v_rec.detail_list,
                                                                 p_process_results);

                if p_process_results is not null then
                    select count(1)
                      into v_error_count
                      from table(p_process_results)
                     where type = -1;

                    if v_error_count > 0 then
                        rollback;
                        return;
                    end if;
                end if;

                koc_law_reserve_utils.recourse_amount_leyh(v_rec_sort, v_rec_sort_type, v_date_parity, v_law_base_dtl_records); --rücusuz hukuk dosyasiysa

                if v_rec.detail_list is not null and
                   v_rec.detail_list.count > 0
                then
                    koc_law_reserve_utils.supheli_alacak_leyh(v_rec_sort_type, v_date_parity, v_law_base_dtl_records, v_error_msg);
                end if;

                --1 Numaralý Soru
                if v_error_msg is not null then
                    if nvl(alz_base_function_utils.question_answer(p_simple_questions, 1), '-1') = '0' then
                        rollback;
                        if v_type = 'INSERT' then
                            p_law_file_no := null;
                        end if;

                        v_error_msg := 'Kayýt iþlemi isteðiniz üzere iptal edilmiþtir.';

                        process_result(
                            4, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAWFILE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                            p_process_results
                        );
                        return;

                    elsif nvl(alz_base_function_utils.question_answer(p_simple_questions, 1), '-1') != '1' then
                        if p_simple_questions is null then
                            p_simple_questions := customer.simple_question_table();
                        end if;

                        p_simple_questions.extend;
                        v_qst_cnt := p_simple_questions.count;
                        p_simple_questions(v_qst_cnt) :=
                            customer.simple_question_rec
                            (
                                1,
                                v_error_msg||', '|| 'yine de kaydetmek istiyor musunuz?',
                                1,
                                null,
                                null
                            );

                        if v_type = 'INSERT' then
                            p_law_file_no := null;
                        end if;

                        rollback;
                        return;
                    end if;
                end if;

                if v_type = 'UPDATE' and
                   v_rec.general_info_rec.file_close_date is not null
                then --sayet kapanan bir dosya ise ALZ_LAW_RESERVE_HISTORY_PK tablosuna kayýt at

                    koc_law_reserve_utils.sa_matriks_doldur_kapali(p_law_file_no);
                end if;
            end if; --law_case_type
        end if; --law_file_type

        --Faiz tutarýný hesaplýyoruz
        if v_rec.general_info_rec.law_file_type = 'HUKUK' then
            v_rec.base_info_rec.interest_amount := null;
            i := 0;
            for rec_detail in c_detail loop
                i := i + 1;

                if v_rec.general_info_rec.file_close_date is null then
                    if v_rec.general_info_rec.law_case_type = 'A' then
                        if rec_detail.interest_type <> 'S' then
                            v_rec.detail_list(i).interest_amount := koc_law_reserve_utils.execute_function( 2, p_law_file_no, rec_detail.detail_no, pme_public.opus_date);
                        end if;
                    elsif v_rec.general_info_rec.law_case_type = 'L' then
                        if rec_detail.interest_type <> 'S' then
                            v_rec.detail_list(i).interest_amount := koc_law_reserve_utils.execute_function1( 2, p_law_file_no, rec_detail.detail_no, pme_public.opus_date);
                        end if;
                    end if;
                else
                    begin
                        select amount
                          into v_rec.detail_list(i).interest_amount
                          from alz_law_reserve_history
                         where law_file_no = p_law_file_no
                           and detail_no = rec_detail.detail_no
                           and accessory_type = 2
                           and category = 'KAPAMA';
                    exception when others then
                        rec_detail.interest_amount := 0;
                    end;
                end if;

                v_rec.base_info_rec.interest_amount := nvl(v_rec.base_info_rec.interest_amount, 0) + nvl(v_rec.detail_list(i).interest_amount, 0);
            end loop;

            if i = 0 then
                if v_rec.general_info_rec.file_close_date is null then
                    v_rec.base_info_rec.interest_amount := koc_law_reserve_utils.execute_function(2, p_law_file_no, null, pme_public.opus_date);
                else
                    --hasarli veya hasarsýz hukuk
                    begin
                        select sum(amount)
                          into v_rec.base_info_rec.interest_amount
                          from alz_law_reserve_history
                         where law_file_no = p_law_file_no
                           and accessory_type = 2
                           and category = 'KAPAMA';
                    exception when others then
                        v_rec.base_info_rec.interest_amount := 0;
                    end;
                end if;
            end if;
        end if;

        --Toplam tutar atamasý
         v_rec.base_info_rec.total_amount :=  nvl(v_rec.base_info_rec.lawyer_payment, 0) + nvl(v_rec.base_info_rec.court_revenue, 0) + nvl(v_rec.base_info_rec.interest_amount, 0) + nvl(v_rec.base_info_rec.lawyer_payment, 0);

        --lawyer_trans_insert-update
        if v_type = 'UPDATE' then
            if v_rec.general_info_rec.file_open_date >= to_date('01/01/2008', 'DD/MM/YYYY') then
                select count(distinct lawyer)
                  into v_count
                  from koc_law_trans_detail
                 where law_file_no = p_law_file_no
                   and sf_total_type = '35';

                if v_count = 0 and
                   v_rec.general_info_rec.law_case_type = 'A' and
                   v_rec.general_info_rec.law_file_type = 'HUKUK' and
                   nvl(v_rec.general_info_rec.lawyer_id, 0) != 0 and
                   v_tariff_type is not null and
                   v_rec.base_info_rec.lawyer_payment is not null
                then

                    if v_law_count = 0 then --Deðer kaybý kontrolü
                        v_rec.base_info_rec.lawyer_payment := v_rec.base_info_rec.lawyer_payment * (50/100);
                    end if;

                    alz_lawfile_utils.lawyer_trans_insert(p_law_file_no,
                                                          v_rec.general_info_rec.lawyer_id,
                                                          v_rec.base_info_rec.lawyer_payment,
                                                          p_user_name,
                                                          p_process_results);


                    if p_process_results is not null then
                        select count(1)
                          into v_error_count
                          from table(p_process_results)
                         where type = -1;

                        if v_error_count > 0 then
                            rollback;
                            return;
                        end if;
                    end if;
                end if;
            end if;

            --file close date en son update ediyoruz
            if v_rec.general_info_rec.file_close_date is not null then
                update koc_law_bases
                   set file_close_date = v_rec.general_info_rec.file_close_date
                 where law_file_no = p_law_file_no;
            end if;

            if v_old_rec.general_info_rec.file_close_date is null and
               v_rec.general_info_rec.file_close_date is not null
            then

                koc_law_reserve_utils.close_law_reserve_redistribute(p_law_file_no);

                if nvl(v_rec.general_info_rec.lawyer_id, 0) != 0 then
                    v_lawyer_amount := 0;

                    --vekalet_para_hareketi
                    if nvl(v_rec.general_info_rec.file_open_date , to_date('01/01/1900', 'DD/MM/YYYY)')) >= to_date('01/10/2009', 'DD/MM/YYYY') then
                        declare
                          v_min_vekalet                 number;
                          v_asil_tutar                  number;
                          v_ths                         number;
                          v_msr                         number;
                          v_vekalet                     number;
                          v_real                        number;
                          v_tazminat                    number;
                          v_tip                         number;

                        begin

                            begin
                               select ( (sum (decode (sf_total_type, '47', trans_amount, 0))
                                         - sum (decode (sf_total_type, '33', trans_amount, 0))))
                                         asil,
                                      sum (decode (sf_total_type, '47', trans_amount, 0)),
                                      sum (decode (sf_total_type, '33', trans_amount, 0)),
                                      sum (decode (sf_total_type, '35', trans_amount, 0))
                                 into v_asil_tutar,
                                      v_ths,
                                      v_msr,
                                      v_vekalet
                                 from koc_law_trans_detail
                                where law_file_no = p_law_file_no
                                      and sf_total_type in ('33', '35', '47');

                            exception when others then
                                v_asil_tutar := 0;
                            end;

                            if v_rec.general_info_rec.law_case_type = 'L' then
                                v_real := koc_law_utils.real_case_amount(p_law_file_no);

                                begin
                                    if (nvl(v_ths, 0) - nvl(v_msr, 0)) < koc_law_utils.real_case_amount(p_law_file_no) or
                                       nvl(v_ths, 0) = 0
                                    then
                                        koc_law_utils.law_payment_create(p_law_file_no, 3, sysdate + 1, p_user_name, v_real, v_lawyer_amount);
                                    else
                                        koc_law_utils.law_payment_create(p_law_file_no, 3, sysdate + 1, p_user_name, v_asil_tutar, v_lawyer_amount);
                                    end if;

                                exception when others then
--                                    rollback;
                                    v_error_msg := 'Vekalet para_hareketi kayýtlarý atýlýrken hata oluþtu: '||SUBSTR(SQLERRM, 1, 950);

                                    process_result(
                                        3, --p_process_no
                                        0,
                                        9,
                                        100,
                                        'SAVE_LAWFILE',
                                        v_error_msg,
                                        v_error_msg,
                                        null,
                                        null,
                                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                        v_process_results
                                    );
--                                    return;
                                end;

                            elsif v_rec.general_info_rec.law_case_type = 'A' then               -- ALEYHE DOSYALAR ICIN
                                if v_rec.general_info_rec.lawyer_id is not null then
                                    begin
                                        select sum(decode(sf_total_type, '11', trans_amount, 0))
                                          into v_tazminat
                                          from koc_law_trans_detail
                                         where law_file_no = p_law_file_no
                                           and sf_total_type = '11';
                                    exception when others  then
                                        v_tazminat := 0;
                                    end;

                                    if nvl(v_tazminat, 0) = 0 then
                                        v_tip := 1;
                                    else
                                        v_tip := 3;
                                    end if;

                                    v_real := koc_law_utils.real_case_amount(p_law_file_no);
                                    begin
                                        koc_law_utils.law_payment_create
                                        (
                                            p_law_file_no,
                                            v_tip,
                                            sysdate + 1,
                                            p_user_name,
                                            koc_law_utils.real_case_amount(p_law_file_no),
                                            v_lawyer_amount
                                        );
                                    exception when others then
--                                        rollback;
                                        v_error_msg := 'Vekalet para_hareketi kayýtlarý atýlýrken hata oluþtu: '||SUBSTR(SQLERRM, 1, 950);

                                        process_result(
                                            3, --p_process_no
                                            0,
                                            9,
                                            100,
                                            'SAVE_LAWFILE',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                            v_process_results
                                        );
--                                        return;
                                    end;
                                end if;
                            end if;

                            --v_min_vekalet := koc_law_utils.min_vekalet_bul(p_law_file_no);

                            v_min_vekalet := get_court_min_amount(p_law_file_no);

                            if nvl(v_lawyer_amount, 0) < nvl(v_min_vekalet, 0) then
                                v_lawyer_amount := v_min_vekalet;
                            end if;

                            v_lawyer_amount := nvl(v_lawyer_amount, 0) - nvl(v_vekalet, 0);
                            if nvl(v_real, 0) < 0 then
                                v_lawyer_amount := 0;
                            end if;
                        end;

                    elsif nvl(v_rec.general_info_rec.file_open_date, to_date('01/01/1900', 'DD/MM/YYYY)')) < to_date('01/10/2009', 'DD/MM/YYYY') then
                    --vekalet_ucret_eski_kayitlar
                        declare
                          v_min_vekalet                 number;
                          v_asil_tutar                  number;
                          v_ths                         number;
                          v_msr                         number;
                          v_vekalet                     number;
                          v_real                        number;
                          v_tazminat                    number;
                          v_tip                         number;

                        begin
                            begin
                               select ( (sum (decode (sf_total_type, '47', trans_amount, 0))
                                         - sum (decode (sf_total_type, '33', trans_amount, 0))))
                                         asil,
                                      sum (decode (sf_total_type, '47', trans_amount, 0)),
                                      sum (decode (sf_total_type, '33', trans_amount, 0)),
                                      sum (decode (sf_total_type, '35', trans_amount, 0))
                                 into v_asil_tutar,
                                      v_ths,
                                      v_msr,
                                      v_vekalet
                                 from koc_law_trans_detail
                                where law_file_no = p_law_file_no
                                      and sf_total_type in ('33', '35', '47');

                            exception when others then
                                v_asil_tutar := 0;
                            end;

                            if v_rec.general_info_rec.law_case_type = 'L' then
                                v_real := koc_law_utils.real_case_amount(p_law_file_no);

                                begin
                                    if nvl(v_ths, 0) = 0 then
                                        koc_law_utils.law_payment_create(p_law_file_no, 3, sysdate + 1, p_user_name, v_real, v_lawyer_amount);

                                    elsif (nvl(v_ths, 0) - nvl(v_msr, 0)) < koc_law_utils.real_case_amount(p_law_file_no) then
                                        koc_law_utils.law_payment_create(p_law_file_no, 1, sysdate + 1, p_user_name, v_real, v_lawyer_amount);

                                    else
                                        koc_law_utils.law_payment_create(p_law_file_no, 1, sysdate + 1, p_user_name, v_asil_tutar, v_lawyer_amount);
                                    end if;

                            exception when others then
                                v_error_msg := 'Vekalet para_hareketi kayýtlarý atýlýrken hata oluþtu: '||SUBSTR(SQLERRM, 1, 950);

                                process_result(
                                    3, --p_process_no
                                    0,
                                    9,
                                    100,
                                    'SAVE_LAWFILE',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                    v_process_results
                                );
                            end;

                            elsif v_rec.general_info_rec.law_case_type = 'A' then               -- ALEYHE DOSYALAR ICIN
                                if v_rec.general_info_rec.lawyer_id is not null then
                                    begin
                                        select sum(decode(sf_total_type, '11', trans_amount, 0))
                                          into v_tazminat
                                          from koc_law_trans_detail
                                         where law_file_no = p_law_file_no
                                           and sf_total_type = '11';
                                    exception when others  then
                                        v_tazminat := 0;
                                    end;

                                    if nvl(v_tazminat, 0) = 0 then
                                        v_tip := 1;
                                    else
                                        v_tip := 3;
                                    end if;

                                    v_real := koc_law_utils.real_case_amount(p_law_file_no);
                                    begin
                                        koc_law_utils.law_payment_create
                                        (
                                            p_law_file_no,
                                            v_tip,
                                            sysdate + 1,
                                            p_user_name,
                                            koc_law_utils.real_case_amount(p_law_file_no),
                                            v_lawyer_amount
                                        );
                                    exception when others then
                                        v_error_msg := 'Vekalet para_hareketi kayýtlarý atýlýrken hata oluþtu: '||SUBSTR(SQLERRM, 1, 950);

                                        process_result(
                                            3, --p_process_no
                                            0,
                                            9,
                                            100,
                                            'SAVE_LAWFILE',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                            v_process_results
                                        );
                                    end;
                                end if;
                            end if;

                            v_min_vekalet := get_court_min_amount(p_law_file_no);

                            if nvl(v_lawyer_amount, 0) < nvl(v_min_vekalet, 0) then
                                v_lawyer_amount := v_min_vekalet;
                            end if;

                            v_lawyer_amount := nvl(v_lawyer_amount, 0) - nvl(v_vekalet, 0);
                            if nvl(v_real, 0) < 0 then
                                v_lawyer_amount := 0;
                            end if;
                        end;
                    end if;

                    --Deðer Kaybý özel sözleþmeli dosya kapatma vekalet ücreti
                    if v_law_count > 0 then
                        if v_rec.general_info_rec.status_id = 20 then --Kapanan Ödendi Sulh
                            begin
                                select icode
                                  into v_lawyer_amount
                                  from koc_clm_lookup
                                 where type = 137;

                            exception when others then
                                rollback;
                                v_error_msg := nvl(v_error_msg, 'Deðer Kaybý özel sözleþmeli Sulh avukat ücreti bulunamadý.');

                                process_result(
                                    2, --p_process_no
                                    0,
                                    9,
                                    -1,
                                    'SAVE_GENERAL_INFO',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_GENERAL_INFO',
                                    p_process_results
                                );
                                return;
                            end;
                        else
                            v_lawyer_amount := 0;
                        end if;
                    end if;

                    if v_lawyer_amount > 0 then
                        alz_lawfile_utils.lawyer_trans_insert(p_law_file_no,
                                                              v_rec.general_info_rec.lawyer_id,
                                                              v_lawyer_amount,
                                                              p_user_name,
                                                              p_process_results);

                        if p_process_results is not null then
                            select count(1)
                              into v_error_count
                              from table(p_process_results)
                             where type = -1;

                            if v_error_count > 0 then
                                rollback;
                                return;
                            end if;
                        end if;
                    end if;
                end if;
            end if;
        end if;

        if v_type = 'INSERT' and
           p_rec.general_info_rec.ticket_id is not null
        then
            open c_ticket(p_rec.general_info_rec.ticket_id);
            fetch c_ticket
            into v_law_file_no, v_uyap_id, v_source;
            close c_ticket;

            select count(*)
              into v_count
              from koc_law_bases
             where ticket_id = p_rec.general_info_rec.ticket_id
               and law_file_no <> p_law_file_no;

            if v_law_file_no is not null then
                v_error_msg := 'Hukuk dosyasý ile eþleþen bir iþten yeni dosya açýlamaz.';

                process_result(
                    100, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;

            elsif v_count > 0 then

                select law_file_no
                  into v_law_file_no
                  from koc_law_bases
                 where ticket_id = p_rec.general_info_rec.ticket_id
                   and law_file_no <> p_law_file_no;

                v_error_msg := p_rec.general_info_rec.ticket_id||' nolu iþ için önceden '||v_law_file_no||' nolu hukuk dosyasý oluþturulduðu için yeni dosya açamazsýnýz.';

                process_result(
                    100, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;

            update alz_law_ticket
               set lawfile_no = p_law_file_no
             where ticket_id = p_rec.general_info_rec.ticket_id
                or parent = p_rec.general_info_rec.ticket_id;

            if v_source = 'RUCU' then

                alz_law_ticket_process_utils.update_ticket_status(p_rec.general_info_rec.ticket_id, 'CLOSED', p_user_name, p_process_results);

                if p_process_results is not null then
                    select count(1)
                      into v_error_count
                      from table(p_process_results)
                     where type = -1;

                    if v_error_count > 0 then
                        rollback;
                        return;
                    end if;
                end if;

            elsif v_source = 'TAHKIM' then

                update alz_law_ticket
                   set lawfile_no = p_law_file_no
                 where lawfile_no is null
                   and court_file_no = (select court_file_no from alz_law_ticket where ticket_id = p_rec.general_info_rec.ticket_id);

            elsif v_source in ('UYAP') then

                update alz_law_ticket
                   set lawfile_no = p_law_file_no
                 where lawfile_no is null
                   and uyap_dosya_id = v_uyap_id;
            end if;

        end if;

        --Dahili avukat atamasý
        if v_type = 'INSERT' then
            if nvl(v_rec.general_info_rec.in_lawyer_id, 0) = 0 then
                begin
                    --tmp_log('ALZ_LITIGATION_UTILS', 'SAVE_BRE_INFO', 'p_law_file_no: '||p_law_file_no);
                    v_bre_unique_key := p_law_file_no||'-'||substr( TO_CHAR (SYSTIMESTAMP,'HH24MISSFF'),1,14) ;
                    save_bre_info(v_bre_unique_key, p_user_name, v_rec);
                    litigation_bre_client.find_assign_inlawyer_group(v_bre_unique_key, v_rec.general_info_rec.in_lawyer_group, v_error_msg);

                    if v_error_msg is not null then
                        delete_bre_info(v_bre_unique_key);
                        rollback;
                        v_error_msg := 'BRE: Dahili avukat grubu bulunurken hata: '||v_error_msg;

                        process_result(
                            101, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAWFILE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                            p_process_results
                        );
                        return;
                    end if;

                    --Açan kullanýcý BREde bulunan grupta mý kontrolü (Baðlý dosya hariç)
                    begin
                        select gur.group_code
                          into v_in_lawyer_group
                          from alz_lawyers al,
                               alz_law_group_user_rel gur
                         where al.aznet_user = gur.username
                           and gur.username = p_user_name
                           and gur.group_code = v_rec.general_info_rec.in_lawyer_group
                           and not exists
                           (
                           select 1
                             from koc_law_bases
                            where law_file_no = v_rec.general_info_rec.related_law_file_no
                              and in_lawyer_group = v_rec.general_info_rec.in_lawyer_group
                           );

                    exception when others then
                        v_in_lawyer_group := null;
                    end;

                    if v_in_lawyer_group is null then
                        litigation_bre_client.find_assign_inlawyer_info(v_bre_unique_key, v_rec.general_info_rec.in_lawyer_group, v_lawyer_user, v_law_sf_group, v_error_msg);

                        delete_bre_info(v_bre_unique_key);

                        if v_error_msg is not null then
                            rollback;
                            v_error_msg := 'Dahili avukat atamasý yapýlýrken hata: '||v_error_msg;

                            process_result(
                                101, --p_process_no
                                0,
                                9,
                                -1,
                                'SAVE_LAWFILE',
                                v_error_msg,
                                v_error_msg,
                                null,
                                null,
                                'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                p_process_results
                            );
                            return;
                        end if;

                        if v_law_sf_group = 'Maddi' then
                            v_rec.general_info_rec.law_sf_group := 'M';
                        elsif v_law_sf_group = 'Bedeni' then
                            v_rec.general_info_rec.law_sf_group := 'B';
                        end if;

                    else
                        v_lawyer_user := p_user_name;
                        delete_bre_info(v_bre_unique_key);
                    end if;

                    if v_rec.general_info_rec.in_lawyer_group is null or
                       v_lawyer_user is null
                    then
                        rollback;
                        v_error_msg := 'Dahili avukat atamasý yapýlamadý';

                        process_result(
                            102, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAWFILE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                            p_process_results
                        );
                        return;
                    end if;

                    begin
                        select id,
                               name_surname
                          into v_rec.general_info_rec.in_lawyer_id,
                               v_rec.general_info_rec.in_lawyer_name
                          from alz_lawyers
                         where aznet_user = v_lawyer_user;

                    exception when others then
                        rollback;
                        v_error_msg := 'Dahili avukat tanýmý bulunamadý: '||v_lawyer_user;

                        process_result(
                            103, --p_process_no
                            0,
                            9,
                            -1,
                            'SAVE_LAWFILE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                            p_process_results
                        );
                        return;
                    end;

                    update koc_law_bases
                      set in_lawyer = v_rec.general_info_rec.in_lawyer_id,
                          in_lawyer_group = v_rec.general_info_rec.in_lawyer_group,
                          law_sf_group = v_rec.general_info_rec.law_sf_group
                    where law_file_no = p_law_file_no;

                exception when others then
                    rollback;
                    v_error_msg := 'Dahili avukat atamasý yapýlýrken hata oldu: '||substr(SQLERRM, 1, 950);

                    process_result(
                        105, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;
                end;

            end if;

            if nvl(v_rec.general_info_rec.in_lawyer_id, 0) = 0 then
                rollback;
                v_error_msg := 'Uygun dahili avukat bulunamadýðý için dahili avukat seçimi yapýlarak kayýt yapýlmalýdýr.';

                process_result(
                    106, --p_process_no
                    0,
                    9,
                    -1,
                    'SAVE_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
                return;
            end if;
        end if;

        --Dahili avukat güncellenirken izinde mi kontrolü
        if v_in_lawyer_group is null and --Açan kullanýcý dahili avukat grubunda deðilse
           ((v_old_rec is null and v_rec.general_info_rec.in_lawyer_id is not null) or
            nvl(v_old_rec.general_info_rec.in_lawyer_id, -1) <> v_rec.general_info_rec.in_lawyer_id)
        then
            select count(1)
              into v_count
              from alz_lawyers al,
                   alz_law_ticket_user_status tus
             where al.id = v_rec.general_info_rec.in_lawyer_id
               and al.aznet_user = tus.user_id
               and tus.status = 'IZINDE'
               and sysdate between validity_start_date and nvl(validity_end_date, sysdate);

            --2 numaralý soru
            if v_count > 0 then
                if nvl(alz_base_function_utils.question_answer(p_simple_questions, 2), '-1') = '0' then
                    rollback;

                    if v_type = 'INSERT' then
                        p_law_file_no := null;
                    end if;
                    v_error_msg := 'Kayýt iþlemi isteðiniz üzere iptal edilmiþtir.';

                    process_result(
                        4, --p_process_no
                        0,
                        9,
                        -1,
                        'SAVE_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                        p_process_results
                    );
                    return;

                elsif nvl(alz_base_function_utils.question_answer(p_simple_questions, 2), '-1') != '1' then

                    if p_simple_questions is null then
                        p_simple_questions := customer.simple_question_table();
                    end if;

                    p_simple_questions.extend;
                    v_qst_cnt := p_simple_questions.count;
                    p_simple_questions(v_qst_cnt) :=
                        customer.simple_question_rec
                        (
                            2,
                            v_rec.general_info_rec.in_lawyer_name||' adlý dahili avukat izinlidir, yine de kaydetmek istiyor musunuz?',
                            1,
                            null,
                            null
                        );

                    if v_type = 'INSERT' then
                        p_law_file_no := null;
                    end if;

                    rollback;
                    return;
                end if;
            end if;
        end if;

        --Maddi Bedeni atamasý
        if v_rec.general_info_rec.supplier_type = 'HDT' and
           nvl(v_rec.general_info_rec.in_lawyer_id, 0) > 0 and
           v_rec.general_info_rec.in_lawyer_group is not null and
           v_rec.general_info_rec.law_sf_type != 'O' and
           v_rec.general_info_rec.law_sf_group is null
        then
            update koc_law_bases
               set law_sf_group = decode(v_rec.general_info_rec.in_lawyer_group, 'LMHDTMAUZ', 'M', 'LMHDTBEUZ', 'B')
             where law_file_no = p_law_file_no;
        end if;

        if v_type = 'INSERT' and
           p_rec.general_info_rec.ticket_id is not null
        then
            -- iþi yeniden atama kurgusuna sokma kýsmýdýr
            if v_source not in ( 'RUCU' ) then
                reassign_related_tickets( p_law_file_no => p_law_file_no,
                                      p_ticket_id =>  p_rec.general_info_rec.ticket_id,
                                      p_user_name => p_user_name,
                                      p_ref_code => 'REJECTED_FILE_REASSIGN',
                                      p_process_results => p_process_results);
                begin
                    v_count := p_process_results.count;
                exception when others then
                    v_count := 0;
                end;
                if v_count > 0 then
                    if p_process_results(1).type = -1 then
                        rollback;
                        v_error_msg := 'Oluþan iþin yeniden atamasý yapýlýrken sorun oluþtu.' ;
                        process_result(
                                    31,
                                    0,
                                    9,
                                    -1,
                                    'SAVE_LAWFILE',
                                    v_error_msg,
                                    v_error_msg,
                                    null,
                                    null,
                                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                                    p_process_results
                                );
                        return;
                    end if;
                end if;
            end if;
            -- iþi yeniden atama kurgusuna sokma kýsmýdýr
        end if;

         -- harici avukat yeni bir dosya oluþturduðunda otorizasyona düþecek kayýtlar için eklendi
        if v_ext_control > 0 and
           v_type = 'INSERT'
        then
            --buradan
            select count(1)
            into v_auth_count
            from alz_law_auth
            where LAWFILE_NO = p_law_file_no
            and ticket_id is null
            and is_approved = 0
            and is_cancelled = 0;

            if v_auth_count > 0 then
                begin
                    select aznet_user
                    into v_approve_lawyer
                    from alz_lawyers
                    where  id = v_rec.GENERAL_INFO_REC.IN_LAWYER_ID
                    and aznet_user is not null ;
                exception when others then
                    rollback;
                    v_error_msg := 'Otorizasyon kaydý atýlýrken hata oldu: Dahili avukat bulunamadý.';

                    process_result(
                        20, --p_process_no
                        2,
                        9,
                        -1,
                        'SEND_APPROVE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                        p_process_results
                    );
                    return;
                end;

                alz_law_ticket_process_utils.create_ticket(
                                                        p_source_type       => v_auth_ticket_type,
                                                        p_assigned_user     => v_approve_lawyer ,
                                                        p_param_id          => p_law_file_no,
                                                        p_deadline          => trunc( add_months(sysdate+3,1) , 'MONTH' )-1, -- ayýn son iki gunuyse diðer aya sarksýn
                                                        p_subject           => p_law_file_no||' dosyasý açýlýrken otorizasyon onayýna düþmüþtür.' ,
                                                        p_create_user       => p_user_name,
                                                        p_arrival_date      => SYSDATE,
                                                        p_department        => v_old_rec.general_info_rec.supplier_type ,
                                                        p_new_ticket_id     => p_create_ticket_id,
                                                        p_process_results   => p_process_results);
                begin
                    v_count := p_process_results.count;
                exception when others then
                    v_count := 0;
                end;

                if v_count > 0 then
                    if p_process_results(1).type = -1 then
                        rollback;
                        v_error_msg := 'Ýþ listesine Otorizasyon kaydý atýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;

                        process_result(
                            20, --p_process_no
                            2,
                            9,
                            -1,
                            'SEND_APPROVE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                            p_process_results
                        );
                        return;
                    end if;
                end if;

                update koc_law_bases
                set is_approved= 2
                where law_file_no= p_law_file_no ;

                update alz_law_auth
                set ticket_id = p_create_ticket_id
                where LAWFILE_NO = p_law_file_no
                and ticket_id is null
                and is_approved = 0
                and is_cancelled = 0;

                v_authed :=1;
            end if;
        end if;

        if v_authed = 0 and
           nvl(v_rec.general_info_rec.in_lawyer_id, 0) > 0 and
           (v_old_rec is null or v_old_rec.general_info_rec is null or nvl(v_old_rec.general_info_rec.in_lawyer_id, 0) <> v_rec.general_info_rec.in_lawyer_id)
        then

            begin
                select aznet_user
                  into v_lawyer_user
                  from alz_lawyers
                 where id = v_rec.general_info_rec.in_lawyer_id;

            exception when others then
                rollback;
                v_error_msg := 'Dahili avukat( '||v_rec.general_info_rec.lawyer_name||') kullanýcýsý bulunamamýþtýr.';

                process_result(
                    20, --p_process_no
                    2,
                    9,
                    -1,
                    'SEND_APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                    p_process_results
                );
                return;
            end;

            for rec_ticket in
                            (
                                select lt.*
                                  from alz_law_ticket lt,
                                       alz_law_ticket_process ltp,
                                       alz_lawyers al
                                 where lt.source = 'DOSYA'
                                   and lt.lawfile_no = p_law_file_no
                                   and lt.ticket_id = ltp.ticket_id
                                   and ltp.close_date is null
                                   and ltp.status = 'OPEN'
                                   and ltp.owner = al.aznet_user
                             )
            loop

                alz_law_ticket_process_utils.update_ticket_status(rec_ticket.ticket_id, 'CLOSED', p_user_name, p_process_results);

                if p_process_results is not null then
                    select count(1)
                      into v_error_count
                      from table(p_process_results)
                     where type = -1;

                    if v_error_count > 0 then
                        rollback;
                        return;
                    end if;
                end if;
            end loop;

            if v_lawyer_user != p_user_name or
               (v_lawyer_user = p_user_name and p_rec.general_info_rec.ticket_id is null)
            then

                if v_ext_control > 0 then
                    v_subject := 'Harici avukat tarafýndan açýlan '||p_law_file_no||' dosyasý size atanmýþtýr.' ;
                else
                    v_subject := p_law_file_no||' dosyasý size atanmýþtýr.';
                end if;

                alz_law_ticket_process_utils.create_ticket(
                                                        p_source_type       => 'DOSYA',
                                                        p_assigned_user     => v_lawyer_user ,
                                                        p_param_id          => p_law_file_no,
                                                        p_deadline          => trunc(sysdate)+10,
                                                        p_subject           => v_subject ,
                                                        p_create_user       => p_user_name,
                                                        p_arrival_date      => SYSDATE,
                                                        p_department        => v_rec.general_info_rec.supplier_type,
                                                        p_new_ticket_id     => p_create_ticket_id,
                                                        p_process_results   => p_process_results);

                begin
                    v_count := p_process_results.count;
                exception when others then
                    v_count := 0;
                end;

                if v_count > 0 then
                    if p_process_results(1).type = -1 then
                        rollback;
                        v_error_msg := 'Ýþ listesine dosya atama kaydý atýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;

                        process_result(
                            20, --p_process_no
                            2,
                            9,
                            -1,
                            'SEND_APPROVE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                            p_process_results
                        );
                        return;
                    end if;
                end if;

                --Dahili avukat dosyayý kendi açtýysa kapalý iþ oluþturulacak
                if v_lawyer_user = p_user_name then
                    alz_law_ticket_process_utils.update_ticket_status(p_create_ticket_id, 'CLOSED', p_user_name, p_process_results);

                    if p_process_results is not null then
                        select count(1)
                          into v_error_count
                          from table(p_process_results)
                         where type = -1;

                        if v_error_count > 0 then
                            rollback;
                            return;
                        end if;
                    end if;
                end if;
            end if;
        end if;
        -- harici avukat boþaltýlýrsa iþler yeniden daðýtýlacak
        if v_type = 'UPDATE' and nvl(v_old_rec.general_info_rec.lawyer_id, 0) <> 0 and v_rec.general_info_rec.lawyer_id is null
        then
            declare
                v_old_lawyer varchar2(100);
            begin
                select user_name
                into v_old_lawyer
                from web_sec_system_users
                where customer_partner_id = v_old_rec.general_info_rec.lawyer_id;

                --üzerindeki dosya ile ilgili açýk iþlerin yonlendirilmesi iþlemi
                reassign_related_tickets( p_old_owner => v_old_lawyer,
                               p_law_file_no => p_law_file_no,
                               p_user_name => p_user_name,
                               p_ref_code => 'EXT_LAWYER_NULL_REASSIGN',
                               p_process_results => p_process_results);
                if p_process_results is not null then
                    select count(1)
                      into v_error_count
                      from table(p_process_results)
                     where type = -1;

                    if v_error_count > 0 then
                        rollback;
                        return;
                    end if;
                end if;
            exception when others then
                /*rollback;
                v_error_msg := 'Eski Harici avukat( '||v_old_rec.general_info_rec.lawyer_name||') kullanýcýsý bulunamamýþtýr.';

                process_result(
                    29, --p_process_no
                    2,
                    9,
                    -1,
                    'SEND_APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                    p_process_results
                );
                return;*/
                null; -- eski kullanýcý yoksa iþ de yoktur diyerek hata verdirmiyoruz.
            end;
        elsif v_type = 'UPDATE' and nvl(v_old_rec.general_info_rec.lawyer_id, 0) = 0 and v_rec.general_info_rec.lawyer_id is not null
        then
            declare
                v_new_lawyer varchar2(100);
            begin

                select user_name
                  into v_new_lawyer
                  from web_sec_system_users
                 where customer_partner_id = v_rec.general_info_rec.lawyer_id;

                 for x_rec in ( select owner from alz_law_ticket lt , alz_law_ticket_process ltp where ltp.status='OPEN' and lt.ticket_id = ltp.ticket_id and lt.lawfile_no = p_law_file_no and substr( ltp.owner_group,1,4) not in ('LMTP','LMMU','LMHA' ,'LMSY') group by owner )
                 loop

                    reassign_related_tickets( p_old_owner => x_rec.owner,
                                          p_law_file_no => p_law_file_no,
                                          p_user_name => p_user_name,
                                          p_ref_code => 'EXT_LAWYER_NEW_REASSIGN',
                                          p_process_results => p_process_results);

                    if p_process_results is not null then
                        select count(1)
                          into v_error_count
                          from table(p_process_results)
                         where type = -1;

                        if v_error_count > 0 then
                            rollback;
                            return;
                        end if;
                    end if;
                 end loop;

            exception when others then
                rollback;
                v_error_msg := 'Yeni Harici avukat( '||v_old_rec.general_info_rec.lawyer_name||') kullanýcýsý bulunamamýþtýr.';

                process_result(
                    29, --p_process_no
                    2,
                    9,
                    -1,
                    'SEND_APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                    p_process_results
                );
                return;
            end;
        end if;

        -- p_description ve p_status dolduruluyor
        p_status := 1;
        select nvl(sum(decode(role_code,
                                'LMRTP', 1,
                                'LMRSY', 1,
                                0
                      )
                   ),
               0) as tp_control
              into v_tp_control
          from koc_auth_user_role_rel
         where username = p_user_name;

        if v_tp_control = 1 then
            p_status := 0;
        end if;

        if v_rec.general_info_rec.law_case_type = 'A' and
           v_rec.general_info_rec.law_file_type in ('HUKUK', 'TESPIT')
        then
            p_description := alz_lawfile_utils.control_claim_expert_report(p_law_file_no);
        end if;

        v_count := auth_check_base_record(p_law_file_no);

        if v_count > 0 then
            p_description := p_law_file_no||' nolu hukuk dosyasýnda onayda bekleyen otorizasyonlar vardýr.';

            if v_ext_control > 0 then
                p_status := 0;
                p_description := p_law_file_no||' nolu hukuk dosyasýnda onayda bekleyen otorizasyonlar olduðu için baþka bir iþlem yapamazsýnýz.';
            end if;
        end if;
        -- p_description ve p_status dolduruldu --

        if v_type = 'INSERT' then
            v_error_msg := 'Hukuk Dosyasý Kaydedilmiþtir.';

            begin
                v_law_note :=
                    LAW_NOTE_TYP(
                        null, --note_id
                        v_error_msg, --text
                        p_user_name,
                        'DOSYA', --source
                        1, --is_privacy
                        sysdate
                    );

                add_law_note
                (
                    p_law_file_no,
                    v_law_note,
                    p_process_results
                );

            exception when others then
                null;
            end;

        else
            v_error_msg := 'Hukuk Dosyasý Güncellenmiþtir.';
        end if;

        if v_ext_control > 0
        then

            v_count := auth_check_base_record(p_law_file_no);

            if v_count > 0 then
                v_error_msg := 'Hukuk Dosyasý dahili avukat otorizasyon onayýna gönderilmiþtir.';
            end if;

            if v_type = 'INSERT' and
               v_rec.court_list is not null and
               v_rec.court_list.count > 0 and
               v_count = 0
            then

                select count(1)
                  into v_count
                  from table(v_rec.court_list)
                 where court_enf_type in ('M', 'I');

                insert_lawyer_expenses(p_law_file_no,
                                       p_user_name,
                                       v_rec.general_info_rec.authority_count,
                                       nvl(v_rec.general_info_rec.is_exploration, 0),
                                       p_process_results);

                if p_process_results is not null then
                    select count(1)
                      into v_error_count
                      from table(p_process_results)
                     where type = -1;

                    if v_error_count > 0 then
                        rollback;
                        return;
                    end if;
                end if;

                update koc_law_bases
                   set is_approved = 1
                 where law_file_no = p_law_file_no;
            end if;

        else
            if nvl(v_rec.general_info_rec.lawyer_id, 0) > 0 and
               (v_old_rec is null or v_old_rec.general_info_rec is null or nvl(v_old_rec.general_info_rec.lawyer_id, 0) <> v_rec.general_info_rec.lawyer_id)
            then

                begin
                    select user_name
                      into v_lawyer_user
                      from web_sec_system_users
                     where customer_partner_id = v_rec.general_info_rec.lawyer_id;

                exception when others then
                    rollback;
                    v_error_msg := 'Harici avukat( '||v_rec.general_info_rec.lawyer_name||') kullanýcýsý bulunamamýþtýr.';

                    process_result(
                        20, --p_process_no
                        2,
                        9,
                        -1,
                        'SEND_APPROVE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                        p_process_results
                    );
                    return;

                end;

                for rec_ticket in
                                (
                                    select lt.*
                                      from alz_law_ticket lt,
                                           alz_law_ticket_process ltp,
                                           alz_law_group_user_rel lgu
                                     where lt.source = 'DOSYA'
                                       and lt.lawfile_no = p_law_file_no
                                       and lt.ticket_id = ltp.ticket_id
                                       and ltp.close_date is null
                                       and ltp.status = 'OPEN'
                                       and lgu.group_code = 'LMHA' --Harici Avukatlar
                                       and ltp.owner = lgu.username
                                 )
                loop

                    alz_law_ticket_process_utils.update_ticket_status(rec_ticket.ticket_id, 'CANCELLED', p_user_name, p_process_results);

                    if p_process_results is not null then
                        select count(1)
                          into v_error_count
                          from table(p_process_results)
                         where type = -1;

                        if v_error_count > 0 then
                            rollback;
                            return;
                        end if;
                    end if;
                end loop;

                alz_law_ticket_process_utils.create_ticket(
                                                        p_source_type       => 'DOSYA',
                                                        p_assigned_user     => v_lawyer_user ,
                                                        p_param_id          => p_law_file_no,
                                                        p_deadline          => sysdate,
                                                        p_subject           => p_law_file_no||' dosyasý size atanmýþtýr.' ,
                                                        p_create_user       => p_user_name,
                                                        p_arrival_date      => SYSDATE,
                                                        p_department        => v_rec.general_info_rec.supplier_type,
                                                        p_new_ticket_id     => p_create_ticket_id,
                                                        p_process_results   => p_process_results);

                begin
                    v_count := p_process_results.count;
                exception when others then
                    v_count := 0;
                end;

                if v_count > 0 then
                    if p_process_results(1).type = -1 then
                        rollback;
                        v_error_msg := 'Ýþ listesine dosya atama kaydý atýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;

                        process_result(
                            20, --p_process_no
                            2,
                            9,
                            -1,
                            'SEND_APPROVE',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                            p_process_results
                        );
                        return;
                    end if;
                end if;

                --Dosya onay durumu siliniyor
                update koc_law_bases
                   set is_approved = null
                 where law_file_no = p_law_file_no;
            end if;
        end if;

--            if v_ext_control = 0 and
--               v_old_rec is not null and
--               v_old_rec.base_info_rec is not null and
--               nvl(v_old_rec.base_info_rec.total_reserve_amount, 0) > 0 and
--               abs(v_rec.base_info_rec.total_reserve_amount * koc_curr_utils.retrieve_effective_parity(v_rec.base_info_rec.cover_amount_swf, base_swift_code, v_date_parity, 36) - v_old_rec.base_info_rec.total_reserve_amount * koc_curr_utils.retrieve_effective_parity(v_old_rec.base_info_rec.cover_amount_swf, base_swift_code, v_date_parity, 36)) >= 100000
--            then
--                v_error_msg := 'Muallak Asýl tutarýnda, 100.000,00 TL üzerinde deðiþiklik olmuþtur.';
--
--                process_result(
--                    20, --p_process_no
--                    2,
--                    9,
--                    100,
--                    'SAVE_LAWFILE',
--                    v_error_msg,
--                    v_error_msg,
--                    null,
--                    null,
--                    'ALZ_AUTHORIZATION_UTILS.SAVE_LAWFILE',
--                    p_process_results
--                );
--            end if;

        save_lawfile_log(p_law_file_no,
                         p_process_results);

        begin
            select law_log_no
              into v_rec.general_info_rec.law_log_no
              from koc_law_bases
             where law_file_no = p_law_file_no;
        exception when others then
            v_rec.general_info_rec.law_log_no  := null;
        end;

        p_rec := v_rec;
        p_simple_questions := null;

        if v_process_results is not null then

            for rec_msg in (select * from table(v_process_results)) loop
                process_result(
                    101, --p_process_no
                    0,
                    9,
                    100,
                    'SAVE_LAWFILE',
                    rec_msg.reason,
                    rec_msg.action,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
                    p_process_results
                );
            end loop;
        end if;

        process_result(
            101, --p_process_no
            0,
            9,
            100,
            'SAVE_LAWFILE',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
            p_process_results
        );
        return;

    exception when others then
       err_code := SQLCODE;
       err_msg := substr(SQLERRM,1,360)||' '||substr(dbms_utility.format_error_backtrace,1,600);
       tmp_log('ALZ_LITIGATION_UTILS', 'SAVE_LAWFILE', 'p_law_file_no: '||p_law_file_no|| ': ' ||err_msg||'--'||substr(dbms_utility.format_error_backtrace,1,600));
       rollback;

       if  err_code = -20101 then
        --v_error_msg := 'Hukuk Dosyasi kaydedilirken hata oldu: '||substr(SQLERRM, 1, 950);
        err_msg_start := instr(err_msg,'ORA-');
        err_msg_end := instr(err_msg,'ORA-',err_msg_start + 10);
        v_error_msg:=substr(err_msg,err_msg_start + 10, err_msg_end - err_msg_start - 10);
       else
        v_error_msg := 'Hukuk Dosyasi kaydedilirken hata oldu: '||substr(SQLERRM, 1, 950);
       end if;

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'SAVE_LAWFILE',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE',
            p_process_results
        );
        return;

    end save_lawfile;

    procedure open_lawfile(p_law_file_no in varchar2,
                           p_user_name in varchar2,
                           p_rec out law_file_all_typ,
                           p_process_results out customer.process_result_table)
    is
        v_error_msg varchar2(1000);
        v_file_close_date date;
        v_status number;
        v_description varchar2(240);
        v_opus_date date := pme_public.opus_date;
        v_clm_status varchar2(10);
        v_sf_desc varchar2(240);
        v_status_id number;
        v_line_id number;

        cursor c_detail is

        select lbd.*
          from koc_law_bases lb,
               koc_law_bases_detail lbd,
               koc_law_sf_type ls
         where lb.law_file_no = p_law_file_no
           and lb.law_file_no = lbd.law_file_no
           and lb.law_file_type = 'A'
           and lb.law_sf_type = ls.law_sf_type
           and nvl(ls.has_claim, 'N') = 'Y'
         order by lbd.detail_no;
    begin
        begin
            select file_close_date
              into v_file_close_date
              from koc_law_bases
             where law_file_no = p_law_file_no;

        exception when others then
            v_error_msg := p_law_file_no||' nolu Hukuk Dosyasý bulunamamýþtýr.';

            process_result(
                1, --p_process_no
                2,
                9,
                -1,
                'OPEN_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.OPEN_LAWFILE',
                p_process_results
            );

            return;
        end;

        if v_file_close_date is null then
            v_error_msg := p_law_file_no||' nolu hukuk dosyasý kapalý olmadýðý için açýlamaz.';

            process_result(
                2, --p_process_no
                2,
                9,
                -1,
                'OPEN_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.OPEN_LAWFILE',
                p_process_results
            );

            return;
        end if;

        if v_file_close_date < trunc(sysdate, 'MM') then
            v_error_msg := 'Sadece bulunduðunuz ay içerisinde kapatýlan dosyalarý açabilirsiniz.';

            process_result(
                3, --p_process_no
                2,
                9,
                -1,
                'OPEN_LAWFILE',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'ALZ_LITIGATION_UTILS.OPEN_LAWFILE',
                p_process_results
            );

            return;
        end if;

        delete
          from alz_law_reserve_history
         where law_file_no = p_law_file_no
           and category = 'KAPAMA';

        update koc_law_bases
           set file_close_date = null,
               status_id = 8,
               user_name = p_user_name
         where law_file_no = p_law_file_no;

        save_lawfile_log(p_law_file_no, p_process_results);

        --Hasar Dosyasý Açma
        for rec_detail in c_detail loop
            begin
                select clm_status
                  into v_clm_status
                  from clm_subfiles
                 where claim_id = rec_detail.claim_id
                   and sf_no = rec_detail.sf_no;

            exception when others then
                rollback;
                v_error_msg := 'Hasar dosya durum bilgisi çekilemedi.';

                process_result(
                    4, --p_process_no
                    0,
                    9,
                    -1,
                    'OPEN_LAWFILE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_LITIGATION_UTILS.OPEN_LAWFILE',
                    p_process_results
                );
                return;
            end;

            -- güncellemede 'CANCELLED' statüsü de eklenmiþ
            if v_clm_status not in ('REOPENED', 'IHBR', 'CANCELLED') and rec_detail.law_type not in (29,30) then
                v_sf_desc := 'Hukuk dosyasý: '||p_law_file_no|| ' iþlemi için açýldý';

                update clm_subfiles
                   set clm_status = 'REOPENED',
                       sf_desc = v_sf_desc
                 where claim_id = rec_detail.claim_id
                   and sf_no = rec_detail.sf_no;

                select clm_status_id_seq.nextval into v_status_id from dual;

                begin
                    select clm_line_id
                      into v_line_id
                      from clm_bases
                     where claim_id = rec_detail.claim_id;

                exception when others then
                    rollback;
                    v_error_msg := rec_detail.detail_no||'. Hasar dosya bilgisi çekilemedi.';

                    process_result(
                        5, --p_process_no
                        0,
                        9,
                        -1,
                        'OPEN_LAWFILE',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'ALZ_LITIGATION_UTILS.OPEN_LAWFILE',
                        p_process_results
                    );
                    return;
                end;

                insert into clm_status_history
                (
                    status_id,
                    claim_id,
                    clm_line_id,
                    clm_level,
                    clm_status,
                    csh_date,
                    csh_username,
                    sf_no,
                    trans_no,
                    csh_comment
                )
                values
                (
                    v_status_id,
                    rec_detail.claim_id,
                    v_line_id,
                    'SUBFILE',
                    'REOPENED',
                    v_opus_date,
                    p_user_name,
                    rec_detail.sf_no,
                    null,
                    v_sf_desc
                );

                insert into koc_clm_status_history_ext
                (
                    status_id,
                    claim_id,
                    sf_no,
                    clm_status,
                    process_date
                )
                values
                (
                    v_status_id,
                    rec_detail.claim_id,
                    rec_detail.sf_no,
                    'REOPENED',
                    v_opus_date
                );
            end if;
        end loop;

        get_lawfile(
            p_law_file_no,
            p_user_name,
            null,
            v_status,
            v_description,
            p_rec,
            p_process_results
        );

        v_error_msg := 'Hukuk Dosyasý Açýlmýþtýr.';

        process_result(
            100, --p_process_no
            0,
            9,
            100,
            'OPEN_LAWFILE',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.OPEN_LAWFILE',
            p_process_results
        );

    end open_lawfile;

    --Hukuk Log Bilgileri kaydetme
    procedure save_lawfile_log(p_law_file_no in varchar2,
                               p_process_results out customer.process_result_table)
    is
      v_law_bordro_no  number;
      v_error_msg varchar2(1000);
    begin

        select LAW_BORDRO_SEQ.nextval into v_law_bordro_no  from dual;

        UPDATE KOC_LAW_BASES        SET LAW_LOG_NO = v_law_bordro_no where law_file_no = p_law_file_no;
        UPDATE KOC_LAW_BASES_DETAIL SET LAW_LOG_NO = v_law_bordro_no where law_file_no = p_law_file_no;

      INSERT INTO CUSTOMER.ALZ_LAW_BASES_LOG (
       LAW_FILE_NO, LAW_SF_TYPE, CASE_DATE,
       FILE_OPEN_DATE, LAW_FILE_TYPE, STATUS_ID,
       CASE_AMOUNT, LAWYER, INTERESTED_PERSON,
       AGENT_ROLE, LAW_COURT_TYPE, LAW_COURT_NO,
       ENFORCEMENT_NO, RELATED_LAW_FILE_NO, USER_NAME,
       PROCESS_DATE, COURT_FILE_NO, ENFORCEMENT_FILE_NO,
       SUPREME_COURT_NO, SUPREME_COURT_FILE_NO, COURT_REVENUE,
       LAWYER_PAYMENT, MASTER_FILE, SUPREME_ENF_NO,
       SUPREME_ENF_FILE_NO, SUP_CASE_DATE, ENF_DATE,
       SUP_ENF_DATE, ENF_AMOUNT, INTEREST_TYPE,
       INTEREST_END_DATE, TARIFF_TYPE, SWIFT_CODE,
       CURRENCY_EXCHANGE_RATE, NOTE_ID, COVER_AMOUNT,
       PAYMENT_DENOUNCE_DATE, RELATED_DEPT, RELATED_DEPT_RESPONSIBLE,
       FILE_CLOSE_DATE, B_E, TRIAL_DATE,
       TRIAL_TIME, NOTE_SUMMARY, CONVERT_FLAG,
       DOUBTFUL_DEBT, MATERIAL, MORAL,
       PHYSICAL, PROSECUTION_NO, PROSECUTION_FILE_NO,
       PROSECUTION_TYPE, ARC_SEND_DATE, IS_IMPORTANT_CASE,
       SUPPLIER_TYPE, LAW_POLICY_TYPE, COURT_DECIDED_AMOUNT,
       COURT_DECIDED_DATE, OTHER_LAWYER_PAYMENT, IS_APPROVED,
       NOTIFICATION_DATE, ACCRUED_INTEREST, FOLLOWING_AMOUNT,
       DISCOUNT_AMOUNT, OTHER_LAWYER_FEE, PROTOCOL_INTEREST_DATE,
       NUMBER_OF_INSTALLMENT, TRANS_EXPLANATION, LAW_STATUS,
       PROCESS_TYPE, STATUS_EXPLANATION, IS_CANCELLED,
       CANCEL_EXPLANATION, LAWYER_EXPLANATION, SUPPLIER_APPROVAL_DATE,
       RECEIVED_DATE, SUPPLIER_APPROVAL_STATUS, NEW_SUPPLIER_TYPE,
       CANCELLED_DELETED_EXP, HYT_LOSS_RESULT_CODE, HYT_LOSS_FILE_YEAR,
       HYT_LOSS_FILE_NO, COURT_RETURN_REVENUE, COURT_CORRECTION_AMOUNT,
       COURT_DECISION_AMOUNT, HLTH_CLAIM_ID, HLTH_SF_NO,
       AUTHORITY_AMOUNT, EXPERTISE_AMOUNT, LBEND_AMOUNT,
       BEPAID_AMOUNT, OPPOSITLAWYERTC, OPPOSITLAWYERNAME,
       FACTURA, LAW_TYPE, LAW_TYPE_EXP,
       LAW_CUR_AMT, LAWYER_COURT, LAWYER_FORECLOSURE,
       LAW_STAMP, LAW_CASH_FEE, LAW_REL_FEE,
       LAW_REL_FEE_PAID, LAW_COLLECT_FEE, LAW_APP_FEE,
       LAW_OTHER_FEE, LAW_BA, IS_SPECAIL_CONTRACT,
       CASE_AMOUNT_SWF, COURT_CORRECTION_AMOUNT_SWF, COVER_AMOUNT_SWF,
       COURT_DECISION_AMOUNT_SWF, AUTHORITY_AMOUNT_SWF, EXPERTISE_AMOUNT_SWF,
       FACTURA_SWF, IS_MAKTU, IS_EXCEPTION,
       IS_INFORM, INTERESTED_AMOUNT, COURT_DECIDED_AMOUNT_SWF,
       IN_LAWYER, INTEREST_BEGIN_DATE, TANIK_SAYISI, LAW_SF_GROUP,
       IS_RUCU, RESERVE_EXT_REFERENCE, LAWYER_ASSIGN_DATE, LAW_CASE_TYPE,
       IN_LAWYER_GROUP, LAW_EXPERTISE_FEE, LAW_BEGINNING_TYPE,
       LAW_LOG_NO)
      SELECT
       LAW_FILE_NO, LAW_SF_TYPE, CASE_DATE,
       FILE_OPEN_DATE, LAW_FILE_TYPE, STATUS_ID,
       CASE_AMOUNT, LAWYER, INTERESTED_PERSON,
       AGENT_ROLE, LAW_COURT_TYPE, LAW_COURT_NO,
       ENFORCEMENT_NO, RELATED_LAW_FILE_NO, user_name,
       process_date, COURT_FILE_NO, ENFORCEMENT_FILE_NO,
       SUPREME_COURT_NO, SUPREME_COURT_FILE_NO, COURT_REVENUE,
       LAWYER_PAYMENT, MASTER_FILE, SUPREME_ENF_NO,
       SUPREME_ENF_FILE_NO, SUP_CASE_DATE, ENF_DATE,
       SUP_ENF_DATE, ENF_AMOUNT, INTEREST_TYPE,
       INTEREST_END_DATE, TARIFF_TYPE, SWIFT_CODE,
       CURRENCY_EXCHANGE_RATE, NOTE_ID, COVER_AMOUNT,
       PAYMENT_DENOUNCE_DATE, RELATED_DEPT, RELATED_DEPT_RESPONSIBLE,
       FILE_CLOSE_DATE, B_E, TRIAL_DATE,
       TRIAL_TIME, NOTE_SUMMARY, CONVERT_FLAG,
       DOUBTFUL_DEBT, MATERIAL, MORAL,
       PHYSICAL, PROSECUTION_NO, PROSECUTION_FILE_NO,
       PROSECUTION_TYPE, ARC_SEND_DATE, IS_IMPORTANT_CASE,
       SUPPLIER_TYPE, LAW_POLICY_TYPE, COURT_DECIDED_AMOUNT,
       COURT_DECIDED_DATE, OTHER_LAWYER_PAYMENT, IS_APPROVED,
       NOTIFICATION_DATE, ACCRUED_INTEREST, FOLLOWING_AMOUNT,
       DISCOUNT_AMOUNT, OTHER_LAWYER_FEE, PROTOCOL_INTEREST_DATE,
       NUMBER_OF_INSTALLMENT, TRANS_EXPLANATION, LAW_STATUS,
       PROCESS_TYPE, STATUS_EXPLANATION, IS_CANCELLED,
       CANCEL_EXPLANATION, LAWYER_EXPLANATION, SUPPLIER_APPROVAL_DATE,
       RECEIVED_DATE, SUPPLIER_APPROVAL_STATUS, NEW_SUPPLIER_TYPE,
       CANCELLED_DELETED_EXP, HYT_LOSS_RESULT_CODE, HYT_LOSS_FILE_YEAR,
       HYT_LOSS_FILE_NO, COURT_RETURN_REVENUE, COURT_CORRECTION_AMOUNT,
       COURT_DECISION_AMOUNT, HLTH_CLAIM_ID, HLTH_SF_NO,
       AUTHORITY_AMOUNT, EXPERTISE_AMOUNT, LBEND_AMOUNT,
       BEPAID_AMOUNT, OPPOSITLAWYERTC, OPPOSITLAWYERNAME,
       FACTURA, LAW_TYPE, LAW_TYPE_EXP,
       LAW_CUR_AMT, LAWYER_COURT, LAWYER_FORECLOSURE,
       LAW_STAMP, LAW_CASH_FEE, LAW_REL_FEE,
       LAW_REL_FEE_PAID, LAW_COLLECT_FEE, LAW_APP_FEE,
       LAW_OTHER_FEE, LAW_BA, IS_SPECAIL_CONTRACT,
       CASE_AMOUNT_SWF, COURT_CORRECTION_AMOUNT_SWF, COVER_AMOUNT_SWF,
       COURT_DECISION_AMOUNT_SWF, AUTHORITY_AMOUNT_SWF, EXPERTISE_AMOUNT_SWF,
       FACTURA_SWF, IS_MAKTU, IS_EXCEPTION,
       IS_INFORM, INTERESTED_AMOUNT, COURT_DECIDED_AMOUNT_SWF,
       IN_LAWYER, INTEREST_BEGIN_DATE, TANIK_SAYISI, LAW_SF_GROUP,
       IS_RUCU,RESERVE_EXT_REFERENCE, LAWYER_ASSIGN_DATE, LAW_CASE_TYPE,
       IN_LAWYER_GROUP, LAW_EXPERTISE_FEE, LAW_BEGINNING_TYPE,
       LAW_LOG_NO
      FROM CUSTOMER.KOC_LAW_BASES  WHERE law_file_no = p_law_file_no;



      INSERT INTO CUSTOMER.ALZ_LAW_BASES_DETAIL_LOG (
       LAW_FILE_NO, DETAIL_NO, CLAIM_ID,
       SF_NO, POLICY_REF, USER_NAME,
       PROCESS_DATE, RECOURSE_AMOUNT, SWIFT_CODE,
       CASE_AMOUNT, ENF_AMOUNT, COVER_AMOUNT,
       COURT_DECIDED_AMOUNT, KONSERVASYON, INTERESTED_AMOUNT,
       LAWYER_AMOUNT, COURT_EXPENSE_AMOUNT, BRUT_AMOUNT,
       HYT_LOSS_RESULT_CODE, HYT_LOSS_FILE_YEAR, HYT_LOSS_FILE_NO,
       COURT_CORRECTION_AMOUNT, COURT_DECISION_AMOUNT, AUTHORITY_AMOUNT,
       EXPERTISE_AMOUNT, LBEND_AMOUNT, BEPAID_AMOUNT,
       FACTURA, LAW_CUR_AMT, LAW_BA,
       LAW_BA_NOCHECK, INTEREST_TYPE, INTEREST_REQUEST_DATE,
       INTEREST_FIXED_DATE, INTEREST_RATE, IS_ADJUSTMENT,
       ADJUSTMENT_RATE, IS_MAKTU, IS_EXCEPTION,
       CASE_AMOUNT_SWF, COURT_CORRECTION_AMOUNT_SWF, COVER_AMOUNT_SWF,
       COURT_DECISION_AMOUNT_SWF, AUTHORITY_AMOUNT_SWF, EXPERTISE_AMOUNT_SWF,
       FACTURA_SWF, COVER_CODE, LAW_TYPE,
       PAYMENT_CLAIM_DATE, IS_INFORM, COURT_DECIDED_AMOUNT_SWF,
       INTEREST_BEGIN_DATE, LAW_BEGINNING_TYPE, PAYMENT_DENOUNCE_DATE,
       LAW_LOG_NO)
      SELECT
       LAW_FILE_NO, DETAIL_NO, CLAIM_ID,
       SF_NO, POLICY_REF, user_name,
       PROCESS_DATE, RECOURSE_AMOUNT, SWIFT_CODE,
       CASE_AMOUNT, ENF_AMOUNT, COVER_AMOUNT,
       COURT_DECIDED_AMOUNT, KONSERVASYON, INTERESTED_AMOUNT,
       LAWYER_AMOUNT, COURT_EXPENSE_AMOUNT, BRUT_AMOUNT,
       HYT_LOSS_RESULT_CODE, HYT_LOSS_FILE_YEAR, HYT_LOSS_FILE_NO,
       COURT_CORRECTION_AMOUNT, COURT_DECISION_AMOUNT, AUTHORITY_AMOUNT,
       EXPERTISE_AMOUNT, LBEND_AMOUNT, BEPAID_AMOUNT,
       FACTURA, LAW_CUR_AMT, LAW_BA,
       LAW_BA_NOCHECK, INTEREST_TYPE, INTEREST_REQUEST_DATE,
       INTEREST_FIXED_DATE, INTEREST_RATE, IS_ADJUSTMENT,
       ADJUSTMENT_RATE, IS_MAKTU, IS_EXCEPTION,
       CASE_AMOUNT_SWF, COURT_CORRECTION_AMOUNT_SWF, COVER_AMOUNT_SWF,
       COURT_DECISION_AMOUNT_SWF, AUTHORITY_AMOUNT_SWF, EXPERTISE_AMOUNT_SWF,
       FACTURA_SWF, COVER_CODE, LAW_TYPE,
       PAYMENT_CLAIM_DATE, IS_INFORM, COURT_DECIDED_AMOUNT_SWF,
       INTEREST_BEGIN_DATE, LAW_BEGINNING_TYPE, PAYMENT_DENOUNCE_DATE,
       LAW_LOG_NO
      FROM CUSTOMER.KOC_LAW_BASES_DETAIL
      WHERE law_file_no = p_law_file_no;

    exception when others then
        rollback;
        v_error_msg := 'Hukuk Log bilgileri kaydedilirken hata oldu: '||SUBSTR(SQLERRM, 1, 950);

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'SAVE_LAWFILE_LOG',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.SAVE_LAWFILE_LOG',
            p_process_results
        );
        return;
    end save_lawfile_log;

    function get_law_log_no(p_law_file_no in varchar2) return number
    is
        v_ret number;
    begin

        select max(law_log_no)
          into v_ret
          from alz_law_bases_log
         where law_file_no = p_law_file_no;

        return v_ret;
    end get_law_log_no;

    function insert_law_generate_token(p_form_name varchar2, p_token varchar2, p_user_name varchar2, p_parameter varchar2) return number
    is

    begin

        insert into alz_law_generate_token
        (
            form_name,
            is_valid,
            token,
            user_name,
            parameter,
            creation_date,
            created_by
        )
        values
        (
            p_form_name,
            1,
            p_token,
            p_user_name,
            p_parameter,
            sysdate,
            p_user_name
        );

        return 1;
    exception when others then
        return 0;

    end insert_law_generate_token;

    procedure update_law_generate_token(p_form_name varchar2,
                                        p_token varchar2,
                                        p_return_value varchar2 default null)
    is
    pragma autonomous_transaction;

    begin

        update alz_law_generate_token
           set return_value = p_return_value,
               is_valid = 0,
               update_date = sysdate
         where form_name = p_form_name
           and token = p_token
           and is_valid = 1;

        commit;
    exception when others then
        null;

    end update_law_generate_token;

    function get_lawfile_general_info(p_law_file_no in varchar2) return law_general_info_typ
    is
        p_list law_general_info_typ;
    begin
        select law_general_info_typ(
                   decode(supplier_type, 'HM', 'KDT', supplier_type),
                   law_case_type,
                   decode(law_file_type,'A','HUKUK','L','HUKUK','TA','TESPIT','TL','TESPIT','C','CEZA'),
                   nvl(is_rucu,0),
                   law_sf_type,
                   koc_law_utils.sf_type_desc(law_sf_type),
                   law_sf_group,
                   reserve_ext_reference,
                   law_type,
                   case  law_type
                     when '18' then
                        law_type_exp
                     else
                        (select explanation from alz_look_up where code = 'LAW_TYPE' and parameter = law_type)
                   end ,
                   lawyer,
                   koc_clm_utils.partner_name_bul(lawyer) ,
                   lawyer_assign_date,
                   in_lawyer,
                   (select name_surname from alz_lawyers where id = in_lawyer),
                   in_lawyer_group,
                   is_specail_contract,
                   file_open_date,
                   status_id,
                   koc_law_utils.status_description(status_id,'G'),
                   file_close_date,
                   related_law_file_no,
                   agent_role,
                   prosecution_type,
                   (select explanation from koc_law_prosecution_type where type_no = prosecution_type),
                   (select b.evolution_code
                        from koc_law_evolution_details a, koc_law_evolution_ref b
                         where a.law_file_no = z.law_file_no
                         and a.evolution_code=b.evolution_code
                         and a.evolution_date =
                                            (select max (evolution_date)
                                               from koc_law_evolution_details c
                                              where c.law_file_no = a.law_file_no)
                                              and rownum <2),
                   (select b.evolution_exp
                        from koc_law_evolution_details a, koc_law_evolution_ref b
                         where a.law_file_no = z.law_file_no
                         and a.evolution_code=b.evolution_code
                         and a.evolution_date =
                                            (select max (evolution_date)
                                               from koc_law_evolution_details c
                                              where c.law_file_no = a.law_file_no)
                                              and rownum <2),
                    get_authorization(z.law_file_no,
                                      'status_id',
                                      null
                                      ), -- status_id_control                   ,
                   get_authorization(z.law_file_no,
                                      'prosecution_type',
                                      null
                                      ),
                   z.ticket_id,
                   null,
                   null,
                   null,
                   lawyer_reference,
                   law_log_no
               )
          into p_list
          from koc_law_bases z
         where law_file_no = p_law_file_no;

        return p_list;

    end get_lawfile_general_info;

function get_law_finance_info_list(p_law_file_no varchar2 ) return sys_refcursor
    is
        v_list sys_refcursor;

    begin

            open v_list for
            select id,process_date, user_name, decode(nvl(is_account,3),1,'Muhasebeleþtirilmiþ',2,'Ýptal',3,'Muhasebeleþtirilmemiþ',55,'Kaydedilenler') as account_exp
              from CUSTOMER.ALZ_LAW_FINANCE_CALC
             where law_file_no = p_law_file_no
             order by id;

        return v_list;
    end get_law_finance_info_list;

    procedure get_law_finance_info(p_law_file_no in varchar2,
                                   p_id number,
                                   p_finance_calc out law_finance_calc_typ,
                                   p_process_results out customer.process_result_table)
     is
        v_claim  law_finance_claim_tbl;
        v_faiz   law_finance_interest_tbl;
        v_claim1  number(1);
        v_error_msg varchar2(50);
    begin

            select  LAW_FINANCE_CALC_TYP(
                   is_claim, payment_denounce_date,
                   law_expertise_fee_date, court_correction_date, court_decision_date, case_date, case_notif_date,
                   payment_date, main_amount,case_amount, court_type, court_type_desc, azs_yks_no,
                   court_file_no, expertise_amount, court_correction_amount, is_tahkim_1_5, is_interest_required,
                   is_lawyer_payment_per_person, is_real_request, is_icra_takibi, is_enforcement_payment, is_interest_detail_required,
                   is_stoppage_included, null, null, calc_main_amount, calc_main_amount_interest, calc_trial_amount, calc_trial_amount_is_saved,
                   calc_lawyer_payment, calc_court_lawyer_payment, calc_court_lawyer_is_saved, calc_expertise_amount, calc_detail_interest,
                   calc_sub_total, calc_enf_payment, calc_enf_court_payment, calc_enf_court_is_saved, calc_tahsil_harci,
                   calc_tahsil_harci_is_saved, calc_enforcement_cost, calc_enforcement_cost_is_saved, calc_after_enf_interest, calc_total_amount,
                   is_calculate, is_paying, id, main_amount_original, null)
             into p_finance_calc
             from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = law_file_no and id = p_id;

        select count(1)
        into v_claim1
        from koc_law_bases a
        where a.law_file_no = p_law_file_no and  a.law_file_no in (select law_file_no from koc_law_bases_detail where law_file_no = a.law_file_no );

        if v_claim1 = 0 then --hasarsýz
           p_finance_calc.v_claim := null;


          select law_finance_interest_typ(
          id, detail_no, interest_expl, interest_base_amount, interest_start_date,
          interest_end_date, interest_type, calculated_interest, is_saved, sira_no)
          bulk collect into v_faiz
          from customer.alz_law_finance_interest
          where id = p_finance_calc.id order by sira_no;

          p_finance_calc.v_faiz := v_faiz;

        else

          p_finance_calc.v_faiz := null;

           select law_finance_claim_typ
           (id, detail_no, ext_reference, case_amount, main_amount,
           court_correction_amount, interest_begin_date, interest_type, interest_amount, tahsil_harci,
           cost, court_lawyer_payment, enf_payment, null, main_amount_original,null,null,null, null)
           bulk collect into v_claim
           from CUSTOMER.ALZ_LAW_FINANCE_CLAIM where id = p_finance_calc.id order by detail_no;

           for i in 1..v_claim.count loop
              select law_finance_interest_typ(
              id, detail_no, interest_expl, interest_base_amount, interest_start_date,
              interest_end_date, interest_type, calculated_interest, is_saved, sira_no)
              bulk collect into v_faiz
              from customer.alz_law_finance_interest
              where id = p_finance_calc.id and detail_no = v_claim(i).detail_no order by sira_no;

             v_claim(i).v_faiz := v_faiz;
           end loop;

           p_finance_calc.v_claim := v_claim;

        end if;

    exception when others then
           v_error_msg :='Kapak dosyasý bilgisini getirirken hata oluþtu';
           process_result(
            1, --p_process_no
            0,
            9,
            -1,  -- -1 hata demek
            'KAPAK HESABI HASARLI HESAP',
             substr(sqlerrm,1,999),
            v_error_msg,
            null,
            null,
            'alz_litigation_utils1.get_law_finance_info',
            p_process_results
        );


    end get_law_finance_info;


     --kapak hesabý
procedure get_set_law_finance_info(p_law_file_no in varchar2,
                                   p_user_name in varchar2,
                                   p_finance_calc in out law_finance_calc_typ,
                                   p_process_results out customer.process_result_table)

    is
      v_ind number:=0;
      v_error_msg   varchar2(1000);
      v_law_finance_calc_typ LAW_FINANCE_CALC_TYP;
      p_date date := trunc(sysdate);
      v_court_enf_type varchar2(30);
      check_law        number;
      v_file_close_date date;
      l_paid_amount  number :=0;
      l_return_amount number := 0;
      v_rec_sort_type          KOC_LAW_RESERVE_UTILS.rec_sort_type;
      p_law_base_dtl_records   KOC_LAW_RESERVE_UTILS.koc_law_bases_detail_type;
      v_count number;
      v_min_amount_mahkeme  number;
      v_min_amount_icra  number;
      v_court_enf_no varchar2(20);
      v_tariff_rate number;
      v_icra_7_gun  number;
      temp_lawyer_payment number;
      saved_calc_court_law_payment number;
      ratio number;
      zet number;
      v_court_decision_amount  number;
      sayac number;
      v_law_expertise_fee  number;
      v_law_expertise_fee_tot number;
      p_finance_calc1 law_finance_calc_typ;
      v_main_amount_original number := 0;
      v_calc_court_lawyer_payment number := 0;
      v_expertise_amount   number;
      v_faiz number;
      v_vekalet_ucreti number := 0;
      main_amount_ratio  number;
      v_odeme_count number;
      x_law_type varchar2(20);
      x_maktu  varchar2(20);
      x_court_decision_amount   number;
      has_no_lawyer_payment  number := 0;
      v_lawyer_court  number;
      xxx number := 1;
      v_trial_cost number;
      v_exp_charge number;
      v_calc_trial_amount_tot number;
      v_interest_type1 varchar2(10);
      v_hespi_maktu_mu number;
      v_hespi_adet number;
      v_hespi_maktu_mu2 number;
      v_hespi_maktu_count number;
      v_law_case_type  varchar2(20);
      v_is_calculatable number;
      v_is_karar  number := 0 ;
      v_main_amount_original1 number := 0;
      v_karar_count number := 0;
      v_hespi_ihtiyaten number;
      v_tedavi_count number := 0;

      type details_finance is record(ext_reference VARCHAR2(20), maktu_mu number, interest_typ varchar2(5),karar_mi number,tedavi_mi number);
      type t_details_finance is table of details_finance;
      v_details_finance details_finance;
      v_t_details_finance t_details_finance := t_details_finance();

      v_ratio number;
      v_diff number;
      v_total_trial_amount number;
      v_total_enforcement_cost number;
      v_total_expertise_cost number;
      v_total_temp number;
      v_total_vekalet number;
    begin

     --select nvl(MAX(id),0) + 1 into p_finance_calc.id from ALZ_LAW_FINANCE_CALC;

    if p_law_file_no is null then --kapak hesabý hesap makinesi, bu durumda herley serbest, tüm inputlar karþý taraftan geldiði için hesabý buna göre yap
    --hesap makinesi

      p_finance_calc.main_amount := nvl(p_finance_calc.main_amount,0);

      begin
      /*select court_enf_type
      into  v_court_enf_type
      from koc_law_court_type where court_type_no = p_finance_calc.court_type;*/

         select nvl(b.court_enf_type, substr(a.court_unit_code, 1, 1)) as court_enf_type  --a.court_unit_code court_enf_type'a karþilýk geliyor
          into  v_court_enf_type
          from alz_law_court_unit_def a,
               alz_law_court_uyap_rel b
         where a.court_unit_code = b.court_unit_code(+)
           and (b.court_enf_type in ('M', 'I') or substr(a.court_unit_code, 1, 1) in ('M', 'I'))
           and  a.court_unit_code ='M018';

      exception when others then--java tarafýndan gelen kodda datayý bulamazsa(null gelirse) sen varsayýlan bir mahkeme tipi ata
        select b.court_enf_type,
               a.court_unit_code
          into v_court_enf_type,
               p_finance_calc.court_type
          from alz_law_court_unit_def a,
               alz_law_court_uyap_rel b
         where a.court_unit_code = b.court_unit_code
           and b.court_enf_type = 'M'
           and a.court_unit_code = '0920';
      end;

      select min_amount
        into v_min_amount_mahkeme
        from alz_law_court_uyap_payment_def
       where court_unit_code = p_finance_calc.court_type
         and p_date between validity_start_date and nvl(validity_end_date, sysdate);

      -- Ýcra tekil olduðu için default o kullanýlýyor
      select min_amount
        into v_min_amount_icra
        from alz_law_court_uyap_payment_def
       where court_unit_code = '1101'
         and p_date between validity_start_date and nvl(validity_end_date, sysdate);

       if nvl(p_finance_calc.is_claim,0) = 0 then  --hasarsýz hesap makinesi

         if nvl(p_finance_calc.main_amount,0) = 0 and nvl(p_finance_calc.is_trial_only, 0) = 0 then
              v_error_msg :='Asýl alacak ödemesini 0 giremezsiniz, masraf ödeyecekseniz "Sadece Masraf Ödemesi Yapýlacak" seçeneðini seçiniz';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                );
                    return;

         end if;

         --p_finance_calc.is_calculate := 1;
       --vekalet hesaplama********************************
         p_finance_calc.calc_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.main_amount);

            if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 0 then --sadece mahkeme vekalet ücreti sabit olarak seçilmediyse hesapla
              if  p_finance_calc.is_real_request = 1 then
                 p_finance_calc.calc_court_lawyer_payment := 0;
              elsif p_finance_calc.is_real_request = 0 then
                if p_finance_calc.is_lawyer_payment_per_person = 1 then --hasarsýz hukuklarda vekalet þahýs bazýnda evet ve hayýr için tek asýl alcak olduðu için iki ayrý hesaplama yapýlmýyor
                    p_finance_calc.calc_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.main_amount);
                       if  p_finance_calc.main_amount = 0 then
                          p_finance_calc.calc_court_lawyer_payment := 0;
                       elsif p_finance_calc.calc_lawyer_payment < v_min_amount_mahkeme then
                          p_finance_calc.calc_court_lawyer_payment := v_min_amount_mahkeme;
                       else
                           p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_lawyer_payment;
                       end if;
                elsif p_finance_calc.is_lawyer_payment_per_person = 0 then

                  if  v_court_enf_type = 'M' and  p_finance_calc.court_type in ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and p_finance_calc.main_amount  <= v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.main_amount/5,2);
                  elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type  in ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme/5,2);
                  elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment/5,2);
                  elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and p_finance_calc.main_amount  <= v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.main_amount,2);
                  elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme,2);
                  elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment,2);
                  elsif    p_finance_calc.main_amount         < v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := p_finance_calc.main_amount;
                  elsif p_finance_calc.calc_lawyer_payment < v_min_amount_mahkeme then
                    p_finance_calc.calc_court_lawyer_payment := v_min_amount_mahkeme;
                  elsif p_finance_calc.calc_lawyer_payment >= v_min_amount_mahkeme then
                     p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_lawyer_payment;
                  end if;
                end if;
              end if;

            /*    SELECT ICODE --INTO V_STOPAJ
                FROM KOC_CLM_LOOKUP
                WHERE TYPE=1509;*/

              if  p_finance_calc.is_stoppage_included = 1 then
                p_finance_calc.calc_court_lawyer_payment :=  trunc(p_finance_calc.calc_court_lawyer_payment / 1.20408,2); --to_do stopaj sabitini bir loolup tablosuna kaydet
              end if;


              if  v_court_enf_type = 'I' and  p_finance_calc.court_type = '1101' then --icra ise mahkeme vekalet ücreti 0 olur
                p_finance_calc.calc_court_lawyer_payment := 0 ;
              end if;
            end if;
       --vekalet hesaplama********************************



       --faiz hesaplama*************************************
         p_finance_calc.calc_expertise_amount := nvl(p_finance_calc.expertise_amount,0);

           if nvl(p_finance_calc.is_calculate,0) = 0 then
             p_finance_calc.v_faiz := law_finance_interest_tbl();
             p_finance_calc.v_faiz.extend(6);
             p_finance_calc.v_faiz(1) := LAW_FINANCE_INTEREST_TYP(null,null,null,null,null,null,null,null,null,null);
             p_finance_calc.v_faiz(1).id := null;
             p_finance_calc.v_faiz(1).detail_no := 0;
             p_finance_calc.v_faiz(1).interest_expl := 'Ana Para Faizi';
             p_finance_calc.v_faiz(1).interest_type := 'Y';
             p_finance_calc.v_faiz(1).is_saved := 0;
             p_finance_calc.v_faiz(1).is_interest_expl_saved := 0;
             p_finance_calc.v_faiz(2) := p_finance_calc.v_faiz(1);
             p_finance_calc.v_faiz(3) := p_finance_calc.v_faiz(1);
             p_finance_calc.v_faiz(4) := p_finance_calc.v_faiz(1);
             p_finance_calc.v_faiz(5) := p_finance_calc.v_faiz(1);
             p_finance_calc.v_faiz(6) := p_finance_calc.v_faiz(1);
             p_finance_calc.v_faiz(2).interest_expl := 'Ferilere Ýliþkin Faiz';
             p_finance_calc.v_faiz(3).interest_expl := 'Ýcra Sonrasý Ana Para Faizi';
             p_finance_calc.v_faiz(4).interest_expl := 'Ýcra sonrasý Ferilere Faiz';
             p_finance_calc.v_faiz(5).interest_expl := 'Islah Faizi';
             p_finance_calc.v_faiz(6).interest_expl := 'Eksper Faizi';
           end if;

           if p_finance_calc.is_calculate is null then
             p_finance_calc.is_calculate :=  nvl(p_finance_calc.is_calculate,0);
           end if;

           if p_finance_calc.is_calculate in (0,1) then  --is_saved=1 ise faiz baþ. tarihi bit. tarihini kontrol etmiyorum, save edilmiþ deðeri girdilerden baðýmsýz olarak elimde tutuyorum

                --ana para
                if p_finance_calc.v_faiz(1).is_saved = 0 then
                  p_finance_calc.v_faiz(1).interest_start_date := p_finance_calc.payment_denounce_date;
                  /*if p_finance_calc.is_calculate in (0) then
                    p_finance_calc.v_faiz(1).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                  end if;*/
                  p_finance_calc.v_faiz(1).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

                   if p_finance_calc.v_faiz(1).interest_start_date is null or p_finance_calc.v_faiz(1).interest_end_date is null then
                     p_finance_calc.v_faiz(1).calculated_interest := 0;
                   else
                       if p_finance_calc.court_correction_date is null then
                        p_finance_calc.v_faiz(1).interest_base_amount := nvl(p_finance_calc.main_amount,0);
                       else
                        p_finance_calc.v_faiz(1).interest_base_amount := nvl(p_finance_calc.main_amount,0) - nvl(p_finance_calc.court_correction_amount,0);
                       end if;
                      interest_amount(p_finance_calc.v_faiz(1).interest_base_amount, p_finance_calc.v_faiz(1).interest_type, p_finance_calc.v_faiz(1).interest_start_date, p_finance_calc.v_faiz(1).interest_end_date, p_finance_calc.v_faiz(1).calculated_interest);
                   end if;
                end if;

                --ferilere ilþkin faiz
                if p_finance_calc.v_faiz(2).is_saved = 0 then
                  p_finance_calc.v_faiz(2).interest_start_date := p_finance_calc.court_decision_date;
                  /*if p_finance_calc.is_calculate in (0) then
                    p_finance_calc.v_faiz(2).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                  end if;*/
                    p_finance_calc.v_faiz(2).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

                   if p_finance_calc.v_faiz(2).interest_start_date is null or p_finance_calc.v_faiz(2).interest_end_date is null then
                     p_finance_calc.v_faiz(2).calculated_interest := 0;
                   else
                      p_finance_calc.v_faiz(2).interest_base_amount := nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_trial_amount,0);
                      interest_amount(p_finance_calc.v_faiz(2).interest_base_amount, p_finance_calc.v_faiz(2).interest_type, p_finance_calc.v_faiz(2).interest_start_date, p_finance_calc.v_faiz(2).interest_end_date, p_finance_calc.v_faiz(2).calculated_interest);
                   end if;
                end if;


                --icra sonrasý ana para faizi
                if p_finance_calc.v_faiz(3).is_saved = 0 then
                   p_finance_calc.v_faiz(3).interest_base_amount := nvl(p_finance_calc.main_amount,0);
                   if p_finance_calc.case_date is not null then
                    p_finance_calc.v_faiz(3).interest_start_date := p_finance_calc.case_date + 1 ;
                   end if;
                  /*if p_finance_calc.is_calculate in (0) then
                    p_finance_calc.v_faiz(3).interest_end_date := p_finance_calc.payment_date;
                  end if;*/

                    p_finance_calc.v_faiz(3).interest_end_date := p_finance_calc.payment_date;

                   if p_finance_calc.v_faiz(3).interest_start_date is null or p_finance_calc.v_faiz(3).interest_end_date is null then
                    p_finance_calc.v_faiz(3).calculated_interest := 0;
                   else
                      interest_amount(p_finance_calc.v_faiz(3).interest_base_amount, p_finance_calc.v_faiz(3).interest_type, p_finance_calc.v_faiz(3).interest_start_date, p_finance_calc.v_faiz(3).interest_end_date, p_finance_calc.v_faiz(3).calculated_interest);
                   end if;
                end if;


                --icra sonrasý ferilere faiz
                if p_finance_calc.v_faiz(4).is_saved = 0 then
                   p_finance_calc.v_faiz(4).interest_base_amount := nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_expertise_amount,0);
                   if p_finance_calc.case_date is not null then
                    p_finance_calc.v_faiz(4).interest_start_date := p_finance_calc.case_date + 1 ;
                   end if;
                  /*if p_finance_calc.is_calculate in (0) then
                    p_finance_calc.v_faiz(4).interest_end_date := p_finance_calc.payment_date;
                  end if;*/

                    p_finance_calc.v_faiz(4).interest_end_date := p_finance_calc.payment_date;

                   if p_finance_calc.v_faiz(4).interest_start_date is null or p_finance_calc.v_faiz(4).interest_end_date is null then
                     p_finance_calc.v_faiz(4).calculated_interest := 0;
                   else
                      interest_amount(p_finance_calc.v_faiz(4).interest_base_amount, p_finance_calc.v_faiz(4).interest_type, p_finance_calc.v_faiz(4).interest_start_date, p_finance_calc.v_faiz(4).interest_end_date, p_finance_calc.v_faiz(4).calculated_interest);
                   end if;
                end if;


                --ýslah faizi
                if p_finance_calc.v_faiz(5).is_saved = 0 then
                  p_finance_calc.v_faiz(5).interest_base_amount := nvl(p_finance_calc.court_correction_amount,0);
                  p_finance_calc.v_faiz(5).interest_start_date := p_finance_calc.court_correction_date;
                  /*if p_finance_calc.is_calculate in (0) then
                    p_finance_calc.v_faiz(5).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                  end if;*/

                    p_finance_calc.v_faiz(5).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

                   if p_finance_calc.v_faiz(5).interest_start_date is null or p_finance_calc.v_faiz(5).interest_end_date is null then
                     p_finance_calc.v_faiz(5).calculated_interest := 0;
                   else
                      interest_amount(p_finance_calc.v_faiz(5).interest_base_amount, p_finance_calc.v_faiz(5).interest_type, p_finance_calc.v_faiz(5).interest_start_date, p_finance_calc.v_faiz(5).interest_end_date, p_finance_calc.v_faiz(5).calculated_interest);
                   end if;
                end if;


                --eksper faizi
                if p_finance_calc.v_faiz(6).is_saved = 0 then
                   p_finance_calc.v_faiz(6).interest_base_amount := nvl(p_finance_calc.expertise_amount,0);
                   p_finance_calc.v_faiz(6).interest_start_date := p_finance_calc.law_expertise_fee_date;
                  /*if p_finance_calc.is_calculate in (0) then
                    p_finance_calc.v_faiz(6).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                  end if;*/

                    p_finance_calc.v_faiz(6).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

                   if p_finance_calc.v_faiz(6).interest_start_date is null or p_finance_calc.v_faiz(6).interest_end_date is null then
                     p_finance_calc.v_faiz(6).calculated_interest := 0;
                   else
                      interest_amount(p_finance_calc.v_faiz(6).interest_base_amount, p_finance_calc.v_faiz(6).interest_type, p_finance_calc.v_faiz(6).interest_start_date, p_finance_calc.v_faiz(6).interest_end_date, p_finance_calc.v_faiz(6).calculated_interest);
                   end if;
                end if;


            end if;

           --ana para
            p_finance_calc.calc_main_amount := p_finance_calc.main_amount;

            --ana para faizi
            if nvl(p_finance_calc.is_interest_required,0) = 1 then
             p_finance_calc.calc_main_amount_interest :=  p_finance_calc.v_faiz(1).calculated_interest +  p_finance_calc.v_faiz(5).calculated_interest;
            else
             p_finance_calc.calc_main_amount_interest := 0;
             p_finance_calc.v_faiz(1).calculated_interest := 0;
             p_finance_calc.v_faiz(5).calculated_interest := 0;

            end if;

            --ferilre iliþkin faiz
            if nvl(p_finance_calc.is_interest_detail_required,0) = 1 then
             p_finance_calc.calc_detail_interest :=  p_finance_calc.v_faiz(2).calculated_interest +  p_finance_calc.v_faiz(6).calculated_interest;
            else
             p_finance_calc.calc_detail_interest := 0;
             p_finance_calc.v_faiz(2).calculated_interest := 0;
             p_finance_calc.v_faiz(6).calculated_interest := 0;
            end if;

            --icra sonrasý faiz
            p_finance_calc.calc_after_enf_interest :=  p_finance_calc.v_faiz(3).calculated_interest +  p_finance_calc.v_faiz(4).calculated_interest;

       --faiz hesaplama bitis*************************************


            p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_main_amount,0) + nvl(p_finance_calc.calc_main_amount_interest,0)
                       + nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) +
                             nvl(p_finance_calc.calc_expertise_amount,0) +  nvl(p_finance_calc.calc_detail_interest,0);

            if nvl(p_finance_calc.is_trial_only,0) = 1 then  --sadece yargýlama gideri ödenecek  p_finance_calc.calc_trial_amount
              p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_expertise_amount,0) + nvl(p_finance_calc.calc_detail_interest,0);
              p_finance_calc.calc_main_amount := 0;
              p_finance_calc.calc_main_amount_interest := 0;
              --p_finance_calc.calc_court_lawyer_payment := 0;
              --p_finance_calc.calc_expertise_amount := 0;
              --p_finance_calc.calc_detail_interest := 0;
            end if;

       --icra vekalet ücreti****************************************
         SELECT tariff_rate
         into v_tariff_rate
         FROM koc_law_tariff_rate WHERE validity_end_date IS NULL and tariff_order = 1 AND  tariff_type= 3;

         if p_finance_calc.calc_sub_total < v_min_amount_icra then
           p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
         elsif ((p_finance_calc.calc_sub_total*v_tariff_rate)/100) < v_min_amount_icra then
           p_finance_calc.calc_enf_payment := v_min_amount_icra;
           --p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
         else
           p_finance_calc.calc_enf_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.calc_sub_total);
         end if;

         if p_finance_calc.case_notif_date is null then
           v_icra_7_gun := 0.75;
         elsif (p_finance_calc.case_notif_date is not null and p_finance_calc.payment_date is not null ) and ((p_finance_calc.payment_date - p_finance_calc.case_notif_date) <= 7) then
           v_icra_7_gun := 0.75;
         else
           v_icra_7_gun := 1;
         end if;

         if nvl(p_finance_calc.calc_enf_court_is_saved,0) = 0 then --sadece mahkeme icra ücreti sabit olarak seçilmediyse hesapla
           p_finance_calc.calc_enf_court_payment := trunc(v_icra_7_gun * p_finance_calc.calc_enf_payment, 2);
             if  p_finance_calc.is_stoppage_included = 1 then
               p_finance_calc.calc_enf_court_payment :=  trunc(p_finance_calc.calc_enf_court_payment / 1.20408,2); --to_do stopaj sabitini bir lookup tablosuna kaydet
             end if;
         end if;

         if nvl(p_finance_calc.is_enforcement_payment,0) = 0 then
           p_finance_calc.calc_enf_court_payment := 0;
         end if;

       --icra vekalet ücreti bitis****************************************


         if nvl(p_finance_calc.calc_tahsil_harci_is_saved,0) = 0 then
           p_finance_calc.calc_tahsil_harci := trunc((p_finance_calc.calc_sub_total * 4.55)/100,2);  --to_do 4.55 sabitini lookup tablosuna kaydet
         end if;


         if nvl(p_finance_calc.is_real_request,0) = 0 and nvl(p_finance_calc.is_icra_takibi,0) = 0 then
           --p_finance_calc.calc_enf_payment := 0;
           p_finance_calc.calc_enf_court_payment := 0;
           p_finance_calc.calc_tahsil_harci := 0;
           p_finance_calc.calc_enforcement_cost := 0;
           p_finance_calc.calc_after_enf_interest := 0;
           p_finance_calc.v_faiz(3).calculated_interest := 0;
           p_finance_calc.v_faiz(4).calculated_interest := 0;
        end if;

         p_finance_calc.calc_total_amount := nvl(p_finance_calc.calc_sub_total,0)  + nvl(p_finance_calc.calc_enf_court_payment,0) +
                    nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);

         if nvl(p_finance_calc.is_trial_only,0) = 1 then
           p_finance_calc.calc_after_enf_interest := p_finance_calc.v_faiz(4).calculated_interest;
           p_finance_calc.v_faiz(3).calculated_interest := 0;

           p_finance_calc.calc_total_amount := p_finance_calc.calc_sub_total + p_finance_calc.calc_enf_court_payment  +
                    nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);
           --p_finance_calc.calc_enf_court_payment := 0;
           --p_finance_calc.calc_tahsil_harci := 0;
           --p_finance_calc.calc_enforcement_cost := 0;
           --p_finance_calc.calc_after_enf_interest := 0;

         end if;





       elsif nvl(p_finance_calc.is_claim,0) = 1 then  --hasarlý hesap makinesi*************************************************
          p_finance_calc.v_faiz := null;

          if p_finance_calc.v_claim is null or p_finance_calc.v_claim.count = 0 then
               v_error_msg :='Hasar dosyasý ekleyerek hasarlý hesap makinesini kullanabilirsiniz';
               process_result(
                1, --p_process_no
                0,
                9,
                -1,  -- -1 hata demek
                'KAPAK HESABI HASARLI HESAP',
                v_error_msg,
                v_error_msg,
                null,
                null,
                'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                p_process_results
            );
                return;

          end if;


             p_finance_calc.main_amount := 0 ;
           for i in 1..p_finance_calc.v_claim.count loop
             if p_finance_calc.v_claim(i).main_amount is null then
               p_finance_calc.v_claim(i).main_amount:= 0;
             end if;

             p_finance_calc.main_amount := p_finance_calc.main_amount + p_finance_calc.v_claim(i).main_amount ;

           end loop;

           if p_finance_calc.main_amount = 0 and nvl(p_finance_calc.is_trial_only, 0) = 0 then
              v_error_msg :='hasar dosyalarýnýn tamamýnda Asýl alacak ödemesini 0 giremezsiniz, masraf ödeyecekseniz "Sadece Masraf Ödemesi Yapýlacak" seçeneðini seçiniz';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                );
                    return;
           end if;


            if nvl(p_finance_calc.is_calculate,0) = 0 then
              for i in 1..p_finance_calc.v_claim.count loop
                p_finance_calc.v_claim(i).v_faiz := law_finance_interest_tbl();
                p_finance_calc.v_claim(i).v_faiz.extend(6);
                p_finance_calc.v_claim(i).v_faiz(1) := LAW_FINANCE_INTEREST_TYP(null,0,null,null,null,null,null,null,null,null);
                p_finance_calc.v_claim(i).v_faiz(2) := p_finance_calc.v_claim(i).v_faiz(1);
                p_finance_calc.v_claim(i).v_faiz(3) := p_finance_calc.v_claim(i).v_faiz(1);
                p_finance_calc.v_claim(i).v_faiz(4) := p_finance_calc.v_claim(i).v_faiz(1);
                p_finance_calc.v_claim(i).v_faiz(5) := p_finance_calc.v_claim(i).v_faiz(1);
                p_finance_calc.v_claim(i).v_faiz(6) := p_finance_calc.v_claim(i).v_faiz(1);
              end loop;
            end if;



         --vekalet hesaplama********************************
           if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 1 then
            saved_calc_court_law_payment := p_finance_calc.calc_court_lawyer_payment;
           end if;

           p_finance_calc.calc_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.main_amount);

            --if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 0 then --sadece mahkeme vekalet ücreti sabit olarak seçilmediyse hesapla
              if  p_finance_calc.is_real_request = 1 then
                 p_finance_calc.calc_court_lawyer_payment := 0;
                   for i in 1..p_finance_calc.v_claim.count loop
                     p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                   end loop;
              elsif p_finance_calc.is_real_request = 0 then
                if p_finance_calc.is_lawyer_payment_per_person = 1 then
                   p_finance_calc.calc_court_lawyer_payment := 0;
                   for i in 1..p_finance_calc.v_claim.count loop
                      temp_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.v_claim(i).main_amount);
                       if  p_finance_calc.v_claim(i).main_amount = 0 then
                          --p_finance_calc.calc_court_lawyer_payment := 0;
                          p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                       elsif temp_lawyer_payment < v_min_amount_mahkeme then
                          p_finance_calc.v_claim(i).vekalet_ucreti := v_min_amount_mahkeme;
                       else
                           p_finance_calc.v_claim(i).vekalet_ucreti := temp_lawyer_payment;
                       end if;
                     p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_court_lawyer_payment + p_finance_calc.v_claim(i).vekalet_ucreti;
                   end loop;
                elsif p_finance_calc.is_lawyer_payment_per_person = 0 then

                      if  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and p_finance_calc.main_amount  <= v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.main_amount/5,2);
                      elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme/5,2);
                      elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment/5,2);
                      elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and p_finance_calc.main_amount  <= v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.main_amount,2);
                      elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme,2);
                      elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and  p_finance_calc.main_amount  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment,2);
                      elsif    p_finance_calc.main_amount         < v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := p_finance_calc.main_amount;
                      elsif p_finance_calc.calc_lawyer_payment < v_min_amount_mahkeme then
                        p_finance_calc.calc_court_lawyer_payment := v_min_amount_mahkeme;
                      elsif p_finance_calc.calc_lawyer_payment >= v_min_amount_mahkeme then
                         p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_lawyer_payment;
                      end if;

                   v_total_temp := 0;
                   for i in 1..p_finance_calc.v_claim.count loop
                     if nvl(p_finance_calc.main_amount,0) > 0 then
                       p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.calc_court_lawyer_payment * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);
                     else
                       p_finance_calc.v_claim(i).vekalet_ucreti := trunc((p_finance_calc.calc_court_lawyer_payment / p_finance_calc.v_claim.count),2);
                     end if;

                     v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);

                   end loop;

                   --Kuruþ farký
                   v_diff := p_finance_calc.calc_court_lawyer_payment - v_total_temp;
                   if v_diff <> 0 then
                    for i in 1..p_finance_calc.v_claim.count loop
                        if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                            p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                            exit;
                        end if;
                    end loop;
                   end if;
                end if;
              end if;

              if  p_finance_calc.is_stoppage_included = 1 then
                p_finance_calc.calc_court_lawyer_payment :=  trunc(p_finance_calc.calc_court_lawyer_payment / 1.20408,2); --to_do stopaj sabitini bir lookup tablosuna kaydet

                   v_total_temp := 0;
                   for i in 1..p_finance_calc.v_claim.count loop
                     p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti / 1.20408,2);

                     v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);
                   end loop;

                   --Kuruþ farký
                   v_diff := p_finance_calc.calc_court_lawyer_payment - v_total_temp;
                   if v_diff <> 0 then
                    for i in 1..p_finance_calc.v_claim.count loop
                        if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                            p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                            exit;
                        end if;
                    end loop;
                   end if;
              end if;

            --end if;


            if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 1 then --sadece mahkeme vekalet ücreti sabit olarak seçildiyse;

              if nvl(saved_calc_court_law_payment,0) = 0 then
                /*zet := 0;
                for i in 1..p_finance_calc.v_claim.count loop
                  if p_finance_calc.v_claim(i).main_amount > 0 then
                    zet := 1;
                    exit;
                  end if;
                end loop;

                if zet = 1 then
                  for i in 1..p_finance_calc.v_claim.count loop
                    p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(p_finance_calc.calc_court_lawyer_payment * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);
                  end loop;
                elsif zet = 0 then
                  for i in 1..p_finance_calc.v_claim.count loop
                    p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(p_finance_calc.calc_court_lawyer_payment / p_finance_calc.v_claim.count,2);
                  end loop;
                end if;*/
                 p_finance_calc.calc_court_lawyer_payment := 0;
                   for i in 1..p_finance_calc.v_claim.count loop
                     p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                   end loop;
              elsif saved_calc_court_law_payment > 0 then
                  if  p_finance_calc.is_real_request = 1 then
                     p_finance_calc.calc_court_lawyer_payment := 0;
                       for i in 1..p_finance_calc.v_claim.count loop
                         p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                       end loop;
                  else
                      ratio :=  saved_calc_court_law_payment / p_finance_calc.calc_court_lawyer_payment;

                      v_total_temp := 0;
                      for i in 1..p_finance_calc.v_claim.count loop
                        p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(p_finance_calc.v_claim(i).vekalet_ucreti * ratio ,2);

                        v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);
                      end loop;
                      p_finance_calc.calc_court_lawyer_payment := saved_calc_court_law_payment;

                      --Kuruþ farký
                      v_diff := p_finance_calc.calc_court_lawyer_payment - v_total_temp;
                      if v_diff <> 0 then
                        for i in 1..p_finance_calc.v_claim.count loop
                            if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                                p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                                exit;
                            end if;
                        end loop;
                      end if;
                  end if;
              end if;

            end if;


              for i in 1..p_finance_calc.v_claim.count loop
                p_finance_calc.v_claim(i).court_lawyer_payment :=  p_finance_calc.v_claim(i).vekalet_ucreti;

              end loop;


              if  v_court_enf_type = 'I' and  p_finance_calc.court_type = '1101'
                                  and nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 0 then --icra ise mahkeme vekalet ücreti 0 olur
                 p_finance_calc.calc_court_lawyer_payment := 0 ;

                  for i in 1..p_finance_calc.v_claim.count loop
                    p_finance_calc.v_claim(i).vekalet_ucreti :=  0;
                    p_finance_calc.v_claim(i).court_lawyer_payment := 0;
                  end loop;

              end if;

         --vekalet hesaplama********************************


       --faiz hesaplama*************************************
         p_finance_calc.calc_expertise_amount := nvl(p_finance_calc.expertise_amount,0);


           if p_finance_calc.is_calculate is null then
             p_finance_calc.is_calculate :=  nvl(p_finance_calc.is_calculate,0);
           end if;


            for i in 1..p_finance_calc.v_claim.count loop

               --anapara
               p_finance_calc.v_claim(i).v_faiz(1).id := null;
               p_finance_calc.v_claim(i).v_faiz(1).detail_no := 0;
               p_finance_calc.v_claim(i).v_faiz(1).interest_expl := 'Ana Para Faizi';
               if p_finance_calc.court_correction_date is null then
                p_finance_calc.v_claim(i).v_faiz(1).interest_base_amount := nvl(p_finance_calc.v_claim(i).main_amount,0);
               else
                p_finance_calc.v_claim(i).v_faiz(1).interest_base_amount := nvl(p_finance_calc.v_claim(i).main_amount,0) - nvl(p_finance_calc.v_claim(i).court_correction_amount,0);
               end if;
               p_finance_calc.v_claim(i).v_faiz(1).interest_start_date := p_finance_calc.v_claim(i).interest_begin_date;
               /*if p_finance_calc.is_calculate in (0) then
                 p_finance_calc.v_claim(i).v_faiz(1).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
               end if;*/

                 p_finance_calc.v_claim(i).v_faiz(1).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

               if  p_finance_calc.is_calculate = 0 then
                 p_finance_calc.v_claim(i).v_faiz(1).interest_type := p_finance_calc.v_claim(i).interest_type;
               end if;

               if nvl(p_finance_calc.v_claim(i).v_faiz(1).is_saved,0) = 0 then
                   if p_finance_calc.v_claim(i).v_faiz(1).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(1).interest_end_date is null then
                     p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_claim(i).v_faiz(1).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(1).interest_type, p_finance_calc.v_claim(i).v_faiz(1).interest_start_date, p_finance_calc.v_claim(i).v_faiz(1).interest_end_date, p_finance_calc.v_claim(i).v_faiz(1).calculated_interest);
                   end if;
               end if;
               --Ferilere Ýliþkin Faiz
               p_finance_calc.v_claim(i).v_faiz(2).interest_expl := 'Ferilere Ýliþkin Faiz';
               p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0 )* (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2); --trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2);
               p_finance_calc.v_claim(i).v_faiz(2).interest_start_date := p_finance_calc.court_decision_date;
               /*if p_finance_calc.is_calculate in (0) then
                 p_finance_calc.v_claim(i).v_faiz(2).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
               end if;*/

                 p_finance_calc.v_claim(i).v_faiz(2).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

               if  p_finance_calc.is_calculate = 0 then
                 p_finance_calc.v_claim(i).v_faiz(2).interest_type := p_finance_calc.v_claim(i).interest_type;
               end if;

               if nvl(p_finance_calc.v_claim(i).v_faiz(2).is_saved,0) = 0 then
                   if p_finance_calc.v_claim(i).v_faiz(2).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(2).interest_end_date is null then
                     p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(2).interest_type, p_finance_calc.v_claim(i).v_faiz(2).interest_start_date, p_finance_calc.v_claim(i).v_faiz(2).interest_end_date, p_finance_calc.v_claim(i).v_faiz(2).calculated_interest);
                   end if;
               end if;
               --icra sonrasý ana para faizi
               p_finance_calc.v_claim(i).v_faiz(3).interest_expl := 'Ýcra Sonrasý Ana Para Faizi';
               p_finance_calc.v_claim(i).v_faiz(3).interest_base_amount := nvl(p_finance_calc.v_claim(i).main_amount,0);
               if p_finance_calc.case_date is not null then
                p_finance_calc.v_claim(i).v_faiz(3).interest_start_date := p_finance_calc.case_date + 1 ;
               end if;
               /*if p_finance_calc.is_calculate in (0) then
                 p_finance_calc.v_claim(i).v_faiz(3).interest_end_date := p_finance_calc.payment_date;
               end if;*/

                 p_finance_calc.v_claim(i).v_faiz(3).interest_end_date := p_finance_calc.payment_date;

               if  p_finance_calc.is_calculate = 0 then
                 p_finance_calc.v_claim(i).v_faiz(3).interest_type := p_finance_calc.v_claim(i).interest_type;
               end if;

               if nvl(p_finance_calc.v_claim(i).v_faiz(3).is_saved,0) = 0 then
                   if p_finance_calc.v_claim(i).v_faiz(3).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(3).interest_end_date is null then
                     p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_claim(i).v_faiz(3).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(3).interest_type, p_finance_calc.v_claim(i).v_faiz(3).interest_start_date, p_finance_calc.v_claim(i).v_faiz(3).interest_end_date, p_finance_calc.v_claim(i).v_faiz(3).calculated_interest);
                   end if;
               end if;
               --Ýcra sonrasý Ferilere Faiz
               p_finance_calc.v_claim(i).v_faiz(4).interest_expl := 'Ýcra Sonrasý Ferilere Faiz';
               p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0)* (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)--trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2)
                           +  trunc(nvl(p_finance_calc.calc_expertise_amount,0)* (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);--trunc(nvl(p_finance_calc.calc_expertise_amount,0)/p_finance_calc.v_claim.count,2);
               if p_finance_calc.case_date is not null then
                p_finance_calc.v_claim(i).v_faiz(4).interest_start_date := p_finance_calc.case_date + 1 ;
               end if;
               /*if p_finance_calc.is_calculate in (0) then
                 p_finance_calc.v_claim(i).v_faiz(4).interest_end_date := p_finance_calc.payment_date;
               end if;*/

                 p_finance_calc.v_claim(i).v_faiz(4).interest_end_date := p_finance_calc.payment_date;

               if  p_finance_calc.is_calculate = 0 then
                 p_finance_calc.v_claim(i).v_faiz(4).interest_type := p_finance_calc.v_claim(i).interest_type;
               end if;

               if nvl(p_finance_calc.v_claim(i).v_faiz(4).is_saved,0) = 0 then
                   if p_finance_calc.v_claim(i).v_faiz(4).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(4).interest_end_date is null then
                     p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(4).interest_type, p_finance_calc.v_claim(i).v_faiz(4).interest_start_date, p_finance_calc.v_claim(i).v_faiz(4).interest_end_date, p_finance_calc.v_claim(i).v_faiz(4).calculated_interest);
                   end if;
               end if;


              --ýslah faizi
               p_finance_calc.v_claim(i).v_faiz(5).interest_expl := 'Islah Faizi';
               p_finance_calc.v_claim(i).v_faiz(5).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_correction_amount,0);
               p_finance_calc.v_claim(i).v_faiz(5).interest_start_date := p_finance_calc.court_correction_date;
               /*if p_finance_calc.is_calculate in (0) then
                 p_finance_calc.v_claim(i).v_faiz(5).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
               end if;*/

                 p_finance_calc.v_claim(i).v_faiz(5).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

               if  p_finance_calc.is_calculate = 0 then
                 p_finance_calc.v_claim(i).v_faiz(5).interest_type := p_finance_calc.v_claim(i).interest_type;
               end if;
               if nvl(p_finance_calc.v_claim(i).v_faiz(5).is_saved,0) = 0 then
                   if p_finance_calc.v_claim(i).v_faiz(5).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(5).interest_end_date is null then
                     p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_claim(i).v_faiz(5).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(5).interest_type, p_finance_calc.v_claim(i).v_faiz(5).interest_start_date, p_finance_calc.v_claim(i).v_faiz(5).interest_end_date, p_finance_calc.v_claim(i).v_faiz(5).calculated_interest);
                   end if;
               end if;



              --eksper faizi
               p_finance_calc.v_claim(i).v_faiz(6).interest_expl := 'Eksper Faizi';
               p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := trunc(nvl(p_finance_calc.calc_expertise_amount,0)* (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);--trunc(nvl(p_finance_calc.expertise_amount,0)/p_finance_calc.v_claim.count,2);
               p_finance_calc.v_claim(i).v_faiz(6).interest_start_date := p_finance_calc.law_expertise_fee_date;
               /*if p_finance_calc.is_calculate in (0) then
                 p_finance_calc.v_claim(i).v_faiz(6).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
               end if;*/

                 p_finance_calc.v_claim(i).v_faiz(6).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);

               if  p_finance_calc.is_calculate = 0 then
                 p_finance_calc.v_claim(i).v_faiz(6).interest_type :=  p_finance_calc.v_claim(i).interest_type;
               end if;
               if nvl(p_finance_calc.v_claim(i).v_faiz(6).is_saved,0) = 0 then
                   if p_finance_calc.v_claim(i).v_faiz(6).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(6).interest_end_date is null then
                     p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(6).interest_type, p_finance_calc.v_claim(i).v_faiz(6).interest_start_date, p_finance_calc.v_claim(i).v_faiz(6).interest_end_date, p_finance_calc.v_claim(i).v_faiz(6).calculated_interest);
                   end if;
               end if;
              p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).v_faiz(1).calculated_interest + p_finance_calc.v_claim(i).v_faiz(2).calculated_interest
                                                       +   p_finance_calc.v_claim(i).v_faiz(3).calculated_interest + p_finance_calc.v_claim(i).v_faiz(4).calculated_interest
                                                       +   p_finance_calc.v_claim(i).v_faiz(5).calculated_interest + p_finance_calc.v_claim(i).v_faiz(6).calculated_interest;

            end loop;


            --ana para
            p_finance_calc.calc_main_amount := p_finance_calc.main_amount;


              p_finance_calc.calc_main_amount_interest := 0;
              p_finance_calc.calc_detail_interest      := 0;
              p_finance_calc.calc_after_enf_interest   := 0;

            for i in 1..p_finance_calc.v_claim.count loop
                for j in 1..p_finance_calc.v_claim(i).v_faiz.count loop
                  if p_finance_calc.v_claim(i).v_faiz(j).calculated_interest is null then
                     p_finance_calc.v_claim(i).v_faiz(j).calculated_interest := 0;
                  end if;

                end loop;

                --ana para faizi
                if nvl(p_finance_calc.is_interest_required,0) = 1 then
                 p_finance_calc.calc_main_amount_interest :=  p_finance_calc.calc_main_amount_interest + p_finance_calc.v_claim(i).v_faiz(1).calculated_interest +  p_finance_calc.v_claim(i).v_faiz(5).calculated_interest;
                else
                 p_finance_calc.calc_main_amount_interest := 0;
                 p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(1).calculated_interest - p_finance_calc.v_claim(i).v_faiz(5).calculated_interest;
                 p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                 p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                end if;

                --ferilre iliþkin faiz
                if nvl(p_finance_calc.is_interest_detail_required,0) = 1 then
                 p_finance_calc.calc_detail_interest :=  p_finance_calc.calc_detail_interest + p_finance_calc.v_claim(i).v_faiz(2).calculated_interest +  p_finance_calc.v_claim(i).v_faiz(6).calculated_interest;
                else
                 p_finance_calc.calc_detail_interest := 0;
                 p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(2).calculated_interest - p_finance_calc.v_claim(i).v_faiz(6).calculated_interest;
                 p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := 0;
                 p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := 0;
                end if;

                --icra sonrasý faiz
                p_finance_calc.calc_after_enf_interest :=  p_finance_calc.calc_after_enf_interest + p_finance_calc.v_claim(i).v_faiz(3).calculated_interest +  p_finance_calc.v_claim(i).v_faiz(4).calculated_interest;
            end loop;
       --faiz hesaplama bitis*************************************


            p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_main_amount,0) + nvl(p_finance_calc.calc_main_amount_interest,0)
                       + nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) +
                             nvl(p_finance_calc.calc_expertise_amount,0) +  nvl(p_finance_calc.calc_detail_interest,0);

            if nvl(p_finance_calc.is_trial_only,0) = 1 then  --sadece yargýlama gideri ödenecek  p_finance_calc.calc_trial_amount
              p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_expertise_amount,0) + nvl(p_finance_calc.calc_detail_interest,0);
              p_finance_calc.calc_main_amount_interest := 0;
              --p_finance_calc.calc_court_lawyer_payment := 0;
              --p_finance_calc.calc_expertise_amount := 0;
              --p_finance_calc.calc_detail_interest := 0;
              --p_finance_calc.calc_after_enf_interest := 0;

              for i in 1..p_finance_calc.v_claim.count loop
               --p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := 0;
               --p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := 0;
               --p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := 0;
                p_finance_calc.calc_after_enf_interest := p_finance_calc.calc_after_enf_interest - p_finance_calc.v_claim(i).v_faiz(3).calculated_interest;

                p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(3).calculated_interest -
                                        p_finance_calc.v_claim(i).v_faiz(1).calculated_interest - p_finance_calc.v_claim(i).v_faiz(5).calculated_interest;

                 p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                 p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                 p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;
              end loop;

            end if;

       --icra vekalet ücreti****************************************
         SELECT tariff_rate
         into v_tariff_rate
         FROM koc_law_tariff_rate WHERE validity_end_date IS NULL and tariff_order = 1 AND  tariff_type= 3;

         if p_finance_calc.calc_sub_total < v_min_amount_icra then
           p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
         elsif ((p_finance_calc.calc_sub_total*v_tariff_rate)/100) < v_min_amount_icra then
           p_finance_calc.calc_enf_payment := v_min_amount_icra;
           --p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
         else
           p_finance_calc.calc_enf_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.calc_sub_total);
         end if;

         if p_finance_calc.case_notif_date is null then
           v_icra_7_gun := 0.75;
         elsif (p_finance_calc.case_notif_date is not null and p_finance_calc.payment_date is not null ) and ((p_finance_calc.payment_date - p_finance_calc.case_notif_date) <= 7) then
           v_icra_7_gun := 0.75;
         else
           v_icra_7_gun := 1;
         end if;

         if nvl(p_finance_calc.calc_enf_court_is_saved,0) = 0 then --sadece mahkeme icra ücreti sabit olarak seçilmediyse hesapla
           p_finance_calc.calc_enf_court_payment := trunc(v_icra_7_gun * p_finance_calc.calc_enf_payment, 2);
             if  p_finance_calc.is_stoppage_included = 1 then
               p_finance_calc.calc_enf_court_payment :=  trunc(p_finance_calc.calc_enf_court_payment / 1.20408,2); --to_do stopaj sabitini bir lookup tablosuna kaydet
             end if;
         end if;

         if nvl(p_finance_calc.is_enforcement_payment,0) = 0 then
           p_finance_calc.calc_enf_court_payment := 0;
         end if;

        v_total_temp := 0;
        for i in 1..p_finance_calc.v_claim.count loop
          if nvl(p_finance_calc.is_enforcement_payment,0) = 1 then
             if p_finance_calc.main_amount > 0 then
                p_finance_calc.v_claim(i).enf_payment :=  trunc(nvl(p_finance_calc.calc_enf_court_payment,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);
             else
                p_finance_calc.v_claim(i).enf_payment :=  trunc(nvl(p_finance_calc.calc_enf_court_payment,0) / p_finance_calc.v_claim.count,2);
             end if;
          else
            p_finance_calc.v_claim(i).enf_payment := 0;
          end if;

          v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).enf_payment, 0);
        end loop;

       --Kuruþ farký
       v_diff := p_finance_calc.calc_enf_court_payment - v_total_temp;
       if v_diff <> 0 then
        for i in 1..p_finance_calc.v_claim.count loop
            if nvl(p_finance_calc.v_claim(i).enf_payment, 0) > 0 then
                p_finance_calc.v_claim(i).enf_payment := trunc(p_finance_calc.v_claim(i).enf_payment + v_diff, 2);
                exit;
            end if;
        end loop;
       end if;

       --icra vekalet ücreti bitis****************************************

        --masraf(yargýlama gideri, eksper ücreti ve icra masrafý)
        v_total_temp := 0;
        for i in 1..p_finance_calc.v_claim.count loop
          if p_finance_calc.main_amount > 0 then
              p_finance_calc.v_claim(i).cost :=  (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)) + (trunc(nvl(p_finance_calc.calc_trial_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)) + (trunc(nvl(p_finance_calc.calc_expertise_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2));
          else
              p_finance_calc.v_claim(i).cost :=  (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / p_finance_calc.v_claim.count,2)) + (trunc(nvl(p_finance_calc.calc_trial_amount,0) / p_finance_calc.v_claim.count,2)) + (trunc(nvl(p_finance_calc.calc_expertise_amount,0) / p_finance_calc.v_claim.count,2));
          end if;

          v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).cost, 0);
        end loop;

        --Kuruþ farký
        v_diff := nvl(p_finance_calc.calc_enforcement_cost, 0) +  nvl(p_finance_calc.calc_trial_amount, 0) +  nvl(p_finance_calc.calc_expertise_amount, 0) - v_total_temp;
        if v_diff <> 0 then
            for i in 1..p_finance_calc.v_claim.count loop
                if nvl(p_finance_calc.v_claim(i).cost, 0) > 0 then
                    p_finance_calc.v_claim(i).cost := trunc(p_finance_calc.v_claim(i).cost + v_diff, 2);
                    exit;
                end if;
            end loop;
        end if;
        --masraf(yargýlama gideri, eksper ücreti ve icra masrafý)

       --tahsil harcý
         if nvl(p_finance_calc.calc_tahsil_harci_is_saved,0) = 0 then
           p_finance_calc.calc_tahsil_harci := trunc((p_finance_calc.calc_sub_total * 4.55)/100,2);
         end if;

        v_total_temp := 0;
        for i in 1..p_finance_calc.v_claim.count loop
             if p_finance_calc.main_amount > 0 then
                p_finance_calc.v_claim(i).tahsil_harci :=  trunc(nvl(p_finance_calc.calc_tahsil_harci,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);
             else
                p_finance_calc.v_claim(i).tahsil_harci :=  trunc(nvl(p_finance_calc.calc_tahsil_harci,0) / p_finance_calc.v_claim.count,2);
             end if;

             v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).tahsil_harci, 0);
        end loop;

        --Kuruþ farký
        v_diff := p_finance_calc.calc_tahsil_harci - v_total_temp;
        if v_diff <> 0 then
            for i in 1..p_finance_calc.v_claim.count loop
                if nvl(p_finance_calc.v_claim(i).tahsil_harci, 0) > 0 then
                    p_finance_calc.v_claim(i).tahsil_harci := trunc(p_finance_calc.v_claim(i).tahsil_harci + v_diff, 2);
                    exit;
                end if;
            end loop;
        end if;
       --tahsil harcý bitis

         if nvl(p_finance_calc.is_real_request,0) = 0 and nvl(p_finance_calc.is_icra_takibi,0) = 0 then
            --xxx := 1;
            v_total_temp := 0;
            for i in 1..p_finance_calc.v_claim.count loop
               p_finance_calc.v_claim(i).enf_payment :=  0;
               p_finance_calc.v_claim(i).tahsil_harci := 0;

               if p_finance_calc.main_amount > 0 then
                  p_finance_calc.v_claim(i).cost :=  p_finance_calc.v_claim(i).cost - (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)) ;
               else
                  p_finance_calc.v_claim(i).cost :=  p_finance_calc.v_claim(i).cost - (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / p_finance_calc.v_claim.count,2));
               end if;

               v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).cost, 0);

               p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(3).calculated_interest - p_finance_calc.v_claim(i).v_faiz(4).calculated_interest;
               p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;
               p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := 0;
            end loop;

            p_finance_calc.calc_enf_court_payment := 0;
            p_finance_calc.calc_tahsil_harci := 0;
            p_finance_calc.calc_enforcement_cost := 0;
            p_finance_calc.calc_after_enf_interest := 0;

           --Kuruþ farký
           v_diff := nvl(p_finance_calc.calc_enforcement_cost, 0) +  nvl(p_finance_calc.calc_trial_amount, 0) +  nvl(p_finance_calc.calc_expertise_amount, 0) - v_total_temp;
           if v_diff <> 0 then
               for i in 1..p_finance_calc.v_claim.count loop
                   if nvl(p_finance_calc.v_claim(i).cost, 0) > 0 then
                       p_finance_calc.v_claim(i).cost := trunc(p_finance_calc.v_claim(i).cost + v_diff, 2);
                       exit;
                   end if;
               end loop;
           end if;
         end if;




         p_finance_calc.calc_total_amount := nvl(p_finance_calc.calc_sub_total,0)  + nvl(p_finance_calc.calc_enf_court_payment,0) +
                    nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);

         if nvl(p_finance_calc.is_trial_only,0) = 1 then
           p_finance_calc.calc_total_amount := p_finance_calc.calc_sub_total + nvl(p_finance_calc.calc_enf_court_payment,0)  +
                    nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);
           --p_finance_calc.calc_enf_court_payment := 0;
           --p_finance_calc.calc_tahsil_harci := 0;
           --p_finance_calc.calc_enforcement_cost := 0;
           --p_finance_calc.calc_after_enf_interest := 0;
           p_finance_calc.calc_main_amount := 0;
              /*for i in 1..p_finance_calc.v_claim.count loop
                --p_finance_calc.v_claim(i).main_amount := 0;
                p_finance_calc.v_claim(i).tahsil_harci := 0;
              end loop;*/


         end if;


       end if;--hasarlý hasarsýz hesap makinasý bitis *******************************************************


      p_finance_calc.is_calculate := 1;

    --hasarlý hesap makinesi bitti***************************************

    else --hukuk dosyalý hasarsýz ve hasarlý kapak hesabý

--*************************************************************************************************************************************************************************













         select count(law_file_no) into check_law from koc_law_bases where law_file_no = p_law_file_no;
          if check_law = 0 then
               v_error_msg :='Böyle bir hukuk dosyasý yok, kontrol ediniz';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                );
                    return;
          end if;

          select file_close_date into v_file_close_date from koc_law_bases where law_file_no = p_law_file_no;
          if v_file_close_date is not null then
               v_error_msg :='Hukuk dosyasý kapalý, dosyayý açtýktan sonra iþlem yapýnýz';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                );
                    return;
          end if;


            --ekspertiz masrafý<
            select nvl(law_expertise_fee,0)
              into v_law_expertise_fee
              from koc_law_bases  where law_file_no = p_law_file_no;

            select nvl(sum(EXPERTISE_AMOUNT),0) into v_law_expertise_fee_tot  from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;
            --ekspertiz masrafý<


            --yargýlama gideri<
            select nvl(sum(calc_trial_amount),0)
            into v_calc_trial_amount_tot  from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;

            select ( nvl(law_stamp,0) +  nvl(law_cash_fee,0) + nvl(law_other_fee,0) )
            into v_trial_cost from  koc_law_bases where law_file_no = p_law_file_no;
            select   nvl(sum(exp_charge),0)
            into v_exp_charge from koc_law_expert_expenses   where law_file_no = p_law_file_no;

            v_trial_cost := v_trial_cost + v_exp_charge;
            --yargýlama gideri>


           if nvl(p_finance_calc.is_calculate,0) = 1 then--eksper ücreti ve yargýlama gideri sistemdeki deðeri aþmýþ mý kontrol ediyor hasarlý ve hasarsýz için

             if  nvl(p_finance_calc.expertise_amount,0) > (v_law_expertise_fee - v_law_expertise_fee_tot) then

                 v_error_msg :='ekspertiz masrafý ödemek için Hukuk Bilgileri/Dava Takip Masrafý Deðiþtir alanýndan güncelleyiniz, ekspertiz masraf ekranýndaki deðer:'||v_law_expertise_fee||',ekspertiz toplam ödenen:'||v_law_expertise_fee_tot ;
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                return;
             end if;

             --yargýlama gideri
             if  nvl(p_finance_calc.calc_trial_amount,0) > (v_trial_cost - v_calc_trial_amount_tot) then

                 v_error_msg :='Yargýlama gideri, Hukuk Bilgileri/Dava Takip Masrafý Deðiþtir alanýndan  (Biliriþi ücreti + Posta pulu + Peþin harç + Diðer) güncelleyiniz, Dava Takip Masrafý alanýdaki deðer:'||v_trial_cost||', Yargýlama gideri toplam ödenen:'||v_calc_trial_amount_tot ;
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                return;
             end if;
           end if;

           if p_finance_calc.is_interest_detail_required is null then --kapak hesabý ilk defa geldiðinde
              p_finance_calc.calc_trial_amount := v_trial_cost - v_calc_trial_amount_tot;
              p_finance_calc.expertise_amount := v_law_expertise_fee - v_law_expertise_fee_tot;
           end if;


          --hasarlý ve hasarsýz ortak veriler************************************************************


              --select  lawyer_court into v_lawyer_court from koc_law_bases where law_file_no = p_law_file_no; --kullanýcýn kendinin set ettiði vekalet ücreti


               begin
               select decision_date  --karar tarihi sadece mahkeme 'M' olan mahkemelerden gelebilir
                 into p_finance_calc.court_decision_date
                 from koc_law_base_courts
                   where law_file_no = p_law_file_no and court_enf_type ='M' ;
               exception when others then
                 has_no_lawyer_payment := 1;
               end;


              begin  --mahkeme tipi, þayet 'M' ise mahkeme tipine ait mahkeme bilgisi yoksa da icra  bilgisi gelecek
                select alc.court_unit_code,
                       acd.description,
                       lbc.court_enf_type
                  into p_finance_calc.court_type,
                       p_finance_calc.court_type_desc,
                       v_court_enf_type
                  from koc_law_base_courts lbc,
                       alz_law_courts_v alc,
                       alz_law_court_unit_def acd,
                       alz_law_court_uyap_payment_def upd
                 where lbc.law_file_no = p_law_file_no
                   and lbc.court_enf_type = 'M'
                   and lbc.court_type = alc.court_type
                   and lbc.court_id = alc.court_id
                   and alc.court_unit_code = acd.court_unit_code
                   and alc.court_unit_code = upd.court_unit_code
                   and p_date between upd.validity_start_date and nvl(upd.validity_end_date, p_date);
              exception when others then
                begin
                    select alc.court_unit_code,
                           acd.description,
                           lbc.court_enf_type
                      into p_finance_calc.court_type,
                           p_finance_calc.court_type_desc,
                           v_court_enf_type
                      from koc_law_base_courts lbc,
                           alz_law_courts_v alc,
                           alz_law_court_unit_def acd,
                           alz_law_court_uyap_payment_def upd
                     where lbc.law_file_no = p_law_file_no
                       and lbc.court_enf_type = 'I'
                       and lbc.court_type = alc.court_type
                       and lbc.court_id = alc.court_id
                       and alc.court_unit_code = acd.court_unit_code
                       and alc.court_unit_code = upd.court_unit_code
                       and p_date between upd.validity_start_date and nvl(upd.validity_end_date, p_date);
                exception when others then
                  p_finance_calc.court_type := null;
                end;
              end;

              select min_amount
                into v_min_amount_mahkeme
                from alz_law_court_uyap_payment_def
               where court_unit_code = p_finance_calc.court_type
                 and p_date between validity_start_date and nvl(validity_end_date, sysdate);

              -- Ýcra tekil olduðu için default o kullanýlýyor
              select min_amount
                into v_min_amount_icra
                from alz_law_court_uyap_payment_def
               where court_unit_code = '1101'
                 and p_date between validity_start_date and nvl(validity_end_date, sysdate);


              begin  --to_do þimdilik court_enf_no  null olmaz diye düþünüyorum bunu daha sonra melih netleþtirince sor? court_id mi court_enf_no mu alýnacak?
               select case_date takip_tarihi, case_notif_date teblig_tarihi, court_id
                into  p_finance_calc.case_date, p_finance_calc.case_notif_date, v_court_enf_no
                from koc_law_base_courts
                where law_file_no = p_law_file_no and court_enf_type = 'I';
              exception when others then
                p_finance_calc.case_date := null;
                p_finance_calc.case_notif_date := null;
              end;

              /*
              begin
               select court_file_no esas_no
                into p_finance_calc.court_file_no
                from koc_law_base_courts
                where law_file_no = p_law_file_no and court_enf_type = 'M';
              exception when others then
               begin
                select court_file_no esas_no
                 into  p_finance_calc.court_file_no
                 from koc_law_base_courts where law_file_no = p_law_file_no and court_enf_type = 'I';
               exception when others then
                p_finance_calc.court_file_no := null;
               end;
              end;
              */

              select listagg(court_file_no, ' - ') within group (order by decode(court_enf_type, 'M', 1, 2))
                into p_finance_calc.court_file_no
                from koc_law_base_courts
                where law_file_no = p_law_file_no and court_enf_type in ('M', 'I');

          --hasarlý ve hasarsýz ortak veriler bitis************************************************************

        select count(1)
        into p_finance_calc.is_claim
         from koc_law_bases a
          where a.law_file_no = p_law_file_no and a.law_file_no in (select law_file_no from koc_law_bases_detail where law_file_no = a.law_file_no );

          select law_case_type into v_law_case_type from koc_law_bases where law_file_no = p_law_file_no;

          if v_law_case_type <> 'A' then
                   v_error_msg :='Kapak hesabýný sadece aleyhte dosyalar için kullanabilirsiniz';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    'KAPAK HESABI',
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                   return;
          end if;

       if nvl(p_finance_calc.is_claim,0) = 0 then     --hasarsýz hukuk dosyasý
          /*select court_decision_amount into v_court_decision_amount from koc_law_bases where law_file_no = p_law_file_no;
          if v_court_decision_amount is null then
               v_error_msg :='Karar tutarý boþ olamaz, dosyaya karar girip iþlem yapýn';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                );
                    return;
          end if;*/

            select count(1)
            into v_hespi_maktu_mu
             from koc_law_bases a
              where a.law_file_no = p_law_file_no and nvl(a.is_maktu,0) = 1 and law_type not in (24,29,30);

            select count(1)
            into v_is_calculatable
             from koc_law_bases a
              where a.law_file_no = p_law_file_no and law_type in (29,30);

            select count(1)
            into v_hespi_ihtiyaten
             from koc_law_bases a
              where a.law_file_no = p_law_file_no and law_type in (24);



                 if v_is_calculatable > 0 then  --hasarsýzlarda dosya mükerrer,tedavi yada ihtiyaten ise ödeme iþlemi yapýlamaz
                      v_error_msg :='Hukuk dosyasý dava tipi mükerrer yada ihtiyaten olduðu için hesaplama ve ödeme iþlemi yapýlamaz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                 end if;




          if nvl(p_finance_calc.is_paying,0) = 0 then    --kapak hesabý hesaplama

             if nvl(p_finance_calc.is_calculate,0) in (1,0) then    --kapak hesabý hesaplama, ilk defa verileri çektiði zaman bununla gelsin, bu durmda orjinal verilerle hesaplama yapacak

               /*begin
               select nvl(law_expertise_fee,0), interest_begin_date, case_amount, court_correction_amount,court_decision_amount
                 into v_law_expertise_fee, p_finance_calc.payment_denounce_date, p_finance_calc.case_amount, p_finance_calc.court_correction_amount,
                        v_court_decision_amount
                  from koc_law_bases  where law_file_no = p_law_file_no;
               exception when others then
                 null;
               end;


                select nvl(sum(EXPERTISE_AMOUNT),0) into v_law_expertise_fee_tot  from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;

                 p_finance_calc.expertise_amount := (v_law_expertise_fee - v_law_expertise_fee_tot);*/


               begin
               select interest_begin_date, court_correction_amount
                 into p_finance_calc.payment_denounce_date, p_finance_calc.court_correction_amount
                  from koc_law_bases  where law_file_no = p_law_file_no;
               exception when others then
                 null;
               end;



              if p_finance_calc.is_interest_detail_required is null then --kapak hesabý ilk defa geldiðinde default deðerleri sen set et(is_calculate = 0)
               if p_finance_calc.case_notif_date is not null then
                 p_finance_calc.payment_date           := p_finance_calc.case_notif_date + 1 ;
                 if trunc(p_finance_calc.payment_date) < trunc(sysdate) then
                   p_finance_calc.payment_date           := trunc(sysdate); --trunc(sysdate + 1);
                 end if;
               else
                 p_finance_calc.payment_date           := trunc(sysdate); --trunc(sysdate + 1);
               end if;



                 p_finance_calc.court_correction_date  := null; --kullanýcý dolduracak

                 if p_finance_calc.court_correction_amount is not null then  --daha evvel islah tarihi geçmiþ ödemelerde kaydedilmiþse bu tarihi otomatil getir.
                   if nvl(p_finance_calc.is_calculate,0)= 0 then
                     begin
                       select court_correction_date
                       into p_finance_calc.court_correction_date
                       from CUSTOMER.ALZ_LAW_FINANCE_CALC
                       where law_file_no = p_law_file_no and IS_ACCOUNT = 1 and id in (
                             select nvl(max(id),0) from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);
                     exception when others then
                       p_finance_calc.court_correction_date := null;
                     end;
                   end if;
                 end if;

               p_finance_calc.law_expertise_fee_date := null; --kullanýcý dolduracak
               p_finance_calc.azs_yks_no             := p_law_file_no;

               p_finance_calc.is_lawyer_payment_per_person := 0;
               p_finance_calc.is_real_request := 0;
               p_finance_calc.is_icra_takibi := 1;
               p_finance_calc.is_enforcement_payment := 1;
               p_finance_calc.is_interest_required := 1;
               p_finance_calc.is_interest_detail_required := 1;
               p_finance_calc.is_stoppage_included := 0;
               p_finance_calc.v_claim := null;
               p_finance_calc.calc_trial_amount_is_saved := 0;
               p_finance_calc.calc_court_lawyer_is_saved := 0;
               p_finance_calc.calc_enf_court_is_saved    := 0;
               p_finance_calc.calc_tahsil_harci_is_saved := 0;
               p_finance_calc.calc_enforcement_cost_is_saved := 0;


               if  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018')  then --mahkeme tipi tahkim ise, is_tahkim_1_5  = false olsun default
                p_finance_calc.is_tahkim_1_5 := 0;
               else
                p_finance_calc.is_tahkim_1_5 := 0;
               end if;
              end if;


               --esas asýl alacak*************************************


                /* Varsa ödenen tutar bulma */
                BEGIN
                    SELECT sum(nvl(paid_amount,0))
                    into l_paid_amount
                    from (

                Select sum (decode(b.sf_total_type,'35',a.amount*118/98,a.amount)) paid_amount
                --Select sum (decode(b.sf_total_type,'54',a.amount*100/98,a.amount)) paid_amount
                From koc_law_trans_detail_sub a,
                koc_law_trans_detail b
                Where a.law_file_no = p_law_file_no
                And a.accessory_type = 1
                --And a.detail_no = nvl(:policy_info.detail_no,0)
                And a.law_file_no = b.law_file_no
                And a.detail_no = NVL(b.detail_no,0)
                And b.sf_total_type in ('35')
                And a.trans_no = b.trans_no
                And b.batch_id is not null
                And Sign(a.amount) = 1
                UNION ALL
                Select sum (decode(b.sf_total_type,'50',decode(b.document_type,'SMM',a.amount*118/98,a.amount),a.amount)) paid_amount
                From koc_law_trans_detail_sub a,
                koc_law_trans_detail b
                Where a.law_file_no = p_LAW_FILE_NO
                And a.accessory_type = 1
                --And a.detail_no = nvl(:policy_info.detail_no,0)
                And a.law_file_no = b.law_file_no
                And a.detail_no = NVL(b.detail_no,0)
                And b.sf_total_type in ('11','12','50')
                And a.trans_no = b.trans_no
                And b.batch_id is not null
                And Sign(a.amount) = 1);
                --AND b.sf_total_type = :DETAIL.SF_TOTAL;
                EXCEPTION WHEN OTHERS THEN
                l_paid_amount := 0;
                END;
                /*-------------------------*/

                /*Varsa Iade Tutari Bulma */
                BEGIN
                    SELECT sum(nvl(paid_amount,0))
                    into l_return_amount
                    from (
                Select sum (decode(b.sf_total_type,'54',a.amount*100/98,a.amount)) paid_amount
                From koc_law_trans_detail_sub a,
                koc_law_trans_detail b
                Where a.law_file_no = p_law_file_no
                And a.accessory_type = 1
                --And a.detail_no = :policy_info.detail_no
                And a.law_file_no = b.law_file_no
                And a.detail_no = NVL(b.detail_no,0)
                And b.sf_total_type in ('35')
                And a.trans_no = b.trans_no
                And b.batch_id is not null
                And Sign(a.amount) = -1
                UNION ALL
                Select sum (decode(b.sf_total_type,'54',a.amount*100/98,a.amount)) paid_amount
                From koc_law_trans_detail_sub a,
                koc_law_trans_detail b
                Where a.law_file_no = p_LAW_FILE_NO
                And a.accessory_type = 1
                --And a.detail_no = :policy_info.detail_no
                And a.law_file_no = b.law_file_no
                And a.detail_no = NVL(b.detail_no,0)
                And b.sf_total_type in ('11','12','50')
                And a.trans_no = b.trans_no
                And b.batch_id is not null
                And Sign(a.amount) = -1);
                --AND b.sf_total_type = :DETAIL.SF_TOTAL;
                EXCEPTION WHEN OTHERS THEN
                l_return_amount := 0;
                END;

                KOC_LAW_RESERVE_UTILS.MUALLAK_ASIL_GET_DATA_LAWFILE( p_law_file_no, null, v_rec_sort_type, p_date, p_law_base_dtl_records);

                v_main_amount_original := KOC_LAW_RESERVE_UTILS.EXECUTE_FUNCTION_BORDRO(1, p_law_file_no, null, p_date, p_law_base_dtl_records);

                select  law_type, nvl(is_maktu,0), court_decision_amount
                into x_law_type, x_maktu, x_court_decision_amount
                from koc_law_bases where law_file_no= p_law_file_no;

                if  not (x_law_type IN ('24', '29', '30') OR x_maktu = 1) then
                  if x_court_decision_amount is null then
                   v_main_amount_original:= 0;
                  end if;
                end if;


                if nvl(p_finance_calc.is_calculate,0) = 0 then
                  p_finance_calc.main_amount := v_main_amount_original;
                  p_finance_calc.main_amount := p_finance_calc.main_amount - NVL(l_paid_amount,0) - NVL(l_return_amount,0);
                    if nvl(p_finance_calc.main_amount,0)  <= 0 then
                      p_finance_calc.main_amount := 0;
                    end if;
                  p_finance_calc.main_amount_original := p_finance_calc.main_amount;
                end if;

                if p_finance_calc.court_correction_amount is not null then  --muallak asýl ýslahtan küçük yada eþitse, ýslah faizini hesaplamamak için ýslah deðeri var olsa da null atýyorum deðerini.
                   if  v_main_amount_original <= p_finance_calc.court_correction_amount then
                      p_finance_calc.court_correction_amount := null;
                      p_finance_calc.court_correction_date := null;
                   end if;
                end if;

                if nvl(p_finance_calc.is_calculate,0) = 1 then
                  p_finance_calc.main_amount := nvl(p_finance_calc.main_amount,0);
                end if;


                if  not (x_law_type IN ('24', '29', '30') OR x_maktu = 1) then
                  if x_court_decision_amount is null then
                   v_main_amount_original:= 0;
                   p_finance_calc.main_amount := 0;
                   p_finance_calc.main_amount_original := 0;
                  end if;
                end if;


                if p_finance_calc.main_amount > p_finance_calc.main_amount_original then
                   v_error_msg :='Asýl alacak deðeri güncel muallak deðerinden büyük olamaz! ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    'KAPAK HESABI',
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                   return;
                end if;

                if p_finance_calc.main_amount_original = 0 then
                  main_amount_ratio := 0;
                else
                  main_amount_ratio := trunc((p_finance_calc.main_amount / p_finance_calc.main_amount_original),3);
                end if;
               --asýl alacak*************************************

                 /*if nvl(p_finance_calc.main_amount,0) = 0 and v_hespi_maktu_mu <> 1 then  --hasarsýzlarda maktu yada main_amount = 0 olsa dahi sadece masraf ödemesi yapabilmesi için bu þartý kaldýrdým. Hasarsýzlarda hasarlýlardaki gibi main_amount = 0 kontrolü apmadan da iþlemler bozulmadan devam edebiliyor. bu þartý kaldýrdýðým için ekstra birley yapmama gerek yok
                      v_error_msg :='Asýl alacak ödemesini 0 giremezsiniz, masraf ödeyecekseniz "Sadece Masraf Ödemesi Yapýlacak" seçeneðini seçiniz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;

                 end if;*/


               --vekalet hesaplama********************************
                p_finance_calc.calc_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', v_main_amount_original);

                if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 0 then --sadece mahkeme vekalet ücreti sabit olarak seçilmediyse hesapla

                    /*if v_hespi_maktu_mu = 1 then  --hepsi maktu ise fiktif 1 deðerini veriyorum daha sonra sýfýrlamak üzere
                      p_finance_calc.calc_court_lawyer_payment := 1;
                    end if;*/


                      if  p_finance_calc.is_real_request = 1 then
                         p_finance_calc.calc_court_lawyer_payment := 0;
                      elsif p_finance_calc.is_real_request = 0 then
                        if p_finance_calc.is_lawyer_payment_per_person = 1 then
                            p_finance_calc.calc_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', v_main_amount_original);
                               if  v_main_amount_original = 0 then
                                  p_finance_calc.calc_court_lawyer_payment := 0;
                               elsif p_finance_calc.calc_lawyer_payment < v_min_amount_mahkeme then
                                  p_finance_calc.calc_court_lawyer_payment := v_min_amount_mahkeme;
                               else
                                   p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_lawyer_payment;
                               end if;
                        elsif p_finance_calc.is_lawyer_payment_per_person = 0 then

                          if  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and v_main_amount_original  <= v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := trunc(v_main_amount_original/5,2);
                          elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and  v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme/5,2);
                          elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment/5,2);
                          elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and v_main_amount_original  <= v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := trunc(v_main_amount_original,2);
                          elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme,2);
                          elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment,2);
                          elsif    v_main_amount_original         < v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := v_main_amount_original;
                          elsif p_finance_calc.calc_lawyer_payment < v_min_amount_mahkeme then
                            p_finance_calc.calc_court_lawyer_payment := v_min_amount_mahkeme;
                          elsif p_finance_calc.calc_lawyer_payment >= v_min_amount_mahkeme then
                             p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_lawyer_payment;
                          end if;

                        end if;
                      end if;

                      if  p_finance_calc.is_stoppage_included = 1 then
                        p_finance_calc.calc_court_lawyer_payment :=  trunc(p_finance_calc.calc_court_lawyer_payment / 1.20408,2); --to_do stopaj sabitini bir loolup tablosuna kaydet
                      end if;

                        /*if v_lawyer_court is not null then --vekalet ücreti deðiþtir üzerinden yeni bir vekalet set edilmiþse, vekalet ücreti olarak bunu alýyor
                          p_finance_calc.calc_court_lawyer_payment := v_lawyer_court;
                        end if;*/

                        select nvl(sum(CALC_COURT_LAWYER_PAYMENT),0)
                        into v_calc_court_lawyer_payment
                        from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;

                        p_finance_calc.calc_court_lawyer_payment := (p_finance_calc.calc_court_lawyer_payment - v_calc_court_lawyer_payment) * main_amount_ratio;
                        if p_finance_calc.calc_court_lawyer_payment < 0 then
                          p_finance_calc.calc_court_lawyer_payment := 0;
                        end if;

                        if has_no_lawyer_payment = 1 then
                          p_finance_calc.calc_court_lawyer_payment := 0;
                        end if;

                        if v_hespi_maktu_mu = 1 or v_hespi_ihtiyaten = 1 then  --hepsi maktu ise sýfýr, (maktu oldugunda main_amount = 0 oldugu için , vekalet ucreti = 0
                         p_finance_calc.calc_court_lawyer_payment := 0;
                        end if;

                end if;

               --vekalet hesaplama bitis********************************


               --faiz hesaplama*************************************

              /*select nvl(sum(expertise_amount),0)
              into v_expertise_amount
              from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;*/

              p_finance_calc.calc_expertise_amount := nvl(p_finance_calc.expertise_amount,0);-- - v_expertise_amount;
              /*if p_finance_calc.calc_expertise_amount < 0 then
                p_finance_calc.calc_expertise_amount := 0;
              end if;*/


               if nvl(p_finance_calc.is_calculate,0) = 0 then
                 p_finance_calc.v_faiz := law_finance_interest_tbl();
                 p_finance_calc.v_faiz.extend(6);
                 p_finance_calc.v_faiz(1) := LAW_FINANCE_INTEREST_TYP(null,0,'Ana Para Faizi',null,null,null,null,null,0,0);

                 select decode(interest_type,'Y','Y','A','A','R','R','Y'), interest_type
                 into  p_finance_calc.v_faiz(1).interest_type, v_interest_type1
                 from koc_law_bases where law_file_no = p_law_file_no;


                 p_finance_calc.v_faiz(2) := p_finance_calc.v_faiz(1);
                 p_finance_calc.v_faiz(3) := p_finance_calc.v_faiz(1);
                 p_finance_calc.v_faiz(4) := p_finance_calc.v_faiz(1);
                 p_finance_calc.v_faiz(5) := p_finance_calc.v_faiz(1);
                 p_finance_calc.v_faiz(6) := p_finance_calc.v_faiz(1);
                 p_finance_calc.v_faiz(2).interest_expl := 'Ferilere Ýliþkin Faiz';
                 p_finance_calc.v_faiz(3).interest_expl := 'Ýcra Sonrasý Ana Para Faizi';
                 p_finance_calc.v_faiz(4).interest_expl := 'Ýcra Sonrasý Ferilere Faiz';
                 p_finance_calc.v_faiz(5).interest_expl := 'Islah Faizi';
                 p_finance_calc.v_faiz(6).interest_expl := 'Eksper Faizi';

               end if;

                 --anapara
                 if p_finance_calc.v_faiz(1).is_saved = 0 then
                   if p_finance_calc.court_correction_date is null then
                    p_finance_calc.v_faiz(1).interest_base_amount := nvl(v_main_amount_original,0);
                   else
                    p_finance_calc.v_faiz(1).interest_base_amount := nvl(v_main_amount_original,0) - nvl(p_finance_calc.court_correction_amount,0);
                   end if;
                   p_finance_calc.v_faiz(1).interest_start_date := p_finance_calc.payment_denounce_date;

                   if nvl(p_finance_calc.is_calculate,0) = 0 then
                    p_finance_calc.v_faiz(1).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                   end if;

                   if p_finance_calc.v_faiz(1).interest_start_date is null or p_finance_calc.v_faiz(1).interest_end_date is null then
                     p_finance_calc.v_faiz(1).calculated_interest := 0;
                   else

                     interest_amount(p_finance_calc.v_faiz(1).interest_base_amount, p_finance_calc.v_faiz(1).interest_type, p_finance_calc.v_faiz(1).interest_start_date, p_finance_calc.v_faiz(1).interest_end_date, p_finance_calc.v_faiz(1).calculated_interest);

                      select nvl( sum(calculated_interest),0) into v_Faiz from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST where sira_no = 1 and  id in (
                                                              select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                     p_finance_calc.v_faiz(1).calculated_interest := (p_finance_calc.v_faiz(1).calculated_interest - v_Faiz) * main_amount_ratio;
                     /*if p_finance_calc.v_faiz(1).calculated_interest < 0 then
                       p_finance_calc.v_faiz(1).calculated_interest := 0;
                     end if;*/
                   end if;
                 end if;

                   --Ferilere Ýliþkin Faiz
                 if p_finance_calc.v_faiz(2).is_saved = 0 then
                   p_finance_calc.v_faiz(2).interest_base_amount := nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_trial_amount,0);
                   p_finance_calc.v_faiz(2).interest_start_date := p_finance_calc.court_decision_date;

                   if nvl(p_finance_calc.is_calculate,0) = 0 then
                    p_finance_calc.v_faiz(2).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                   end if;

                   if p_finance_calc.v_faiz(2).interest_start_date is null or p_finance_calc.v_faiz(2).interest_end_date is null then
                     p_finance_calc.v_faiz(2).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_faiz(2).interest_base_amount, p_finance_calc.v_faiz(2).interest_type, p_finance_calc.v_faiz(2).interest_start_date, p_finance_calc.v_faiz(2).interest_end_date, p_finance_calc.v_faiz(2).calculated_interest);

                      /*select nvl( sum(calculated_interest),0) into v_Faiz from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST where sira_no = 2 and  id in (
                                                              select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);*/

                     p_finance_calc.v_faiz(2).calculated_interest := p_finance_calc.v_faiz(2).calculated_interest; -- (p_finance_calc.v_faiz(2).calculated_interest - v_Faiz) * main_amount_ratio;
                   end if;
                 end if;

                   --icra sonrasý ana para faizi
                 if p_finance_calc.v_faiz(3).is_saved = 0 then
                   p_finance_calc.v_faiz(3).interest_base_amount := nvl(v_main_amount_original,0);
                   if p_finance_calc.case_date is not null then
                    p_finance_calc.v_faiz(3).interest_start_date := p_finance_calc.case_date + 1 ;
                   end if;

                   if nvl(p_finance_calc.is_calculate,0) = 0 then
                    p_finance_calc.v_faiz(3).interest_end_date := p_finance_calc.payment_date;
                   end if;

                   if p_finance_calc.v_faiz(3).interest_start_date is null or p_finance_calc.v_faiz(3).interest_end_date is null then
                     p_finance_calc.v_faiz(3).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_faiz(3).interest_base_amount, p_finance_calc.v_faiz(3).interest_type, p_finance_calc.v_faiz(3).interest_start_date, p_finance_calc.v_faiz(3).interest_end_date, p_finance_calc.v_faiz(3).calculated_interest);

                      select nvl( sum(calculated_interest),0) into v_Faiz from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST where sira_no = 3 and  id in (
                                                              select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                     p_finance_calc.v_faiz(3).calculated_interest := (p_finance_calc.v_faiz(3).calculated_interest - v_Faiz) * main_amount_ratio;

                     /*if p_finance_calc.v_faiz(3).calculated_interest < 0 then
                        p_finance_calc.v_faiz(3).calculated_interest :=  0;
                     end if;*/
                   end if;
                 end if;

                   --Ýcra sonrasý Ferilere Faiz
                 if p_finance_calc.v_faiz(4).is_saved = 0 then
                   p_finance_calc.v_faiz(4).interest_base_amount := nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_expertise_amount,0);
                   if p_finance_calc.case_date is not null then
                    p_finance_calc.v_faiz(4).interest_start_date := p_finance_calc.case_date + 1 ;
                   end if;

                   if nvl(p_finance_calc.is_calculate,0) = 0 then
                    p_finance_calc.v_faiz(4).interest_end_date := p_finance_calc.payment_date;
                   end if;

                   if p_finance_calc.v_faiz(4).interest_start_date is null or p_finance_calc.v_faiz(4).interest_end_date is null then
                     p_finance_calc.v_faiz(4).calculated_interest := 0;
                   else

                     interest_amount(p_finance_calc.v_faiz(4).interest_base_amount, p_finance_calc.v_faiz(4).interest_type, p_finance_calc.v_faiz(4).interest_start_date, p_finance_calc.v_faiz(4).interest_end_date, p_finance_calc.v_faiz(4).calculated_interest);

                      /*select nvl( sum(calculated_interest),0) into v_Faiz from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST where sira_no = 4 and  id in (
                                                              select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);*/

                     p_finance_calc.v_faiz(4).calculated_interest := p_finance_calc.v_faiz(4).calculated_interest; -- (p_finance_calc.v_faiz(4).calculated_interest - v_Faiz) * main_amount_ratio;

                   end if;
                 end if;


                  --ýslah faizi
                 if p_finance_calc.v_faiz(5).is_saved = 0 then
                   p_finance_calc.v_faiz(5).interest_base_amount := nvl(p_finance_calc.court_correction_amount,0);
                   p_finance_calc.v_faiz(5).interest_start_date := p_finance_calc.court_correction_date;

                   if nvl(p_finance_calc.is_calculate,0) = 0 then
                    p_finance_calc.v_faiz(5).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                   end if;

                   if p_finance_calc.v_faiz(5).interest_start_date is null or p_finance_calc.v_faiz(5).interest_end_date is null or v_interest_type1 = 'S' then
                     p_finance_calc.v_faiz(5).calculated_interest := 0;
                   else




                     interest_amount(p_finance_calc.v_faiz(5).interest_base_amount, p_finance_calc.v_faiz(5).interest_type, p_finance_calc.v_faiz(5).interest_start_date, p_finance_calc.v_faiz(5).interest_end_date, p_finance_calc.v_faiz(5).calculated_interest);

                      select nvl( sum(calculated_interest),0) into v_Faiz from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST where sira_no = 5 and  id in (
                                                              select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                     p_finance_calc.v_faiz(5).calculated_interest := (p_finance_calc.v_faiz(5).calculated_interest - v_Faiz) * main_amount_ratio;

                     /*if p_finance_calc.v_faiz(5).calculated_interest < 0 then
                       p_finance_calc.v_faiz(5).calculated_interest := 0;
                     end if;*/
                   end if;
                 end if;


                  --eksper faizi
                 if p_finance_calc.v_faiz(6).is_saved = 0 then
                   p_finance_calc.v_faiz(6).interest_base_amount := nvl(p_finance_calc.expertise_amount,0);
                   p_finance_calc.v_faiz(6).interest_start_date := p_finance_calc.law_expertise_fee_date;

                   if nvl(p_finance_calc.is_calculate,0) = 0 then
                    p_finance_calc.v_faiz(6).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                   end if;

                   if p_finance_calc.v_faiz(6).interest_start_date is null or p_finance_calc.v_faiz(6).interest_end_date is null then
                     p_finance_calc.v_faiz(6).calculated_interest := 0;
                   else
                     interest_amount(p_finance_calc.v_faiz(6).interest_base_amount, p_finance_calc.v_faiz(6).interest_type, p_finance_calc.v_faiz(6).interest_start_date, p_finance_calc.v_faiz(6).interest_end_date, p_finance_calc.v_faiz(6).calculated_interest);

                      /*select nvl( sum(calculated_interest),0) into v_Faiz from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST where sira_no = 6 and  id in (
                                                              select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);*/

                     p_finance_calc.v_faiz(6).calculated_interest := p_finance_calc.v_faiz(6).calculated_interest; --(p_finance_calc.v_faiz(6).calculated_interest - v_Faiz) * main_amount_ratio;

                   end if;
                 end if;

                  for i in 1..p_finance_calc.v_faiz.count loop
                     if p_finance_calc.v_faiz(i).calculated_interest < 0 then
                       p_finance_calc.v_faiz(i).calculated_interest := 0;
                     end if;
                  end loop;
               --faiz hesaplama bitis********************************************************



                   --ana para
                    p_finance_calc.calc_main_amount := p_finance_calc.main_amount;

                    --ana para faizi
                    if nvl(p_finance_calc.is_interest_required,0) = 1 then
                     p_finance_calc.calc_main_amount_interest :=  p_finance_calc.v_faiz(1).calculated_interest +  p_finance_calc.v_faiz(5).calculated_interest;
                    else
                     p_finance_calc.calc_main_amount_interest := 0;
                     p_finance_calc.v_faiz(1).calculated_interest := 0;
                     p_finance_calc.v_faiz(5).calculated_interest := 0;
                    end if;

                    --ferilre iliþkin faiz
                    if nvl(p_finance_calc.is_interest_detail_required,0) = 1 then
                     p_finance_calc.calc_detail_interest :=  p_finance_calc.v_faiz(2).calculated_interest +  p_finance_calc.v_faiz(6).calculated_interest;
                    else
                     p_finance_calc.calc_detail_interest := 0;
                     p_finance_calc.v_faiz(2).calculated_interest := 0;
                     p_finance_calc.v_faiz(6).calculated_interest := 0;
                    end if;

                    --icra sonrasý faiz
                    p_finance_calc.calc_after_enf_interest :=  p_finance_calc.v_faiz(3).calculated_interest +  p_finance_calc.v_faiz(4).calculated_interest;

                  --*************************************


                    p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_main_amount,0) + nvl(p_finance_calc.calc_main_amount_interest,0)
                               + nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) +
                                     nvl(p_finance_calc.calc_expertise_amount,0) +  nvl(p_finance_calc.calc_detail_interest,0);

                    if nvl(p_finance_calc.is_trial_only,0) = 1 then  --sadece yargýlama gideri ödenecek  p_finance_calc.calc_trial_amount
                      p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_expertise_amount,0) + nvl(p_finance_calc.calc_detail_interest,0);
                      --p_finance_calc.calc_main_amount := 0;
                      p_finance_calc.calc_main_amount_interest := 0;
                      --p_finance_calc.calc_court_lawyer_payment := 0;
                      --p_finance_calc.calc_expertise_amount := 0;
                      --p_finance_calc.calc_detail_interest := 0;
                      p_finance_calc.v_faiz(1).calculated_interest := 0;
                      --p_finance_calc.v_faiz(2).calculated_interest := 0;
                      p_finance_calc.v_faiz(3).calculated_interest := 0;
                      --p_finance_calc.v_faiz(4).calculated_interest := 0;
                      p_finance_calc.v_faiz(5).calculated_interest := 0;
                      --p_finance_calc.v_faiz(6).calculated_interest := 0;

                      --p_finance_calc.calc_after_enf_interest := 0;
                    end if;



               --icra vekalet ücreti****************************************
                 SELECT tariff_rate
                 into v_tariff_rate
                 FROM koc_law_tariff_rate WHERE validity_end_date IS NULL and tariff_order = 1 AND  tariff_type= 3;

                 if p_finance_calc.calc_sub_total < v_min_amount_icra then
                   p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
                 elsif ((p_finance_calc.calc_sub_total*v_tariff_rate)/100) < v_min_amount_icra then
                   p_finance_calc.calc_enf_payment := v_min_amount_icra;
                   --p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
                 else
                   p_finance_calc.calc_enf_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.calc_sub_total);
                 end if;

                 if p_finance_calc.case_notif_date is null then
                   v_icra_7_gun := 0.75;
                 elsif (p_finance_calc.case_notif_date is not null and p_finance_calc.payment_date is not null ) and ((p_finance_calc.payment_date - p_finance_calc.case_notif_date) <= 7) then
                   v_icra_7_gun := 0.75;
                 else
                   v_icra_7_gun := 1;
                 end if;

                 if nvl(p_finance_calc.calc_enf_court_is_saved,0) = 0 then --sadece mahkeme icra ücreti sabit olarak seçilmediyse hesapla
                   p_finance_calc.calc_enf_court_payment := trunc(v_icra_7_gun * p_finance_calc.calc_enf_payment, 2);
                     if  p_finance_calc.is_stoppage_included = 1 then
                       p_finance_calc.calc_enf_court_payment :=  trunc(p_finance_calc.calc_enf_court_payment / 1.20408,2); --to_do stopaj sabitini bir lookup tablosuna kaydet
                     end if;
                 end if;

                 if nvl(p_finance_calc.is_enforcement_payment,0) = 0 then
                   p_finance_calc.calc_enf_court_payment := 0;
                 end if;

               --icra vekalet ücreti bitis****************************************


                 if nvl(p_finance_calc.calc_tahsil_harci_is_saved,0) = 0 then
                   p_finance_calc.calc_tahsil_harci := trunc((p_finance_calc.calc_sub_total * 4.55)/100,2);
                 end if;


                 if nvl(p_finance_calc.is_real_request,0) = 0 and nvl(p_finance_calc.is_icra_takibi,0) = 0 then
                   p_finance_calc.calc_enf_payment := 0;
                   p_finance_calc.calc_enf_court_payment := 0;
                   p_finance_calc.calc_tahsil_harci := 0;
                   p_finance_calc.calc_enforcement_cost := 0;
                   p_finance_calc.calc_after_enf_interest := 0;
                   p_finance_calc.v_faiz(3).calculated_interest := 0;
                   p_finance_calc.v_faiz(4).calculated_interest := 0;

                 end if;

                 p_finance_calc.calc_total_amount := nvl(p_finance_calc.calc_sub_total,0)  + nvl(p_finance_calc.calc_enf_court_payment,0) +
                            nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);




                 if nvl(p_finance_calc.is_trial_only,0) = 1 then
                   p_finance_calc.calc_after_enf_interest :=  p_finance_calc.v_faiz(4).calculated_interest;

                   p_finance_calc.calc_total_amount := p_finance_calc.calc_sub_total + nvl(p_finance_calc.calc_enf_court_payment,0)  +
                            nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);
                   --p_finance_calc.calc_enf_court_payment := 0;
                   --p_finance_calc.calc_tahsil_harci := 0;
                   --p_finance_calc.calc_enforcement_cost := 0;
                   --p_finance_calc.calc_after_enf_interest := 0;
                   --p_finance_calc.calc_main_amount := 0; --is_paying'de sýfýrladým
                   --p_finance_calc.main_amount := 0; --is_paying'de sýfýrladým
                    p_finance_calc.calc_main_amount := 0;
                 end if;

             end if;

          elsif p_finance_calc.is_paying = 1 then --kapak hesabý hasarsýz ödeme iþlemi, bunu ikinci fazda yap

               if trunc(p_finance_calc.payment_date) = trunc(sysdate ) then
                  if to_number(to_char(sysdate, 'hh24')) > 9 then
                      v_error_msg :='Gün içinde saat 10:00 dan sonra ödeme iþlemi yapamazsýnýz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                  end if;
               end if;


                select count(*) into v_odeme_count
                              from CUSTOMER.ALZ_LAW_FINANCE_CALC
                             where law_file_no = p_law_file_no and is_account is null;
                if v_odeme_count > 0 then
                      v_error_msg :='Muhasebeleþmemiþ kapak ödeme kaydý var, ödeme iþlemi yapamazsýnýz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                end if;




                if  p_finance_calc.v_faiz(1).calculated_interest < 0 or p_finance_calc.v_faiz(3).calculated_interest < 0
                     or p_finance_calc.v_faiz(5).calculated_interest < 0 then

                      v_error_msg :='Faiz miktarlarýnýz 0"dan küçük olamaz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;

                end if;



                 if nvl(p_finance_calc.is_trial_only,0) = 1 then
                   p_finance_calc.main_amount := 0;
                 end if;


              select alz_law_finance_calc_seq.nextval into p_finance_calc.id from dual;

              --to_do user olarak aznet user'ý mý geliyor yoksa weblogicteki context userý mý? --user_name kolonu için
              begin
                Insert into CUSTOMER.ALZ_LAW_FINANCE_CALC
                   (LAW_FILE_NO, PROCESS_DATE, USER_NAME, IS_CLAIM, PAYMENT_DENOUNCE_DATE,
                   LAW_EXPERTISE_FEE_DATE, COURT_CORRECTION_DATE, COURT_DECISION_DATE, CASE_DATE, CASE_NOTIF_DATE,
                   PAYMENT_DATE, MAIN_AMOUNT, COURT_TYPE, COURT_TYPE_DESC, AZS_YKS_NO,
                   COURT_FILE_NO, EXPERTISE_AMOUNT, COURT_CORRECTION_AMOUNT, IS_TAHKIM_1_5, IS_INTEREST_REQUIRED,
                   IS_LAWYER_PAYMENT_PER_PERSON, IS_REAL_REQUEST, IS_ICRA_TAKIBI, IS_ENFORCEMENT_PAYMENT, IS_INTEREST_DETAIL_REQUIRED,
                   IS_STOPPAGE_INCLUDED, CALC_MAIN_AMOUNT, CALC_MAIN_AMOUNT_INTEREST, CALC_TRIAL_AMOUNT, CALC_TRIAL_AMOUNT_IS_SAVED,
                   CALC_LAWYER_PAYMENT, CALC_COURT_LAWYER_PAYMENT, CALC_COURT_LAWYER_IS_SAVED, CALC_EXPERTISE_AMOUNT, CALC_DETAIL_INTEREST,
                   CALC_SUB_TOTAL, CALC_ENF_PAYMENT, CALC_ENF_COURT_PAYMENT, CALC_ENF_COURT_IS_SAVED, CALC_TAHSIL_HARCI,
                   CALC_TAHSIL_HARCI_IS_SAVED, CALC_ENFORCEMENT_COST, CALC_ENFORCEMENT_COST_IS_SAVED, CALC_AFTER_ENF_INTEREST, CALC_TOTAL_AMOUNT,
                   IS_CALCULATE, IS_PAYING, ID, MAIN_AMOUNT_ORIGINAL, IS_ACCOUNT)
                 Values
                   (p_law_file_no, sysdate, p_user_name, p_finance_calc.IS_CLAIM, p_finance_calc.PAYMENT_DENOUNCE_DATE,
                    p_finance_calc.LAW_EXPERTISE_FEE_DATE, p_finance_calc.COURT_CORRECTION_DATE, p_finance_calc.COURT_DECISION_DATE, p_finance_calc.CASE_DATE, p_finance_calc.CASE_NOTIF_DATE,
                    p_finance_calc.PAYMENT_DATE, p_finance_calc.MAIN_AMOUNT, p_finance_calc.COURT_TYPE, p_finance_calc.COURT_TYPE_DESC, p_finance_calc.AZS_YKS_NO,
                    p_finance_calc.COURT_FILE_NO, p_finance_calc.EXPERTISE_AMOUNT, p_finance_calc.COURT_CORRECTION_AMOUNT, p_finance_calc.IS_TAHKIM_1_5, p_finance_calc.IS_INTEREST_REQUIRED,
                    p_finance_calc.IS_LAWYER_PAYMENT_PER_PERSON, p_finance_calc.IS_REAL_REQUEST, p_finance_calc.IS_ICRA_TAKIBI, p_finance_calc.IS_ENFORCEMENT_PAYMENT, p_finance_calc.IS_INTEREST_DETAIL_REQUIRED,
                    p_finance_calc.IS_STOPPAGE_INCLUDED, p_finance_calc.CALC_MAIN_AMOUNT, p_finance_calc.CALC_MAIN_AMOUNT_INTEREST, p_finance_calc.CALC_TRIAL_AMOUNT, p_finance_calc.CALC_TRIAL_AMOUNT_IS_SAVED,
                    p_finance_calc.CALC_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_IS_SAVED, p_finance_calc.CALC_EXPERTISE_AMOUNT, p_finance_calc.CALC_DETAIL_INTEREST,
                    p_finance_calc.CALC_SUB_TOTAL, p_finance_calc.CALC_ENF_PAYMENT, p_finance_calc.CALC_ENF_COURT_PAYMENT, p_finance_calc.CALC_ENF_COURT_IS_SAVED, p_finance_calc.CALC_TAHSIL_HARCI,
                    p_finance_calc.CALC_TAHSIL_HARCI_IS_SAVED, p_finance_calc.CALC_ENFORCEMENT_COST, p_finance_calc.CALC_ENFORCEMENT_COST_IS_SAVED, p_finance_calc.CALC_AFTER_ENF_INTEREST, p_finance_calc.CALC_TOTAL_AMOUNT,
                    p_finance_calc.IS_CALCULATE, p_finance_calc.IS_PAYING, p_finance_calc.ID, p_finance_calc.MAIN_AMOUNT_ORIGINAL, null);

                   sayac := 0;
                  FOR  i in 1..p_finance_calc.v_faiz.count loop
                   sayac := sayac + 1;
                   Insert into CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                       (ID, DETAIL_NO, INTEREST_EXPL, INTEREST_BASE_AMOUNT, INTEREST_START_DATE,
                        INTEREST_END_DATE, INTEREST_TYPE, CALCULATED_INTEREST, IS_SAVED, SIRA_NO)
                     Values
                       (p_finance_calc.id, 0, p_finance_calc.v_faiz(i).INTEREST_EXPL, p_finance_calc.v_faiz(i).INTEREST_BASE_AMOUNT, p_finance_calc.v_faiz(i).INTEREST_START_DATE,
                        p_finance_calc.v_faiz(i).INTEREST_END_DATE, p_finance_calc.v_faiz(i).INTEREST_TYPE, p_finance_calc.v_faiz(i).CALCULATED_INTEREST, p_finance_calc.v_faiz(i).IS_SAVED, sayac);
                  end loop;

                  --Masraf Detay
                  insert into customer.alz_law_finance_cost
                    (id, detail_no, seq_no, explanation, amount, created_by)
                  values
                    (p_finance_calc.id, 0, 1, 'Yargýlama Gideri', nvl(p_finance_calc.calc_trial_amount, 0), p_user_name);

                  insert into customer.alz_law_finance_cost
                    (id, detail_no, seq_no, explanation, amount, created_by)
                  values
                    (p_finance_calc.id, 0, 2, 'Ekspertiz Masrafý', nvl(p_finance_calc.calc_expertise_amount, 0), p_user_name);

                  insert into customer.alz_law_finance_cost
                    (id, detail_no, seq_no, explanation, amount, created_by)
                  values
                    (p_finance_calc.id, 0, 3, 'Ýcra Masrafý', nvl(p_finance_calc.calc_enforcement_cost, 0), p_user_name);



                  COMMIT;
                   v_error_msg :='ödeme iþlemi tamamlandý ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    100,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );

              exception when others then
                   v_error_msg :='ödeme iþlemlerini kaydederken hata oluþtu ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    substr(sqlerrm,1,999),
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                return;
              end;


          elsif p_finance_calc.is_paying = 2 then --kapak hesabý snapshot kaydetme

                 if nvl(p_finance_calc.is_trial_only,0) = 1 then
                   p_finance_calc.main_amount := 0;
                 end if;


              select alz_law_finance_calc_seq.nextval into p_finance_calc.id from dual;

              --to_do user olarak aznet user'ý mý geliyor yoksa weblogicteki context userý mý? --user_name kolonu için
              begin
                Insert into CUSTOMER.ALZ_LAW_FINANCE_CALC
                   (LAW_FILE_NO, PROCESS_DATE, USER_NAME, IS_CLAIM, PAYMENT_DENOUNCE_DATE,
                   LAW_EXPERTISE_FEE_DATE, COURT_CORRECTION_DATE, COURT_DECISION_DATE, CASE_DATE, CASE_NOTIF_DATE,
                   PAYMENT_DATE, MAIN_AMOUNT, COURT_TYPE, COURT_TYPE_DESC, AZS_YKS_NO,
                   COURT_FILE_NO, EXPERTISE_AMOUNT, COURT_CORRECTION_AMOUNT, IS_TAHKIM_1_5, IS_INTEREST_REQUIRED,
                   IS_LAWYER_PAYMENT_PER_PERSON, IS_REAL_REQUEST, IS_ICRA_TAKIBI, IS_ENFORCEMENT_PAYMENT, IS_INTEREST_DETAIL_REQUIRED,
                   IS_STOPPAGE_INCLUDED, CALC_MAIN_AMOUNT, CALC_MAIN_AMOUNT_INTEREST, CALC_TRIAL_AMOUNT, CALC_TRIAL_AMOUNT_IS_SAVED,
                   CALC_LAWYER_PAYMENT, CALC_COURT_LAWYER_PAYMENT, CALC_COURT_LAWYER_IS_SAVED, CALC_EXPERTISE_AMOUNT, CALC_DETAIL_INTEREST,
                   CALC_SUB_TOTAL, CALC_ENF_PAYMENT, CALC_ENF_COURT_PAYMENT, CALC_ENF_COURT_IS_SAVED, CALC_TAHSIL_HARCI,
                   CALC_TAHSIL_HARCI_IS_SAVED, CALC_ENFORCEMENT_COST, CALC_ENFORCEMENT_COST_IS_SAVED, CALC_AFTER_ENF_INTEREST, CALC_TOTAL_AMOUNT,
                   IS_CALCULATE, IS_PAYING, ID, MAIN_AMOUNT_ORIGINAL, IS_ACCOUNT)
                 Values
                   (p_law_file_no, sysdate, p_user_name, p_finance_calc.IS_CLAIM, p_finance_calc.PAYMENT_DENOUNCE_DATE,
                    p_finance_calc.LAW_EXPERTISE_FEE_DATE, p_finance_calc.COURT_CORRECTION_DATE, p_finance_calc.COURT_DECISION_DATE, p_finance_calc.CASE_DATE, p_finance_calc.CASE_NOTIF_DATE,
                    p_finance_calc.PAYMENT_DATE, p_finance_calc.MAIN_AMOUNT, p_finance_calc.COURT_TYPE, p_finance_calc.COURT_TYPE_DESC, p_finance_calc.AZS_YKS_NO,
                    p_finance_calc.COURT_FILE_NO, p_finance_calc.EXPERTISE_AMOUNT, p_finance_calc.COURT_CORRECTION_AMOUNT, p_finance_calc.IS_TAHKIM_1_5, p_finance_calc.IS_INTEREST_REQUIRED,
                    p_finance_calc.IS_LAWYER_PAYMENT_PER_PERSON, p_finance_calc.IS_REAL_REQUEST, p_finance_calc.IS_ICRA_TAKIBI, p_finance_calc.IS_ENFORCEMENT_PAYMENT, p_finance_calc.IS_INTEREST_DETAIL_REQUIRED,
                    p_finance_calc.IS_STOPPAGE_INCLUDED, p_finance_calc.CALC_MAIN_AMOUNT, p_finance_calc.CALC_MAIN_AMOUNT_INTEREST, p_finance_calc.CALC_TRIAL_AMOUNT, p_finance_calc.CALC_TRIAL_AMOUNT_IS_SAVED,
                    p_finance_calc.CALC_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_IS_SAVED, p_finance_calc.CALC_EXPERTISE_AMOUNT, p_finance_calc.CALC_DETAIL_INTEREST,
                    p_finance_calc.CALC_SUB_TOTAL, p_finance_calc.CALC_ENF_PAYMENT, p_finance_calc.CALC_ENF_COURT_PAYMENT, p_finance_calc.CALC_ENF_COURT_IS_SAVED, p_finance_calc.CALC_TAHSIL_HARCI,
                    p_finance_calc.CALC_TAHSIL_HARCI_IS_SAVED, p_finance_calc.CALC_ENFORCEMENT_COST, p_finance_calc.CALC_ENFORCEMENT_COST_IS_SAVED, p_finance_calc.CALC_AFTER_ENF_INTEREST, p_finance_calc.CALC_TOTAL_AMOUNT,
                    p_finance_calc.IS_CALCULATE, p_finance_calc.IS_PAYING, p_finance_calc.ID, p_finance_calc.MAIN_AMOUNT_ORIGINAL, 55);

                   sayac := 0;
                  FOR  i in 1..p_finance_calc.v_faiz.count loop
                   sayac := sayac + 1;
                   Insert into CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                       (ID, DETAIL_NO, INTEREST_EXPL, INTEREST_BASE_AMOUNT, INTEREST_START_DATE,
                        INTEREST_END_DATE, INTEREST_TYPE, CALCULATED_INTEREST, IS_SAVED, SIRA_NO)
                     Values
                       (p_finance_calc.id, 0, p_finance_calc.v_faiz(i).INTEREST_EXPL, p_finance_calc.v_faiz(i).INTEREST_BASE_AMOUNT, p_finance_calc.v_faiz(i).INTEREST_START_DATE,
                        p_finance_calc.v_faiz(i).INTEREST_END_DATE, p_finance_calc.v_faiz(i).INTEREST_TYPE, p_finance_calc.v_faiz(i).CALCULATED_INTEREST, p_finance_calc.v_faiz(i).IS_SAVED, sayac);
                  end loop;

                  --Masraf Detay
                  insert into customer.alz_law_finance_cost
                    (id, detail_no, seq_no, explanation, amount, created_by)
                  values
                    (p_finance_calc.id, 0, 1, 'Yargýlama Gideri', nvl(p_finance_calc.calc_trial_amount, 0), p_user_name);

                  insert into customer.alz_law_finance_cost
                    (id, detail_no, seq_no, explanation, amount, created_by)
                  values
                    (p_finance_calc.id, 0, 2, 'Ekspertiz Masrafý', nvl(p_finance_calc.calc_expertise_amount, 0), p_user_name);

                  insert into customer.alz_law_finance_cost
                    (id, detail_no, seq_no, explanation, amount, created_by)
                  values
                    (p_finance_calc.id, 0, 3, 'Ýcra Masrafý', nvl(p_finance_calc.calc_enforcement_cost, 0), p_user_name);


                  COMMIT;
                   v_error_msg :='kaydetme iþlemi tamamlandý ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    100,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );

              exception when others then
                   v_error_msg :='kaydetme iþlemi yaparken hata oluþtu ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    substr(sqlerrm,1,999),
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                return;
              end;

          end if;


--********************************************hasarsýz hukuk dosyasý kapak hesabý bitiþ**********************************************************




       elsif p_finance_calc.is_claim = 1 then  --hasarlý hukuk dosyasý
          p_finance_calc.v_faiz := null;

          /*for r1 in (select court_decision_amount from koc_law_bases_detail where law_file_no = p_law_file_no) loop
              if r1.court_decision_amount is null then
                   v_error_msg :='Karar tutarý boþ olamaz, hukuk detay bilgilerinde karar tutarlarýnýn dolu olduðundan emin olunuz';
                       process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,  -- -1 hata demek
                        'KAPAK HESABI',
                        v_error_msg,
                        v_error_msg,
                        null,
                        null,
                        'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                        p_process_results
                    );
                        return;
              end if;
           end loop;*/


            select count(1)
            into v_hespi_maktu_mu
             from koc_law_bases_detail a
              where a.law_file_no = p_law_file_no and nvl(a.is_maktu,0) = 1 and law_type not in (24,29,30);

            v_hespi_maktu_count := v_hespi_maktu_mu;

            select count(1)
            into v_hespi_adet
             from koc_law_bases_detail a
              where a.law_file_no = p_law_file_no ;

            select count(1)
            into v_hespi_maktu_mu2
             from koc_law_bases_detail a
              where a.law_file_no = p_law_file_no and law_type in (24,29,30);

              if (v_hespi_adet - v_hespi_maktu_mu2) = v_hespi_maktu_mu and (v_hespi_adet <> v_hespi_maktu_mu2) then
               v_hespi_maktu_mu := 1;
              else
               v_hespi_maktu_mu := 0;
              end if;

            select count(1)
            into v_tedavi_count
             from koc_law_bases_detail a
              where a.law_file_no = p_law_file_no and law_type in (24);--in (24,29,30);




              select count(1)
               into v_is_calculatable
              from koc_law_bases_detail a
              where a.law_file_no = p_law_file_no and law_type in (29,30);

                 if (v_is_calculatable > 0 and v_hespi_adet = v_is_calculatable) then  --hasarlýlarda tüm dosyalar mükerrer yada ihtiyaten ise ödeme iþlemi yapýlamaz
                      v_error_msg :='Bu hukuk dosyasýndaki hasar dosyalarýnýn tamamýnýn dava tipi mükerrer yada ihtiyaten olduðu için hesaplama ve ödeme iþlemi yapýlamaz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                 end if;


          if nvl(p_finance_calc.is_paying,0) = 0 then    --kapak hesabý hesaplama

             if nvl(p_finance_calc.is_calculate,0) in (1,0) then    --kapak hesabý hesaplama, ilk defa verileri çektiði zaman bununla gelsin, bu durmda orjinal verilerle hesaplama yapacak


                /*select nvl(law_expertise_fee,0)
                  into v_law_expertise_fee
                  from koc_law_bases  where law_file_no = p_law_file_no;

                select nvl(sum(EXPERTISE_AMOUNT),0) into v_law_expertise_fee_tot  from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;

                 p_finance_calc.expertise_amount := (v_law_expertise_fee - v_law_expertise_fee_tot);*/



                if nvl(p_finance_calc.is_calculate,0) = 0 then
                   sayac := 0;
                   v_karar_count := 0;
                   p_finance_calc.v_claim := customer.law_finance_claim_tbl();

                 /*for r1 in (select (select ext_reference from clm_subfiles where claim_id =a.claim_id and sf_no=a.sf_no ) ext_reference,
                              case_amount, court_correction_amount, decode(interest_type,'Y','Y','A','A','R','R','Y') interest_type, interest_type interest_type1,interest_begin_date, detail_no
                              from koc_law_bases_detail a  where law_file_no = p_law_file_no)  loop*/

                   for r1 in (select decode(b.law_sf_type,'S',policy_ref,'P',policy_ref,
                               (select ext_reference from clm_subfiles where claim_id =a.claim_id and sf_no=a.sf_no )) ext_reference,
                      a.case_amount, a.court_correction_amount, decode(a.interest_type,'Y','Y','A','A','R','R','Y') interest_type, a.interest_type interest_type1,
                      a.interest_begin_date, a.detail_no,
                      decode(a.law_type,24,0,29,0,30,0,decode(a.is_maktu,1,1,0))  maktu_mu
                      , a.law_type, a.is_maktu, a.court_decision_amount,
                      (select explanation from alz_look_up where code = 'LAW_TYPE'and  parameter = a.law_type ) dava_tipi
                    from koc_law_bases_detail a, koc_law_bases b
                    where a.law_file_no = p_law_file_no and a.law_file_no = b.law_file_no
                    order by a.detail_no)
                   loop

                         --v_interest_type1 := '';
                         v_details_finance.interest_typ := '';
                         if r1.interest_type1 = 'S' then
                          v_details_finance.interest_typ := 'S';
                         end if;

                       --v_details_finance.ext_reference := r1.ext_reference;
                       v_details_finance.maktu_mu := r1.maktu_mu;

                       v_details_finance.tedavi_mi := 0;
                       if r1.law_type in (24,29,30) or r1.is_maktu = 1 or r1.court_decision_amount is null then
                         v_details_finance.karar_mi := 0;
                         if r1.law_type = 24 then
                           v_details_finance.tedavi_mi := 1;
                         end if;
                       else
                         v_details_finance.karar_mi := 1;
                         v_karar_count := v_karar_count + 1;
                       end if;

                       sayac := sayac + 1;
                       v_t_details_finance.extend(1);
                       v_t_details_finance(sayac) := v_details_finance;

                       p_finance_calc.v_claim.extend(1);
                       p_finance_calc.v_claim(sayac) :=  customer.law_finance_claim_typ(null, r1.detail_no, r1.ext_reference|| ' - '|| substr(r1.dava_tipi,1,14), r1.case_amount, null, r1.court_correction_amount,
                                                             r1.interest_begin_date, r1.interest_type, null,null,null,null,null,null,null,null,null,null,null);



                         p_finance_calc.v_claim(sayac).v_faiz := law_finance_interest_tbl();
                         p_finance_calc.v_claim(sayac).v_faiz.extend(6);
                         p_finance_calc.v_claim(sayac).v_faiz(1) := LAW_FINANCE_INTEREST_TYP(null,r1.detail_no,null,null,null,null,r1.interest_type,null,null,null);
                         p_finance_calc.v_claim(sayac).v_faiz(2) := p_finance_calc.v_claim(sayac).v_faiz(1);
                         p_finance_calc.v_claim(sayac).v_faiz(3) := p_finance_calc.v_claim(sayac).v_faiz(1);
                         p_finance_calc.v_claim(sayac).v_faiz(4) := p_finance_calc.v_claim(sayac).v_faiz(1);
                         p_finance_calc.v_claim(sayac).v_faiz(5) := p_finance_calc.v_claim(sayac).v_faiz(1);
                         p_finance_calc.v_claim(sayac).v_faiz(6) := p_finance_calc.v_claim(sayac).v_faiz(1);

                         p_finance_calc.v_claim(sayac).v_faiz(1).interest_expl := 'Anapara Faizi';
                         p_finance_calc.v_claim(sayac).v_faiz(2).interest_expl := 'Ferilere Ýliþkin Faiz';
                         p_finance_calc.v_claim(sayac).v_faiz(3).interest_expl := 'Ýcra Sonrasý Ana Para Faizi';
                         p_finance_calc.v_claim(sayac).v_faiz(4).interest_expl := 'Ýcra Sonrasý Ferilere Faiz';
                         p_finance_calc.v_claim(sayac).v_faiz(5).interest_expl := 'Islah Faizi';
                         p_finance_calc.v_claim(sayac).v_faiz(6).interest_expl := 'Eksper Faizi';

                         p_finance_calc.v_claim(sayac).v_faiz(2).interest_type := 'Y';
                         p_finance_calc.v_claim(sayac).v_faiz(3).interest_type := 'Y';
                         p_finance_calc.v_claim(sayac).v_faiz(4).interest_type := 'Y';
                         p_finance_calc.v_claim(sayac).v_faiz(5).interest_type := 'Y';
                         p_finance_calc.v_claim(sayac).v_faiz(6).interest_type := 'Y';


                   end loop;
                end if;



                if nvl(p_finance_calc.is_calculate,0) = 1 then
                   sayac := 0;
                   v_karar_count := 0;

                   for r1 in (select a.interest_type interest_type1, decode(a.law_type,24,0,29,0,30,0,decode(a.is_maktu,1,1,0))  maktu_mu
                    , a.law_type, a.is_maktu, a.court_decision_amount
                    from koc_law_bases_detail a, koc_law_bases b
                    where a.law_file_no = p_law_file_no
                      and a.law_file_no = b.law_file_no
                      order by a.detail_no)
                   loop

                         v_details_finance.interest_typ := '';
                         if r1.interest_type1 = 'S' then
                          v_details_finance.interest_typ := 'S';
                         end if;

                       --v_details_finance.ext_reference := r1.ext_reference;
                       v_details_finance.maktu_mu := r1.maktu_mu;

                       v_details_finance.tedavi_mi := 0;

                       if r1.law_type in (24,29,30) or r1.is_maktu = 1 or r1.court_decision_amount is null then
                         v_details_finance.karar_mi := 0;
                         if r1.law_type = 24 then
                           v_details_finance.tedavi_mi := 1;
                         end if;
                       else
                         v_details_finance.karar_mi := 1;
                         v_karar_count := v_karar_count + 1;
                       end if;

                       sayac := sayac + 1;
                       v_t_details_finance.extend(1);
                       v_t_details_finance(sayac) := v_details_finance;
                   end loop;
                end if;



                  if p_finance_calc.is_interest_detail_required is null then --kapak hesabý ilk defa geldiðinde default deðerleri sen set et(is_calculate = 0)
                       if p_finance_calc.case_notif_date is not null then
                         p_finance_calc.payment_date           := p_finance_calc.case_notif_date + 1 ;
                         if trunc(p_finance_calc.payment_date) < trunc(sysdate) then
                           p_finance_calc.payment_date           := trunc(sysdate);--trunc(sysdate + 1);
                         end if;

                       else
                         p_finance_calc.payment_date           := trunc(sysdate); --trunc(sysdate + 1);
                       end if;




                         for i in 1..p_finance_calc.v_claim.count loop
                             if p_finance_calc.v_claim(i).court_correction_amount is not null then  --daha evvel islah tarihi geçmiþ ödemelerde kaydedilmiþse bu tarihi otomatil getir.
                                 begin
                                   select court_correction_date
                                   into p_finance_calc.court_correction_date
                                   from CUSTOMER.ALZ_LAW_FINANCE_CALC
                                   where law_file_no = p_law_file_no and IS_ACCOUNT = 1 and id in (
                                         select nvl(max(id),0) from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);
                                   exit;
                                 exception when others then
                                   p_finance_calc.court_correction_date := null;
                                 end;

                             end if;
                         end loop;

                       p_finance_calc.law_expertise_fee_date := null; --kullanýcý dolduracak
                       p_finance_calc.azs_yks_no             := p_law_file_no;

                       p_finance_calc.is_lawyer_payment_per_person := 0;
                       p_finance_calc.is_real_request := 0;
                       p_finance_calc.is_icra_takibi := 1;
                       p_finance_calc.is_enforcement_payment := 1;
                       p_finance_calc.is_interest_required := 1;
                       p_finance_calc.is_interest_detail_required := 1;
                       p_finance_calc.is_stoppage_included := 0;
                       p_finance_calc.calc_trial_amount_is_saved := 0;
                       p_finance_calc.calc_court_lawyer_is_saved := 0;
                       p_finance_calc.calc_enf_court_is_saved    := 0;
                       p_finance_calc.calc_tahsil_harci_is_saved := 0;
                       p_finance_calc.calc_enforcement_cost_is_saved := 0;


                       /*if  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018')  then --mahkeme tipi tahkim ise, is_tahkim_1_5  = false olsun default
                        p_finance_calc.is_tahkim_1_5 := 0;
                       else
                        p_finance_calc.is_tahkim_1_5 := 0;
                       end if;*/
                       p_finance_calc.is_tahkim_1_5 := 0;
                  end if;




               --esas asýl alacak*************************************


                /* Varsa ödenen tutar bulma */
                --message('odenen_iadebas');message('odenen_iadebas');

                for i in 1..p_finance_calc.v_claim.count loop
                   BEGIN
                        SELECT sum(nvl(paid_amount,0))
                        into l_paid_amount
                        from (
                    Select sum (decode(b.sf_total_type,'35',a.amount*118/98,a.amount)) paid_amount
                    From koc_law_trans_detail_sub a,
                    koc_law_trans_detail b
                    Where a.law_file_no = p_law_file_no
                    And a.accessory_type = 1
                    And a.detail_no = nvl(p_finance_calc.v_claim(i).detail_no,0)
                    And a.law_file_no = b.law_file_no
                    --And a.detail_no = NVL(b.detail_no,0)
                    And b.sf_total_type in ('35')
                    And a.trans_no = b.trans_no
                    And b.batch_id is not null
                    and b.ticket_date <= p_date
                    And Sign(a.amount) = 1
                    UNION ALL
                    Select sum (decode(b.sf_total_type,'50',decode(b.document_type,'SMM',a.amount*118/98,a.amount),a.amount)) paid_amount
                    From koc_law_trans_detail_sub a,
                    koc_law_trans_detail b
                    Where a.law_file_no = p_law_file_no
                    And a.accessory_type = 1
                    And a.detail_no = nvl(p_finance_calc.v_claim(i).detail_no,0)
                    And a.law_file_no = b.law_file_no
                    And a.detail_no = NVL(b.detail_no,0)
                    And b.sf_total_type in ('11','12','50')
                    And a.trans_no = b.trans_no
                    And b.batch_id is not null
                    and b.ticket_date <= p_date
                    And Sign(a.amount) = 1);
                    --AND b.sf_total_type = :DETAIL.SF_TOTAL;
                    EXCEPTION WHEN OTHERS THEN
                    l_paid_amount := 0;
                    END;
                    /*-------------------------*/

                    /*Varsa Iade Tutari Bulma */
                    BEGIN
                        SELECT sum(nvl(paid_amount,0))
                        into l_return_amount
                        from (
                    Select sum (decode(b.sf_total_type,'54',a.amount*100/98,a.amount)) paid_amount
                    From koc_law_trans_detail_sub a,
                    koc_law_trans_detail b
                    Where a.law_file_no = p_law_file_no
                    And a.accessory_type = 1
                    And a.detail_no = nvl(p_finance_calc.v_claim(i).detail_no,0)
                    And a.law_file_no = b.law_file_no
                    --And a.detail_no = NVL(b.detail_no,0)
                    And b.sf_total_type in ('35')
                    And a.trans_no = b.trans_no
                    And b.batch_id is not null
                    and b.ticket_date <= p_date
                    And Sign(a.amount) = -1
                    UNION ALL
                    Select sum (decode(b.sf_total_type,'54',a.amount*100/98,a.amount)) paid_amount
                    From koc_law_trans_detail_sub a,
                    koc_law_trans_detail b
                    Where a.law_file_no = p_law_file_no
                    And a.accessory_type = 1
                    And a.detail_no = nvl(p_finance_calc.v_claim(i).detail_no,0)
                    And a.law_file_no = b.law_file_no
                    And a.detail_no = NVL(b.detail_no,0)
                    And b.sf_total_type in ('11','12','50')
                    And a.trans_no = b.trans_no
                    and b.ticket_date <= p_date
                    And b.batch_id is not null
                    And Sign(a.amount) = -1);
                    --AND b.sf_total_type = :DETAIL.SF_TOTAL;
                    EXCEPTION WHEN OTHERS THEN
                    l_return_amount := 0;
                    END;

                    KOC_LAW_RESERVE_UTILS.MUALLAK_ASIL_GET_DATA_LAWFILE( p_law_file_no, p_finance_calc.v_claim(i).detail_no, v_rec_sort_type, p_date, p_law_base_dtl_records);

                    p_finance_calc.v_claim(i).raw_main_amount_original := KOC_LAW_RESERVE_UTILS.EXECUTE_FUNCTION_BORDRO(1, p_law_file_no, p_finance_calc.v_claim(i).detail_no, p_date, p_law_base_dtl_records);


                    select  law_type, nvl(is_maktu,0), court_decision_amount
                    into x_law_type, x_maktu, x_court_decision_amount
                    from koc_law_bases_detail where law_file_no= p_law_file_no and detail_no = p_finance_calc.v_claim(i).detail_no;

                    if  not (x_law_type IN ('24', '29', '30') OR x_maktu = 1) then
                      if x_court_decision_amount is null then
                       p_finance_calc.v_claim(i).raw_main_amount_original := 0;
                      else
                       v_is_karar := 1;
                      end if;
                    end if;



                    if nvl(p_finance_calc.is_calculate,0) = 0 then
                      p_finance_calc.v_claim(i).main_amount := p_finance_calc.v_claim(i).raw_main_amount_original;
                      p_finance_calc.v_claim(i).main_amount := p_finance_calc.v_claim(i).main_amount - NVL(l_paid_amount,0) - NVL(l_return_amount,0);
                        if nvl(p_finance_calc.v_claim(i).main_amount,0)  <= 0 then
                          p_finance_calc.v_claim(i).main_amount := 0;
                        end if;
                      p_finance_calc.v_claim(i).main_amount_original := p_finance_calc.v_claim(i).main_amount;
                    end if;

                    if p_finance_calc.v_claim(i).court_correction_amount is not null then  --muallak asýl ýslahtan küçük yada eþitse, ýslah faizini hesaplamamak için ýslah deðeri var olsa da null atýyorum deðerini.
                       if  p_finance_calc.v_claim(i).raw_main_amount_original <= p_finance_calc.v_claim(i).court_correction_amount then
                          p_finance_calc.v_claim(i).court_correction_amount := null;
                          --p_finance_calc.v_claim(i).court_correction_date := null;
                       end if;
                    end if;

                    if nvl(p_finance_calc.is_calculate,0) = 1 then
                      p_finance_calc.v_claim(i).main_amount := nvl(p_finance_calc.v_claim(i).main_amount,0);
                    end if;

                    if  not (x_law_type IN ('24', '29', '30') OR x_maktu = 1) then
                      if x_court_decision_amount is null then
                       p_finance_calc.v_claim(i).raw_main_amount_original := 0;
                       p_finance_calc.v_claim(i).main_amount := 0;
                       p_finance_calc.v_claim(i).main_amount_original := 0;
                      end if;
                    end if;

                    if p_finance_calc.v_claim(i).main_amount > p_finance_calc.v_claim(i).main_amount_original then
                       v_error_msg :='Asýl alacak deðeri güncel muallak deðerinden büyük olamaz! '||p_finance_calc.v_claim(i).ext_reference;
                       process_result(
                        1, --p_process_no
                        0,
                        9,
                        -1,  -- -1 hata demek
                        'KAPAK HESABI',
                        'KAPAK HESABI',
                        v_error_msg,
                        null,
                        null,
                        'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                        p_process_results
                        );
                       return;
                    end if;

                    if p_finance_calc.v_claim(i).main_amount_original = 0 then
                      p_finance_calc.v_claim(i).main_amount_ratio := 0;
                    else
                      p_finance_calc.v_claim(i).main_amount_ratio := trunc((p_finance_calc.v_claim(i).main_amount / p_finance_calc.v_claim(i).main_amount_original),3);
                    end if;



                end loop;


                    v_main_amount_original :=0;
                    p_finance_calc.main_amount := 0;

                    for i in 1..p_finance_calc.v_claim.count loop
                     v_main_amount_original := v_main_amount_original + nvl(p_finance_calc.v_claim(i).raw_main_amount_original,0);
                     --ana para
                     p_finance_calc.main_amount := p_finance_calc.main_amount + p_finance_calc.v_claim(i).main_amount;
                     v_main_amount_original1    := v_main_amount_original1 + nvl(p_finance_calc.v_claim(i).main_amount_original,0);
                    end loop;
               --asýl alacak*************************************



                p_finance_calc.calc_main_amount := p_finance_calc.main_amount;

                 if nvl(p_finance_calc.main_amount,0) = 0  and (v_hespi_maktu_mu = 0 and v_is_karar = 0 and v_tedavi_count = 0) then
                      v_error_msg :='Bu hukuk dosyasýndaki hasar dosyalarýnýn tamamýnda Asýl alacak belirsiz. En az bir hasar dosyasýnda karar olmalý yada dosyadaki tüm hasarlar maktu olmalý)';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;

                 end if;


                 --vekalet hesaplama********************************
                   if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 1 then
                    saved_calc_court_law_payment := p_finance_calc.calc_court_lawyer_payment;
                   end if;

                   p_finance_calc.calc_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', v_main_amount_original);

                    --if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 0 then --sadece mahkeme vekalet ücreti sabit olarak seçilmediyse hesapla
                      if  p_finance_calc.is_real_request = 1 then
                         p_finance_calc.calc_court_lawyer_payment := 0;
                           for i in 1..p_finance_calc.v_claim.count loop
                             p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                           end loop;
                      elsif p_finance_calc.is_real_request = 0 then
                        if p_finance_calc.is_lawyer_payment_per_person = 1 then
                           p_finance_calc.calc_court_lawyer_payment := 0;
                           for i in 1..p_finance_calc.v_claim.count loop
                              temp_lawyer_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.v_claim(i).raw_main_amount_original);
                               if  p_finance_calc.v_claim(i).raw_main_amount_original = 0 then
                                  --p_finance_calc.calc_court_lawyer_payment := 0;
                                  p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                               elsif temp_lawyer_payment < v_min_amount_mahkeme then
                                  p_finance_calc.v_claim(i).vekalet_ucreti := v_min_amount_mahkeme;
                               else
                                   p_finance_calc.v_claim(i).vekalet_ucreti := temp_lawyer_payment;
                               end if;
                             p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_court_lawyer_payment + p_finance_calc.v_claim(i).vekalet_ucreti;
                           end loop;
                        elsif p_finance_calc.is_lawyer_payment_per_person = 0 then

                              if  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and v_main_amount_original  <= v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := trunc(v_main_amount_original/5,2);
                              elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and  v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme/5,2);
                              elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 1 and v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment/5,2);
                              elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and v_main_amount_original  <= v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := trunc(v_main_amount_original,2);
                              elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and  v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment <= v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := trunc(v_min_amount_mahkeme,2);
                              elsif  v_court_enf_type = 'M' and  p_finance_calc.court_type in  ('M018') and p_finance_calc.is_tahkim_1_5 = 0 and  v_main_amount_original  > v_min_amount_mahkeme and p_finance_calc.calc_lawyer_payment > v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := trunc(p_finance_calc.calc_lawyer_payment,2);
                              elsif    v_main_amount_original         < v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := v_main_amount_original;
                              elsif p_finance_calc.calc_lawyer_payment < v_min_amount_mahkeme then
                                p_finance_calc.calc_court_lawyer_payment := v_min_amount_mahkeme;
                              elsif p_finance_calc.calc_lawyer_payment >= v_min_amount_mahkeme then
                                 p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_lawyer_payment;
                              end if;

                           v_total_temp := 0;
                           for i in 1..p_finance_calc.v_claim.count loop
                             if v_main_amount_original = 0 then
                              p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                             else
                               if v_main_amount_original = 0 then
                                 p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                               else
                                p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.calc_court_lawyer_payment * (p_finance_calc.v_claim(i).raw_main_amount_original/v_main_amount_original),2);
                               end if;
                             end if;

                             v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);
                           end loop;

                           --Kuruþ farký
                           v_diff := p_finance_calc.calc_court_lawyer_payment - v_total_temp;
                           if v_diff <> 0 then
                               for i in 1..p_finance_calc.v_claim.count loop
                                   if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                                       p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                                       exit;
                                   end if;
                               end loop;
                           end if;

                        end if;
                      end if;

                      if  p_finance_calc.is_stoppage_included = 1 then
                        p_finance_calc.calc_court_lawyer_payment :=  trunc(p_finance_calc.calc_court_lawyer_payment / 1.20408,2); --to_do stopaj sabitini bir lookup tablosuna kaydet
                           v_total_temp := 0;
                           for i in 1..p_finance_calc.v_claim.count loop
                             p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti / 1.20408,2);
                             v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);
                           end loop;

                           --Kuruþ farký
                           v_diff := p_finance_calc.calc_court_lawyer_payment - v_total_temp;
                           if v_diff <> 0 then
                               for i in 1..p_finance_calc.v_claim.count loop
                                   if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                                       p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                                       exit;
                                   end if;
                               end loop;
                           end if;
                      end if;

                    --end if;

                    if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) in (0,1) then
                       select nvl(sum(CALC_COURT_LAWYER_PAYMENT),0)
                        into v_calc_court_lawyer_payment
                        from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;

                     if (p_finance_calc.calc_court_lawyer_payment - v_calc_court_lawyer_payment) <=0 then
                          p_finance_calc.calc_court_lawyer_payment := 0;
                          for i in 1.. p_finance_calc.v_claim.count loop
                           p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                          end loop;
                     else

                        p_finance_calc.calc_court_lawyer_payment := 0;
                        v_total_temp := 0;
                        v_total_vekalet := 0;
                        for i in 1.. p_finance_calc.v_claim.count loop
                          select nvl(sum(court_lawyer_payment),0)
                          into v_vekalet_ucreti
                          from CUSTOMER.ALZ_LAW_FINANCE_CLAIM where detail_no = p_finance_calc.v_claim(i).detail_no
                           and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                           v_total_vekalet := v_total_temp + (nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) - v_vekalet_ucreti);
                           p_finance_calc.v_claim(i).vekalet_ucreti := (p_finance_calc.v_claim(i).vekalet_ucreti - v_vekalet_ucreti) * p_finance_calc.v_claim(i).main_amount_ratio;
                           if p_finance_calc.v_claim(i).vekalet_ucreti < 0 then
                              p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                           end if;

                           v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);

                           p_finance_calc.calc_court_lawyer_payment := p_finance_calc.calc_court_lawyer_payment + p_finance_calc.v_claim(i).vekalet_ucreti;
                        end loop;


                        --Kuruþ farký
                        v_diff := v_total_vekalet - v_total_temp;
                        if v_diff <> 0 then
                           for i in 1..p_finance_calc.v_claim.count loop
                               if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                                   p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                                   exit;
                               end if;
                           end loop;
                        end if;
                     end if;
                    end if;

                    if has_no_lawyer_payment = 1 then
                      p_finance_calc.calc_court_lawyer_payment := 0;
                       for i in 1.. p_finance_calc.v_claim.count loop
                         p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                      end loop;
                    end if;


                    if nvl(p_finance_calc.calc_court_lawyer_is_saved,0) = 1 then --sadece mahkeme vekalet ücreti sabit olarak seçildiyse;

                      if nvl(saved_calc_court_law_payment,0) = 0 then
                         p_finance_calc.calc_court_lawyer_payment := 0;
                           for i in 1..p_finance_calc.v_claim.count loop
                             p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                           end loop;
                      elsif saved_calc_court_law_payment > 0 then
                          v_total_temp := 0;
                          if  p_finance_calc.is_real_request = 1 then
                             p_finance_calc.calc_court_lawyer_payment := 0;
                               for i in 1..p_finance_calc.v_claim.count loop
                                 p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                               end loop;
                          else
                            if p_finance_calc.calc_court_lawyer_payment > 0 then
                              ratio :=  saved_calc_court_law_payment / p_finance_calc.calc_court_lawyer_payment;
                              for i in 1..p_finance_calc.v_claim.count loop
                                p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(p_finance_calc.v_claim(i).vekalet_ucreti * ratio ,2);
                                v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);
                              end loop;
                              p_finance_calc.calc_court_lawyer_payment := saved_calc_court_law_payment;

                            elsif p_finance_calc.calc_court_lawyer_payment = 0 then  --bu durumda calc_court_lawyer_is_saved deðeri 0'dan buyuk olduðu için aðýrlýk orantýlarýna bakmadan  maktu yada mükerrer olmasýna da bakmadan eþit olarak bölüyrum. daha sonra maktu ve mülerrer ve bunlarýn dýþýn M.A. sý olanlarýn nasol bir aðýrlýða göre faðýtýlacaðýný da ayrýca hesap etmen gerekecek
                              --p_finance_calc.calc_court_lawyer_payment = 0   olmasý sadece v_hespi_maktu_mu = 1 durumunda gerçekleþebilir, bu yüzden ayrýca if v_hespi_maktu_mu = 1 then þeklinde ekstra kod yazmadým
                              --if v_main_amount_original = 0 then
                                  for i in 1..p_finance_calc.v_claim.count loop
                                    --p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(saved_calc_court_law_payment / p_finance_calc.v_claim.count ,2);
                                       if v_hespi_maktu_mu = 1 then
                                         if v_t_details_finance(i).maktu_mu = 1 then
                                          p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(saved_calc_court_law_payment / v_hespi_maktu_count,2);
                                         else
                                           p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                                         end if;
                                       elsif v_is_karar = 1 then
                                         if v_t_details_finance(i).karar_mi = 1 then
                                          p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(saved_calc_court_law_payment / v_karar_count,2);
                                         else
                                           p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                                         end if;
                                       elsif v_tedavi_count > 0 then
                                         if v_t_details_finance(i).tedavi_mi = 1 then
                                          p_finance_calc.v_claim(i).vekalet_ucreti :=  trunc(saved_calc_court_law_payment / v_tedavi_count,2);
                                         else
                                           p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                                         end if;
                                       end if;

                                       v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0);
                                  end loop;
                              p_finance_calc.calc_court_lawyer_payment := saved_calc_court_law_payment;
                              --end if;

                            end if;

                            --Kuruþ farký
                            v_diff := p_finance_calc.calc_court_lawyer_payment - v_total_temp;
                            if v_diff <> 0 then
                               for i in 1..p_finance_calc.v_claim.count loop
                                   if nvl(p_finance_calc.v_claim(i).vekalet_ucreti, 0) > 0 then
                                       p_finance_calc.v_claim(i).vekalet_ucreti := trunc(p_finance_calc.v_claim(i).vekalet_ucreti + v_diff, 2);
                                       exit;
                                   end if;
                               end loop;
                            end if;
                          end if;
                      end if;

                    end if;


                      for i in 1..p_finance_calc.v_claim.count loop
                        p_finance_calc.v_claim(i).court_lawyer_payment :=  p_finance_calc.v_claim(i).vekalet_ucreti;

                      end loop;

                 --vekalet hesaplama bitis********************************



                 --faiz hesaplama*************************************

                  /*select nvl(sum(expertise_amount),0)
                  into v_expertise_amount
                  from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1;*/

                  p_finance_calc.calc_expertise_amount := nvl(p_finance_calc.expertise_amount,0);-- - v_expertise_amount;
                  /*if p_finance_calc.calc_expertise_amount < 0 then
                    p_finance_calc.calc_expertise_amount := 0;
                  end if;*/



                    for i in 1..p_finance_calc.v_claim.count loop

                       --anapara
                       if p_finance_calc.court_correction_date is null then
                        p_finance_calc.v_claim(i).v_faiz(1).interest_base_amount := nvl(p_finance_calc.v_claim(i).raw_main_amount_original,0);
                       else
                        p_finance_calc.v_claim(i).v_faiz(1).interest_base_amount := nvl(p_finance_calc.v_claim(i).raw_main_amount_original,0) - nvl(p_finance_calc.v_claim(i).court_correction_amount,0);
                       end if;
                       p_finance_calc.v_claim(i).v_faiz(1).interest_start_date := p_finance_calc.v_claim(i).interest_begin_date;

                      if nvl(p_finance_calc.is_calculate,0) = 0 then
                       p_finance_calc.v_claim(i).v_faiz(1).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                      end if;

                       if nvl(p_finance_calc.v_claim(i).v_faiz(1).is_saved,0) = 0 then
                           if p_finance_calc.v_claim(i).v_faiz(1).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(1).interest_end_date is null or   v_t_details_finance(i).interest_typ = 'S' then
                             p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                           else
                             interest_amount(p_finance_calc.v_claim(i).v_faiz(1).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(1).interest_type, p_finance_calc.v_claim(i).v_faiz(1).interest_start_date, p_finance_calc.v_claim(i).v_faiz(1).interest_end_date, p_finance_calc.v_claim(i).v_faiz(1).calculated_interest);

                              select nvl( sum(calculated_interest),0) into v_Faiz
                              from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                              where sira_no = 1 and detail_no = p_finance_calc.v_claim(i).detail_no
                                    and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                             p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := (p_finance_calc.v_claim(i).v_faiz(1).calculated_interest - v_Faiz) * p_finance_calc.v_claim(i).main_amount_ratio;

                             /*if p_finance_calc.v_claim(i).v_faiz(1).calculated_interest < 0 then
                              p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                             end if;*/
                           end if;
                       end if;


                       --Ferilere Ýliþkin Faiz
                       if p_finance_calc.main_amount = 0 then  --hepsi maktu ise yada net muallak 0 ise
                         if v_hespi_maktu_mu = 1 then
                             if v_t_details_finance(i).maktu_mu = 1 then
                               p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_hespi_maktu_count , 2);--trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2);
                             else
                              p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := 0;
                             end if;
                         elsif v_is_karar  = 1 then
                             if v_t_details_finance(i).karar_mi = 1 then
                               p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_karar_count , 2);--trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2);
                             else
                              p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := 0;
                             end if;
                         elsif v_tedavi_count > 0 then
                           if v_t_details_finance(i).tedavi_mi = 1 then
                            p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_tedavi_count , 2);--trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2);
                           else
                             p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                           end if;
                         end if;

                       else
                         p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount), 2);--trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2);
                       end if;
                       p_finance_calc.v_claim(i).v_faiz(2).interest_start_date := p_finance_calc.court_decision_date;

                       if nvl(p_finance_calc.is_calculate,0) = 0 then
                        p_finance_calc.v_claim(i).v_faiz(2).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                       end if;

                       if nvl(p_finance_calc.v_claim(i).v_faiz(2).is_saved,0) = 0 then
                           if p_finance_calc.v_claim(i).v_faiz(2).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(2).interest_end_date is null then
                             p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := 0;
                           else
                             interest_amount(p_finance_calc.v_claim(i).v_faiz(2).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(2).interest_type, p_finance_calc.v_claim(i).v_faiz(2).interest_start_date, p_finance_calc.v_claim(i).v_faiz(2).interest_end_date, p_finance_calc.v_claim(i).v_faiz(2).calculated_interest);

                              /*select nvl( sum(calculated_interest),0) into v_Faiz
                              from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                              where sira_no = 2 and detail_no = p_finance_calc.v_claim(i).detail_no
                                    and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);*/

                             p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := p_finance_calc.v_claim(i).v_faiz(2).calculated_interest;--(p_finance_calc.v_claim(i).v_faiz(2).calculated_interest - v_Faiz) * p_finance_calc.v_claim(i).main_amount_ratio;

                           end if;
                       end if;

                       --icra sonrasý ana para faizi
                       p_finance_calc.v_claim(i).v_faiz(3).interest_base_amount := nvl(p_finance_calc.v_claim(i).raw_main_amount_original,0);
                       if p_finance_calc.case_date is not null then
                        p_finance_calc.v_claim(i).v_faiz(3).interest_start_date := p_finance_calc.case_date + 1 ;
                       end if;

                       if nvl(p_finance_calc.is_calculate,0) = 0 then
                        p_finance_calc.v_claim(i).v_faiz(3).interest_end_date := p_finance_calc.payment_date;
                       end if;

                       if nvl(p_finance_calc.v_claim(i).v_faiz(3).is_saved,0) = 0 then
                           if p_finance_calc.v_claim(i).v_faiz(3).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(3).interest_end_date is null then
                             p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;
                           else
                             interest_amount(p_finance_calc.v_claim(i).v_faiz(3).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(3).interest_type, p_finance_calc.v_claim(i).v_faiz(3).interest_start_date, p_finance_calc.v_claim(i).v_faiz(3).interest_end_date, p_finance_calc.v_claim(i).v_faiz(3).calculated_interest);

                              select nvl( sum(calculated_interest),0) into v_Faiz
                              from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                              where sira_no = 3 and detail_no = p_finance_calc.v_claim(i).detail_no
                                    and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                             p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := (p_finance_calc.v_claim(i).v_faiz(3).calculated_interest - v_Faiz) * p_finance_calc.v_claim(i).main_amount_ratio;
                             /*if p_finance_calc.v_claim(i).v_faiz(3).calculated_interest < 0 then
                                p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;
                             end if;*/
                           end if;
                       end if;

                       --Ýcra sonrasý Ferilere Faiz
                       if p_finance_calc.main_amount = 0 then --hepsi maktuysa
                          if v_hespi_maktu_mu = 1 then
                             if v_t_details_finance(i).maktu_mu = 1 then
                               p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_hespi_maktu_count,2)
                                    +  trunc(nvl(p_finance_calc.calc_expertise_amount,0) / v_hespi_maktu_count,2);
                             else
                               p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := 0;
                             end if;
                          elsif v_is_karar = 1 then
                             if v_t_details_finance(i).karar_mi = 1 then
                               p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_karar_count,2)
                                    +  trunc(nvl(p_finance_calc.calc_expertise_amount,0) / v_karar_count,2);
                             else
                               p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := 0;
                             end if;
                         elsif v_tedavi_count > 0 then
                             if v_t_details_finance(i).tedavi_mi = 1 then
                               p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_tedavi_count,2)
                                    +  trunc(nvl(p_finance_calc.calc_expertise_amount,0) / v_tedavi_count,2);
                             else
                               p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                             end if;
                          end if;
                       else
                         p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_lawyer_payment,0) + trunc(nvl(p_finance_calc.calc_trial_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)--trunc(nvl(p_finance_calc.calc_trial_amount,0)/p_finance_calc.v_claim.count,2)
                                +  trunc(nvl(p_finance_calc.calc_expertise_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);--trunc(nvl(p_finance_calc.calc_expertise_amount,0)/p_finance_calc.v_claim.count,2);
                       end if;
                       if p_finance_calc.case_date is not null then
                        p_finance_calc.v_claim(i).v_faiz(4).interest_start_date := p_finance_calc.case_date + 1 ;
                       end if;

                       if nvl(p_finance_calc.is_calculate,0) = 0 then
                        p_finance_calc.v_claim(i).v_faiz(4).interest_end_date := p_finance_calc.payment_date;
                       end if;

                       if nvl(p_finance_calc.v_claim(i).v_faiz(4).is_saved,0) = 0 then
                           if p_finance_calc.v_claim(i).v_faiz(4).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(4).interest_end_date is null then
                             p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := 0;
                           else
                             interest_amount(p_finance_calc.v_claim(i).v_faiz(4).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(4).interest_type, p_finance_calc.v_claim(i).v_faiz(4).interest_start_date, p_finance_calc.v_claim(i).v_faiz(4).interest_end_date, p_finance_calc.v_claim(i).v_faiz(4).calculated_interest);

                              /*select nvl( sum(calculated_interest),0) into v_Faiz
                              from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                              where sira_no = 4 and detail_no = p_finance_calc.v_claim(i).detail_no
                                    and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);*/

                             p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := p_finance_calc.v_claim(i).v_faiz(4).calculated_interest;--(p_finance_calc.v_claim(i).v_faiz(4).calculated_interest - v_Faiz) * p_finance_calc.v_claim(i).main_amount_ratio;

                           end if;
                       end if;


                      --ýslah faizi
                       p_finance_calc.v_claim(i).v_faiz(5).interest_base_amount := nvl(p_finance_calc.v_claim(i).court_correction_amount,0);
                       p_finance_calc.v_claim(i).v_faiz(5).interest_start_date := p_finance_calc.court_correction_date;

                       if nvl(p_finance_calc.is_calculate,0) = 0 then
                        p_finance_calc.v_claim(i).v_faiz(5).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                       end if;

                       if nvl(p_finance_calc.v_claim(i).v_faiz(5).is_saved,0) = 0 then
                           if p_finance_calc.v_claim(i).v_faiz(5).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(5).interest_end_date is null or v_t_details_finance(i).interest_typ = 'S'  then
                             p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                           else
                             interest_amount(p_finance_calc.v_claim(i).v_faiz(5).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(5).interest_type, p_finance_calc.v_claim(i).v_faiz(5).interest_start_date, p_finance_calc.v_claim(i).v_faiz(5).interest_end_date, p_finance_calc.v_claim(i).v_faiz(5).calculated_interest);

                              select nvl( sum(calculated_interest),0) into v_Faiz
                              from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                              where sira_no = 5 and detail_no = p_finance_calc.v_claim(i).detail_no
                                    and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);

                             p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := (p_finance_calc.v_claim(i).v_faiz(5).calculated_interest - v_Faiz) * p_finance_calc.v_claim(i).main_amount_ratio;
                             /*if p_finance_calc.v_claim(i).v_faiz(5).calculated_interest < 0  then
                               p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                             end if;*/
                           end if;
                       end if;



                      --eksper faizi
                       if p_finance_calc.main_amount = 0 then
                          if v_hespi_maktu_mu = 1 then
                             if v_t_details_finance(i).maktu_mu = 1 then
                                p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := trunc(nvl(p_finance_calc.expertise_amount,0) / v_hespi_maktu_count,2);
                             else
                               p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := 0;
                             end if;
                          elsif v_is_karar = 1 then
                             if v_t_details_finance(i).karar_mi = 1 then
                                p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := trunc(nvl(p_finance_calc.expertise_amount,0) / v_karar_count,2);
                             else
                               p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := 0;
                             end if;
                          elsif v_tedavi_count > 0 then
                             if v_t_details_finance(i).tedavi_mi = 1 then
                               p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := trunc(nvl(p_finance_calc.expertise_amount,0) / v_tedavi_count,2);
                             else
                               p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                             end if;
                          end if;
                       else
                        p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount := trunc(nvl(p_finance_calc.expertise_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);--trunc(nvl(p_finance_calc.expertise_amount,0)/p_finance_calc.v_claim.count,2);
                       end if;
                       p_finance_calc.v_claim(i).v_faiz(6).interest_start_date := p_finance_calc.law_expertise_fee_date;

                       if nvl(p_finance_calc.is_calculate,0) = 0 then
                        p_finance_calc.v_claim(i).v_faiz(6).interest_end_date := nvl(p_finance_calc.case_date,p_finance_calc.payment_date);
                       end if;

                       if nvl(p_finance_calc.v_claim(i).v_faiz(6).is_saved,0) = 0 then
                           if p_finance_calc.v_claim(i).v_faiz(6).interest_start_date is null or p_finance_calc.v_claim(i).v_faiz(6).interest_end_date is null then
                             p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := 0;
                           else
                             interest_amount(p_finance_calc.v_claim(i).v_faiz(6).interest_base_amount, p_finance_calc.v_claim(i).v_faiz(6).interest_type, p_finance_calc.v_claim(i).v_faiz(6).interest_start_date, p_finance_calc.v_claim(i).v_faiz(6).interest_end_date, p_finance_calc.v_claim(i).v_faiz(6).calculated_interest);

                              /*select nvl( sum(calculated_interest),0) into v_Faiz
                              from  CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                              where sira_no = 6 and detail_no = p_finance_calc.v_claim(i).detail_no
                                    and id in ( select id from CUSTOMER.ALZ_LAW_FINANCE_CALC where law_file_no = p_law_file_no and IS_ACCOUNT = 1);*/

                             p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := p_finance_calc.v_claim(i).v_faiz(6).calculated_interest; --(p_finance_calc.v_claim(i).v_faiz(6).calculated_interest - v_Faiz) * p_finance_calc.v_claim(i).main_amount_ratio;

                           end if;
                       end if;

                      p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).v_faiz(1).calculated_interest + p_finance_calc.v_claim(i).v_faiz(2).calculated_interest
                                                               +   p_finance_calc.v_claim(i).v_faiz(3).calculated_interest + p_finance_calc.v_claim(i).v_faiz(4).calculated_interest
                                                               +   p_finance_calc.v_claim(i).v_faiz(5).calculated_interest + p_finance_calc.v_claim(i).v_faiz(6).calculated_interest;

                    end loop;




                  p_finance_calc.calc_main_amount_interest := 0;
                  p_finance_calc.calc_detail_interest      := 0;
                  p_finance_calc.calc_after_enf_interest   := 0;

                    for i in 1..p_finance_calc.v_claim.count loop
                        for j in 1..p_finance_calc.v_claim(i).v_faiz.count loop
                          if p_finance_calc.v_claim(i).v_faiz(j).calculated_interest is null then
                             p_finance_calc.v_claim(i).v_faiz(j).calculated_interest := 0;
                          end if;
                        end loop;


                        --ana para faizi
                        if nvl(p_finance_calc.is_interest_required,0) = 1 then
                         p_finance_calc.calc_main_amount_interest :=  p_finance_calc.calc_main_amount_interest + p_finance_calc.v_claim(i).v_faiz(1).calculated_interest +  p_finance_calc.v_claim(i).v_faiz(5).calculated_interest;
                        else
                         p_finance_calc.calc_main_amount_interest := 0;
                         p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(1).calculated_interest - p_finance_calc.v_claim(i).v_faiz(5).calculated_interest;
                         p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                         p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                        end if;

                        --ferilre iliþkin faiz
                        if nvl(p_finance_calc.is_interest_detail_required,0) = 1 then
                         p_finance_calc.calc_detail_interest :=  p_finance_calc.calc_detail_interest + p_finance_calc.v_claim(i).v_faiz(2).calculated_interest +  p_finance_calc.v_claim(i).v_faiz(6).calculated_interest;
                        else
                         p_finance_calc.calc_detail_interest := 0;
                         p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(2).calculated_interest - p_finance_calc.v_claim(i).v_faiz(6).calculated_interest;
                         p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := 0;
                         p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := 0;
                        end if;

                        --icra sonrasý faiz
                        p_finance_calc.calc_after_enf_interest :=  p_finance_calc.calc_after_enf_interest + p_finance_calc.v_claim(i).v_faiz(3).calculated_interest +  p_finance_calc.v_claim(i).v_faiz(4).calculated_interest;
                    end loop;
               --faiz hesaplama bitis*************************************


                    p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_main_amount,0) + nvl(p_finance_calc.calc_main_amount_interest,0)
                               + nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) +
                                     nvl(p_finance_calc.calc_expertise_amount,0) +  nvl(p_finance_calc.calc_detail_interest,0);

                    if nvl(p_finance_calc.is_trial_only,0) = 1 then  --sadece yargýlama gideri ödenecek  p_finance_calc.calc_trial_amount
                      p_finance_calc.calc_sub_total := nvl(p_finance_calc.calc_trial_amount,0) + nvl(p_finance_calc.calc_court_lawyer_payment,0) + nvl(p_finance_calc.calc_expertise_amount,0) + nvl(p_finance_calc.calc_detail_interest,0);
                      p_finance_calc.calc_main_amount_interest := 0;
                      ---p_finance_calc.calc_court_lawyer_payment := 0;
                      --p_finance_calc.calc_expertise_amount := 0;
                      --p_finance_calc.calc_detail_interest := 0;
                      --p_finance_calc.calc_after_enf_interest := 0;
                      for i in 1..p_finance_calc.v_claim.count loop
                       --p_finance_calc.v_claim(i).v_faiz(2).calculated_interest := 0;
                       --p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := 0;
                       --p_finance_calc.v_claim(i).v_faiz(6).calculated_interest := 0;

                         p_finance_calc.calc_after_enf_interest := p_finance_calc.calc_after_enf_interest - p_finance_calc.v_claim(i).v_faiz(3).calculated_interest;

                         p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(3).calculated_interest -
                                                p_finance_calc.v_claim(i).v_faiz(1).calculated_interest - p_finance_calc.v_claim(i).v_faiz(5).calculated_interest;

                         p_finance_calc.v_claim(i).v_faiz(1).calculated_interest := 0;
                         p_finance_calc.v_claim(i).v_faiz(5).calculated_interest := 0;
                         p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;

                      end loop;
                    end if;

               --icra vekalet ücreti****************************************
                 SELECT tariff_rate
                 into v_tariff_rate
                 FROM koc_law_tariff_rate WHERE validity_end_date IS NULL and tariff_order = 1 AND  tariff_type= 3;

                 if p_finance_calc.calc_sub_total < v_min_amount_icra then
                   p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
                 elsif ((p_finance_calc.calc_sub_total*v_tariff_rate)/100) < v_min_amount_icra then
                   p_finance_calc.calc_enf_payment := v_min_amount_icra;
                   --p_finance_calc.calc_enf_payment := p_finance_calc.calc_sub_total;
                 else
                   p_finance_calc.calc_enf_payment := koc_law_reserve_utils.VEKALET_HESAPLA ('3', p_finance_calc.calc_sub_total);
                 end if;

                 if p_finance_calc.case_notif_date is null then
                   v_icra_7_gun := 0.75;
                 elsif (p_finance_calc.case_notif_date is not null and p_finance_calc.payment_date is not null ) and ((p_finance_calc.payment_date - p_finance_calc.case_notif_date) <= 7) then
                   v_icra_7_gun := 0.75;
                 else
                   v_icra_7_gun := 1;
                 end if;

                 if nvl(p_finance_calc.calc_enf_court_is_saved,0) = 0 then --sadece mahkeme icra ücreti sabit olarak seçilmediyse hesapla
                   p_finance_calc.calc_enf_court_payment := trunc(v_icra_7_gun * p_finance_calc.calc_enf_payment, 2);
                     if  p_finance_calc.is_stoppage_included = 1 then
                       p_finance_calc.calc_enf_court_payment :=  trunc(p_finance_calc.calc_enf_court_payment / 1.20408,2); --to_do stopaj sabitini bir lookup tablosuna kaydet
                     end if;
                 end if;

                 if nvl(p_finance_calc.is_enforcement_payment,0) = 0 then
                   p_finance_calc.calc_enf_court_payment := 0;
                 end if;

                v_total_temp := 0;
                for i in 1..p_finance_calc.v_claim.count loop
                  if nvl(p_finance_calc.is_enforcement_payment,0) = 1 then
                     if p_finance_calc.main_amount > 0 then
                         p_finance_calc.v_claim(i).enf_payment :=  trunc(nvl(p_finance_calc.calc_enf_court_payment,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);
                     else
                        if v_hespi_maktu_mu = 1 then
                            if v_t_details_finance(i).maktu_mu = 1 then
                              p_finance_calc.v_claim(i).enf_payment :=  trunc(nvl(p_finance_calc.calc_enf_court_payment,0) / v_hespi_maktu_count ,2);
                            else
                              p_finance_calc.v_claim(i).enf_payment := 0;
                            end if;
                        elsif v_is_karar  = 1 then
                            if v_t_details_finance(i).karar_mi = 1 then
                              p_finance_calc.v_claim(i).enf_payment :=  trunc(nvl(p_finance_calc.calc_enf_court_payment,0) / v_karar_count ,2);
                            else
                              p_finance_calc.v_claim(i).enf_payment := 0;
                            end if;
                        elsif v_tedavi_count > 0 then
                            if v_t_details_finance(i).tedavi_mi = 1 then
                              p_finance_calc.v_claim(i).enf_payment :=  trunc(nvl(p_finance_calc.calc_enf_court_payment,0) / v_tedavi_count ,2);
                            else
                              p_finance_calc.v_claim(i).enf_payment := 0;
                            end if;
                        end if;
                     end if;
                  else
                    p_finance_calc.v_claim(i).enf_payment := 0;
                  end if;

                  v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).enf_payment, 0);
                end loop;

                --Kuruþ farký
                v_diff := p_finance_calc.calc_enf_court_payment - v_total_temp;
                if v_diff <> 0 then
                   for i in 1..p_finance_calc.v_claim.count loop
                       if nvl(p_finance_calc.v_claim(i).enf_payment, 0) > 0 then
                           p_finance_calc.v_claim(i).enf_payment := trunc(p_finance_calc.v_claim(i).enf_payment + v_diff, 2);
                           exit;
                       end if;
                   end loop;
                end if;
               --icra vekalet ücreti bitis****************************************
/*
                --masraf(yargýlama gideri, eksper ücreti ve icra masrafý)
                for i in 1..p_finance_calc.v_claim.count loop
                  if p_finance_calc.main_amount > 0 then
                      p_finance_calc.v_claim(i).cost :=  (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)) + (trunc(nvl(p_finance_calc.calc_trial_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)) + (trunc(nvl(p_finance_calc.calc_expertise_amount,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2));
                  else
                     if v_hespi_maktu_mu = 1 then
                        if v_t_details_finance(i).maktu_mu = 1 then
                          p_finance_calc.v_claim(i).cost :=  (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / v_hespi_maktu_count ,2)) + (trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_hespi_maktu_count ,2)) + (trunc(nvl(p_finance_calc.calc_expertise_amount,0) / v_hespi_maktu_count ,2));
                        else
                          p_finance_calc.v_claim(i).cost := 0;
                        end if;
                     elsif v_is_karar = 1 then
                        if v_t_details_finance(i).karar_mi = 1 then
                          p_finance_calc.v_claim(i).cost :=  (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / v_karar_count ,2)) + (trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_karar_count ,2)) + (trunc(nvl(p_finance_calc.calc_expertise_amount,0) / v_karar_count ,2));
                        else
                          p_finance_calc.v_claim(i).cost := 0;
                        end if;
                     elsif v_tedavi_count > 0 then
                        if v_t_details_finance(i).tedavi_mi = 1 then
                          p_finance_calc.v_claim(i).cost :=  (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / v_tedavi_count ,2)) + (trunc(nvl(p_finance_calc.calc_trial_amount,0) / v_tedavi_count ,2)) + (trunc(nvl(p_finance_calc.calc_expertise_amount,0) / v_tedavi_count ,2));
                        else
                          p_finance_calc.v_claim(i).vekalet_ucreti := 0;
                        end if;
                     end if;
                  end if;
                end loop;
*/

                if p_finance_calc.v_claim.count > 0 then
                    for j in 1..3 loop
                        for i in 1..p_finance_calc.v_claim.count loop
                          if j = 1 then
                              p_finance_calc.v_claim(i).cost_detail := law_finance_cost_tbl();
                          end if;

                          p_finance_calc.v_claim(i).cost_detail.extend();
                          p_finance_calc.v_claim(i).cost_detail(j) := law_finance_cost_typ(null,null,null,null,null);

                          if p_finance_calc.main_amount > 0 then
                            v_ratio := p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount;
                          else
                            v_ratio := 1 / p_finance_calc.v_claim.count;
                          end if;

                          if p_finance_calc.main_amount > 0 then
                              v_ratio := p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount;
                          else
                             if v_hespi_maktu_mu = 1 then
                                if v_t_details_finance(i).maktu_mu = 1 then
                                  v_ratio := 1 / v_hespi_maktu_count;
                                else
                                  v_ratio := 0;
                                end if;
                             elsif v_is_karar = 1 then
                                if v_t_details_finance(i).karar_mi = 1 then
                                  v_ratio := 1 / v_karar_count;
                                else
                                  v_ratio := 0;
                                end if;
                             elsif v_tedavi_count > 0 then
                                if v_t_details_finance(i).tedavi_mi = 1 then
                                  v_ratio := 1 / v_tedavi_count;
                                else
                                  v_ratio := 0;
                                end if;
                             end if;
                          end if;

                          if j = 1 then
                              p_finance_calc.v_claim(i).cost := 0;
                              p_finance_calc.v_claim(i).cost_detail(j).explanation := 'Yargýlama Gideri';
                              p_finance_calc.v_claim(i).cost_detail(j).amount := trunc(nvl(p_finance_calc.calc_trial_amount,0) * v_ratio, 2);

                              if p_finance_calc.v_claim(i).cost_detail(j).amount > 0 then
                                  v_total_trial_amount := nvl(v_total_trial_amount, 0) + p_finance_calc.v_claim(i).cost_detail(j).amount;

                                  v_diff := nvl(p_finance_calc.calc_trial_amount, 0) - nvl(v_total_trial_amount, 0);

                                  --Kuruþ farký düzeltme
                                  if i = p_finance_calc.v_claim.count and v_diff <> 0 then
                                    for k in 1..p_finance_calc.v_claim.count loop
                                        if p_finance_calc.v_claim(k).cost_detail(j).amount > 0 then
                                            p_finance_calc.v_claim(k).cost_detail(j).amount := p_finance_calc.v_claim(k).cost_detail(j).amount + v_diff;
                                            exit;
                                        end if;
                                    end loop;
                                  end if;
                              end if;

                          elsif j = 2 then
                              p_finance_calc.v_claim(i).cost_detail(j).explanation := 'Ekspertiz Masrafý';
                              p_finance_calc.v_claim(i).cost_detail(j).amount := trunc(nvl(p_finance_calc.calc_expertise_amount,0) * v_ratio, 2);

                              if p_finance_calc.v_claim(i).cost_detail(j).amount > 0 then
                                  v_total_expertise_cost := nvl(v_total_expertise_cost, 0) + p_finance_calc.v_claim(i).cost_detail(j).amount;

                                  v_diff := nvl(p_finance_calc.calc_expertise_amount, 0) - nvl(v_total_expertise_cost, 0);

                                  --Kuruþ farký düzeltme
                                  if i = p_finance_calc.v_claim.count and v_diff <> 0 then
                                    for k in 1..p_finance_calc.v_claim.count loop
                                        if p_finance_calc.v_claim(k).cost_detail(j).amount > 0 then
                                            p_finance_calc.v_claim(k).cost_detail(j).amount := p_finance_calc.v_claim(k).cost_detail(j).amount + v_diff;
                                            exit;
                                        end if;
                                    end loop;
                                  end if;
                              end if;
                          else
                              p_finance_calc.v_claim(i).cost_detail(j).explanation := 'Ýcra Masrafý';
                              p_finance_calc.v_claim(i).cost_detail(j).amount := trunc(nvl(p_finance_calc.calc_enforcement_cost,0) * v_ratio, 2);

                              if p_finance_calc.v_claim(i).cost_detail(j).amount > 0 then
                                  v_total_enforcement_cost := nvl(v_total_enforcement_cost, 0) + p_finance_calc.v_claim(i).cost_detail(j).amount;

                                  v_diff := nvl(p_finance_calc.calc_enforcement_cost, 0) - nvl(v_total_enforcement_cost, 0);

                                  --Kuruþ farký düzeltme
                                  if i = p_finance_calc.v_claim.count and v_diff <> 0 then
                                    for k in 1..p_finance_calc.v_claim.count loop
                                        if p_finance_calc.v_claim(k).cost_detail(j).amount > 0 then
                                            p_finance_calc.v_claim(k).cost_detail(j).amount := p_finance_calc.v_claim(k).cost_detail(j).amount + v_diff;
                                            exit;
                                        end if;
                                    end loop;
                                  end if;
                              end if;
                          end if;

                          p_finance_calc.v_claim(i).cost_detail(j).detail_no := p_finance_calc.v_claim(i).detail_no;
                          p_finance_calc.v_claim(i).cost_detail(j).seq_no := j;
                          p_finance_calc.v_claim(i).cost := nvl(p_finance_calc.v_claim(i).cost, 0) + nvl(p_finance_calc.v_claim(i).cost_detail(j).amount, 0);
                        end loop;
                    end loop;
                end if;

                --masraf(yargýlama gideri, eksper ücreti ve icra masrafý)

                --tahsil harcý
                if nvl(p_finance_calc.calc_tahsil_harci_is_saved,0) = 0 then
                  p_finance_calc.calc_tahsil_harci := trunc((p_finance_calc.calc_sub_total * 4.55)/100,2);
                end if;

                v_total_temp := 0;
                for i in 1..p_finance_calc.v_claim.count loop
                     if p_finance_calc.main_amount > 0 then
                        p_finance_calc.v_claim(i).tahsil_harci :=  trunc(nvl(p_finance_calc.calc_tahsil_harci,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2);
                     else
                        if v_hespi_maktu_mu = 1 then
                           if v_t_details_finance(i).maktu_mu = 1 then
                             p_finance_calc.v_claim(i).tahsil_harci :=  trunc(nvl(p_finance_calc.calc_tahsil_harci,0) / v_hespi_maktu_count ,2);
                           else
                             p_finance_calc.v_claim(i).tahsil_harci := 0;
                           end if;
                        elsif v_is_karar = 1 then
                           if v_t_details_finance(i).karar_mi = 1 then
                             p_finance_calc.v_claim(i).tahsil_harci :=  trunc(nvl(p_finance_calc.calc_tahsil_harci,0) / v_karar_count ,2);
                           else
                             p_finance_calc.v_claim(i).tahsil_harci := 0;
                           end if;
                        elsif v_tedavi_count > 0 then
                           if v_t_details_finance(i).tedavi_mi = 1 then
                             p_finance_calc.v_claim(i).tahsil_harci :=  trunc(nvl(p_finance_calc.calc_tahsil_harci,0) / v_tedavi_count ,2);
                           else
                             p_finance_calc.v_claim(i).tahsil_harci := 0;
                           end if;
                        end if;
                     end if;

                     v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).tahsil_harci, 0);
                end loop;

                --Kuruþ farký
                v_diff := p_finance_calc.calc_tahsil_harci - v_total_temp;
                if v_diff <> 0 then
                    for i in 1..p_finance_calc.v_claim.count loop
                        if p_finance_calc.v_claim(i).tahsil_harci > 0 then
                            p_finance_calc.v_claim(i).tahsil_harci := trunc(p_finance_calc.v_claim(i).tahsil_harci + v_diff, 2);
                            exit;
                        end if;
                    end loop;
                end if;
               --tahsil harcý bitis

                 if nvl(p_finance_calc.is_real_request,0) = 0 and nvl(p_finance_calc.is_icra_takibi,0) = 0 then
                      --xxx := 1;
                    v_total_temp := 0;
                    for i in 1..p_finance_calc.v_claim.count loop
                       p_finance_calc.v_claim(i).enf_payment :=  0;
                       p_finance_calc.v_claim(i).tahsil_harci := 0;

                       if p_finance_calc.main_amount > 0 then
                          p_finance_calc.v_claim(i).cost :=  p_finance_calc.v_claim(i).cost - (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) * (p_finance_calc.v_claim(i).main_amount/p_finance_calc.main_amount),2)) ;
                       else
                          if v_hespi_maktu_mu = 1 then
                             if v_t_details_finance(i).maktu_mu = 1 then
                               p_finance_calc.v_claim(i).cost :=  p_finance_calc.v_claim(i).cost - (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / v_hespi_maktu_count ,2));
                             else
                               p_finance_calc.v_claim(i).cost := 0;
                             end if;
                          elsif v_is_karar  = 1 then
                             if v_t_details_finance(i).karar_mi  = 1 then
                               p_finance_calc.v_claim(i).cost :=  p_finance_calc.v_claim(i).cost - (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / v_karar_count ,2));
                             else
                               p_finance_calc.v_claim(i).cost := 0;
                             end if;
                          elsif v_tedavi_count > 0 then
                             if v_t_details_finance(i).tedavi_mi = 1 then
                               p_finance_calc.v_claim(i).cost :=  p_finance_calc.v_claim(i).cost - (trunc(nvl(p_finance_calc.calc_enforcement_cost,0) / v_tedavi_count ,2));
                             else
                               p_finance_calc.v_claim(i).cost := 0;
                             end if;
                          end if;
                       end if;

                       v_total_temp := v_total_temp + nvl(p_finance_calc.v_claim(i).cost, 0);

                       if p_finance_calc.v_claim(i).interest_amount <> 0 then
                         p_finance_calc.v_claim(i).interest_amount := p_finance_calc.v_claim(i).interest_amount - p_finance_calc.v_claim(i).v_faiz(3).calculated_interest - p_finance_calc.v_claim(i).v_faiz(4).calculated_interest;
                       end if;
                       p_finance_calc.v_claim(i).v_faiz(3).calculated_interest := 0;
                       p_finance_calc.v_claim(i).v_faiz(4).calculated_interest := 0;

                       --Ýcra Masrafý hasar detayý 0'lanýyor
                       p_finance_calc.v_claim(i).cost_detail(3).amount := 0;
                    end loop;

                   p_finance_calc.calc_enf_court_payment := 0;
                   p_finance_calc.calc_tahsil_harci := 0;
                   p_finance_calc.calc_enforcement_cost := 0;
                   p_finance_calc.calc_after_enf_interest := 0;

                   --Kuruþ farký
                   v_diff := nvl(p_finance_calc.calc_enforcement_cost, 0) +  nvl(p_finance_calc.calc_trial_amount, 0) +  nvl(p_finance_calc.calc_expertise_amount, 0) - v_total_temp;
                   if v_diff <> 0 then
                    for i in 1..p_finance_calc.v_claim.count loop
                        if p_finance_calc.v_claim(i).cost > 0 then
                            p_finance_calc.v_claim(i).cost := trunc(p_finance_calc.v_claim(i).cost + v_diff, 2);
                            exit;
                        end if;
                    end loop;
                   end if;
                 end if;


                 p_finance_calc.calc_total_amount := nvl(p_finance_calc.calc_sub_total,0)  + nvl(p_finance_calc.calc_enf_court_payment,0) +
                            nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);




                 if nvl(p_finance_calc.is_trial_only,0) = 1 then
                   p_finance_calc.calc_total_amount := p_finance_calc.calc_sub_total + nvl(p_finance_calc.calc_enf_court_payment,0)  +
                            nvl(p_finance_calc.calc_tahsil_harci,0) + nvl(p_finance_calc.calc_enforcement_cost,0) + nvl(p_finance_calc.calc_after_enf_interest,0);
                   --p_finance_calc.calc_enf_court_payment := 0;
                   --p_finance_calc.calc_tahsil_harci := 0;
                   --p_finance_calc.calc_enforcement_cost := 0;
                   --p_finance_calc.calc_after_enf_interest := 0;
                   --p_finance_calc.calc_main_amount := 0; --is_paying'de sýfýrladým
                      /*for i in 1..p_finance_calc.v_claim.count loop
                        --p_finance_calc.v_claim(i).main_amount := 0; --is_paying'de sýfýrladým
                        p_finance_calc.v_claim(i).tahsil_harci := 0;
                      end loop;*/
                  p_finance_calc.calc_main_amount := 0;
                 end if;

             end if;

          elsif p_finance_calc.is_paying = 1 then --kapak hesabý hasarlý ödeme iþlemi, bunu ikinci fazda yap

               if trunc(p_finance_calc.payment_date) = trunc(sysdate ) then
                  if to_number(to_char(sysdate, 'hh24')) > 9 then
                      v_error_msg :='Gün içinde saat 10:00 dan sonra ödeme iþlemi yapamazsýnýz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                  end if;
               end if;


                select count(*) into v_odeme_count
                              from CUSTOMER.ALZ_LAW_FINANCE_CALC
                             where law_file_no = p_law_file_no and is_account is null;
                if v_odeme_count > 0 then
                      v_error_msg :='Muhasebeleþmemiþ kapak ödeme kaydý var, ödeme iþlemi yapamazsýnýz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                end if;


                for i in 1..p_finance_calc.v_claim.count loop
                    if p_finance_calc.v_claim(i).v_faiz(1).calculated_interest < 0 or  p_finance_calc.v_claim(i).v_faiz(3).calculated_interest < 0 or
                           p_finance_calc.v_claim(i).v_faiz(5).calculated_interest < 0  then
                      v_error_msg :='faiz hesabýnda negatif faiz ödeyemezsiniz';
                           process_result(
                            1, --p_process_no
                            0,
                            9,
                            -1,  -- -1 hata demek
                            'KAPAK HESABI',
                            v_error_msg,
                            v_error_msg,
                            null,
                            null,
                            'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                            p_process_results
                        );
                            return;
                    end if;
                end loop;


                if nvl(p_finance_calc.is_trial_only,0) = 1 then
                  p_finance_calc.main_amount := 0;
                    for i in 1..p_finance_calc.v_claim.count loop
                      p_finance_calc.v_claim(i).main_amount := 0;
                    end loop;
                end if;


              select alz_law_finance_calc_seq.nextval into p_finance_calc.id from dual;

              begin
                Insert into CUSTOMER.ALZ_LAW_FINANCE_CALC
                   (LAW_FILE_NO, PROCESS_DATE, USER_NAME, IS_CLAIM, PAYMENT_DENOUNCE_DATE,
                   LAW_EXPERTISE_FEE_DATE, COURT_CORRECTION_DATE, COURT_DECISION_DATE, CASE_DATE, CASE_NOTIF_DATE,
                   PAYMENT_DATE, MAIN_AMOUNT, COURT_TYPE, COURT_TYPE_DESC, AZS_YKS_NO,
                   COURT_FILE_NO, EXPERTISE_AMOUNT, COURT_CORRECTION_AMOUNT, IS_TAHKIM_1_5, IS_INTEREST_REQUIRED,
                   IS_LAWYER_PAYMENT_PER_PERSON, IS_REAL_REQUEST, IS_ICRA_TAKIBI, IS_ENFORCEMENT_PAYMENT, IS_INTEREST_DETAIL_REQUIRED,
                   IS_STOPPAGE_INCLUDED, CALC_MAIN_AMOUNT, CALC_MAIN_AMOUNT_INTEREST, CALC_TRIAL_AMOUNT, CALC_TRIAL_AMOUNT_IS_SAVED,
                   CALC_LAWYER_PAYMENT, CALC_COURT_LAWYER_PAYMENT, CALC_COURT_LAWYER_IS_SAVED, CALC_EXPERTISE_AMOUNT, CALC_DETAIL_INTEREST,
                   CALC_SUB_TOTAL, CALC_ENF_PAYMENT, CALC_ENF_COURT_PAYMENT, CALC_ENF_COURT_IS_SAVED, CALC_TAHSIL_HARCI,
                   CALC_TAHSIL_HARCI_IS_SAVED, CALC_ENFORCEMENT_COST, CALC_ENFORCEMENT_COST_IS_SAVED, CALC_AFTER_ENF_INTEREST, CALC_TOTAL_AMOUNT,
                   IS_CALCULATE, IS_PAYING, ID, MAIN_AMOUNT_ORIGINAL, IS_ACCOUNT)
                 Values
                   (p_law_file_no, sysdate, p_user_name, p_finance_calc.IS_CLAIM, p_finance_calc.PAYMENT_DENOUNCE_DATE,
                    p_finance_calc.LAW_EXPERTISE_FEE_DATE, p_finance_calc.COURT_CORRECTION_DATE, p_finance_calc.COURT_DECISION_DATE, p_finance_calc.CASE_DATE, p_finance_calc.CASE_NOTIF_DATE,
                    p_finance_calc.PAYMENT_DATE, p_finance_calc.MAIN_AMOUNT, p_finance_calc.COURT_TYPE, p_finance_calc.COURT_TYPE_DESC, p_finance_calc.AZS_YKS_NO,
                    p_finance_calc.COURT_FILE_NO, p_finance_calc.EXPERTISE_AMOUNT, p_finance_calc.COURT_CORRECTION_AMOUNT, p_finance_calc.IS_TAHKIM_1_5, p_finance_calc.IS_INTEREST_REQUIRED,
                    p_finance_calc.IS_LAWYER_PAYMENT_PER_PERSON, p_finance_calc.IS_REAL_REQUEST, p_finance_calc.IS_ICRA_TAKIBI, p_finance_calc.IS_ENFORCEMENT_PAYMENT, p_finance_calc.IS_INTEREST_DETAIL_REQUIRED,
                    p_finance_calc.IS_STOPPAGE_INCLUDED, p_finance_calc.CALC_MAIN_AMOUNT, p_finance_calc.CALC_MAIN_AMOUNT_INTEREST, p_finance_calc.CALC_TRIAL_AMOUNT, p_finance_calc.CALC_TRIAL_AMOUNT_IS_SAVED,
                    p_finance_calc.CALC_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_IS_SAVED, p_finance_calc.CALC_EXPERTISE_AMOUNT, p_finance_calc.CALC_DETAIL_INTEREST,
                    p_finance_calc.CALC_SUB_TOTAL, p_finance_calc.CALC_ENF_PAYMENT, p_finance_calc.CALC_ENF_COURT_PAYMENT, p_finance_calc.CALC_ENF_COURT_IS_SAVED, p_finance_calc.CALC_TAHSIL_HARCI,
                    p_finance_calc.CALC_TAHSIL_HARCI_IS_SAVED, p_finance_calc.CALC_ENFORCEMENT_COST, p_finance_calc.CALC_ENFORCEMENT_COST_IS_SAVED, p_finance_calc.CALC_AFTER_ENF_INTEREST, p_finance_calc.CALC_TOTAL_AMOUNT,
                    p_finance_calc.IS_CALCULATE, p_finance_calc.IS_PAYING, p_finance_calc.ID, p_finance_calc.MAIN_AMOUNT_ORIGINAL, null);


               for i in 1..p_finance_calc.v_claim.count loop

                Insert into CUSTOMER.ALZ_LAW_FINANCE_CLAIM
                   (ID, DETAIL_NO, EXT_REFERENCE, CASE_AMOUNT, MAIN_AMOUNT,
                    COURT_CORRECTION_AMOUNT, INTEREST_BEGIN_DATE, INTEREST_TYPE, INTEREST_AMOUNT, TAHSIL_HARCI,
                    COST, COURT_LAWYER_PAYMENT,enf_payment, MAIN_AMOUNT_ORIGINAL)
                 Values
                   (p_finance_calc.id, p_finance_calc.v_claim(i).detail_no, p_finance_calc.v_claim(i).EXT_REFERENCE, p_finance_calc.v_claim(i).CASE_AMOUNT, p_finance_calc.v_claim(i).MAIN_AMOUNT,
                    p_finance_calc.v_claim(i).COURT_CORRECTION_AMOUNT, p_finance_calc.v_claim(i).INTEREST_BEGIN_DATE, p_finance_calc.v_claim(i).INTEREST_TYPE, p_finance_calc.v_claim(i).INTEREST_AMOUNT, p_finance_calc.v_claim(i).TAHSIL_HARCI,
                    p_finance_calc.v_claim(i).COST, p_finance_calc.v_claim(i).COURT_LAWYER_PAYMENT, p_finance_calc.v_claim(i).enf_payment, p_finance_calc.v_claim(i).MAIN_AMOUNT_ORIGINAL);

                    sayac := 0;

                    for j in 1..p_finance_calc.v_claim(i).v_faiz.count loop
                       sayac := sayac + 1;
                       Insert into CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                        (ID, DETAIL_NO, INTEREST_EXPL,
                         INTEREST_BASE_AMOUNT, INTEREST_START_DATE, INTEREST_END_DATE,
                         INTEREST_TYPE, CALCULATED_INTEREST, IS_SAVED, SIRA_NO)
                       Values
                        (p_finance_calc.id, p_finance_calc.v_claim(i).detail_no, p_finance_calc.v_claim(i).v_faiz(j).INTEREST_EXPL,
                         p_finance_calc.v_claim(i).v_faiz(j).INTEREST_BASE_AMOUNT, p_finance_calc.v_claim(i).v_faiz(j).INTEREST_START_DATE, p_finance_calc.v_claim(i).v_faiz(j).INTEREST_END_DATE,
                         p_finance_calc.v_claim(i).v_faiz(j).INTEREST_TYPE, p_finance_calc.v_claim(i).v_faiz(j).CALCULATED_INTEREST, p_finance_calc.v_claim(i).v_faiz(j).IS_SAVED, sayac);

                    end loop;

                    for  j in 1..p_finance_calc.v_claim(i).cost_detail.count loop
                       insert into customer.alz_law_finance_cost
                          (id, detail_no, seq_no, explanation, amount, created_by)
                        values
                          (p_finance_calc.id, p_finance_calc.v_claim(i).cost_detail(j).detail_no, p_finance_calc.v_claim(i).cost_detail(j). seq_no, p_finance_calc.v_claim(i).cost_detail(j).explanation, p_finance_calc.v_claim(i).cost_detail(j).amount, p_user_name);
                    end loop;

               end loop;

                  COMMIT;

                   v_error_msg :='ödeme iþlemi tamamlandý ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    100,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );


              exception when others then
                   v_error_msg :='ödeme iþlemlerini kaydederken hata oluþtu ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    substr(sqlerrm,1,999),
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                return;
              end;
          elsif p_finance_calc.is_paying = 2 then --kapak hesabý snapshot kaydetme

                if nvl(p_finance_calc.is_trial_only,0) = 1 then
                  p_finance_calc.main_amount := 0;
                    for i in 1..p_finance_calc.v_claim.count loop
                      p_finance_calc.v_claim(i).main_amount := 0;
                    end loop;
                end if;
              select alz_law_finance_calc_seq.nextval into p_finance_calc.id from dual;

              begin
                Insert into CUSTOMER.ALZ_LAW_FINANCE_CALC
                   (LAW_FILE_NO, PROCESS_DATE, USER_NAME, IS_CLAIM, PAYMENT_DENOUNCE_DATE,
                   LAW_EXPERTISE_FEE_DATE, COURT_CORRECTION_DATE, COURT_DECISION_DATE, CASE_DATE, CASE_NOTIF_DATE,
                   PAYMENT_DATE, MAIN_AMOUNT, COURT_TYPE, COURT_TYPE_DESC, AZS_YKS_NO,
                   COURT_FILE_NO, EXPERTISE_AMOUNT, COURT_CORRECTION_AMOUNT, IS_TAHKIM_1_5, IS_INTEREST_REQUIRED,
                   IS_LAWYER_PAYMENT_PER_PERSON, IS_REAL_REQUEST, IS_ICRA_TAKIBI, IS_ENFORCEMENT_PAYMENT, IS_INTEREST_DETAIL_REQUIRED,
                   IS_STOPPAGE_INCLUDED, CALC_MAIN_AMOUNT, CALC_MAIN_AMOUNT_INTEREST, CALC_TRIAL_AMOUNT, CALC_TRIAL_AMOUNT_IS_SAVED,
                   CALC_LAWYER_PAYMENT, CALC_COURT_LAWYER_PAYMENT, CALC_COURT_LAWYER_IS_SAVED, CALC_EXPERTISE_AMOUNT, CALC_DETAIL_INTEREST,
                   CALC_SUB_TOTAL, CALC_ENF_PAYMENT, CALC_ENF_COURT_PAYMENT, CALC_ENF_COURT_IS_SAVED, CALC_TAHSIL_HARCI,
                   CALC_TAHSIL_HARCI_IS_SAVED, CALC_ENFORCEMENT_COST, CALC_ENFORCEMENT_COST_IS_SAVED, CALC_AFTER_ENF_INTEREST, CALC_TOTAL_AMOUNT,
                   IS_CALCULATE, IS_PAYING, ID, MAIN_AMOUNT_ORIGINAL, IS_ACCOUNT)
                 Values
                   (p_law_file_no, sysdate, p_user_name, p_finance_calc.IS_CLAIM, p_finance_calc.PAYMENT_DENOUNCE_DATE,
                    p_finance_calc.LAW_EXPERTISE_FEE_DATE, p_finance_calc.COURT_CORRECTION_DATE, p_finance_calc.COURT_DECISION_DATE, p_finance_calc.CASE_DATE, p_finance_calc.CASE_NOTIF_DATE,
                    p_finance_calc.PAYMENT_DATE, p_finance_calc.MAIN_AMOUNT, p_finance_calc.COURT_TYPE, p_finance_calc.COURT_TYPE_DESC, p_finance_calc.AZS_YKS_NO,
                    p_finance_calc.COURT_FILE_NO, p_finance_calc.EXPERTISE_AMOUNT, p_finance_calc.COURT_CORRECTION_AMOUNT, p_finance_calc.IS_TAHKIM_1_5, p_finance_calc.IS_INTEREST_REQUIRED,
                    p_finance_calc.IS_LAWYER_PAYMENT_PER_PERSON, p_finance_calc.IS_REAL_REQUEST, p_finance_calc.IS_ICRA_TAKIBI, p_finance_calc.IS_ENFORCEMENT_PAYMENT, p_finance_calc.IS_INTEREST_DETAIL_REQUIRED,
                    p_finance_calc.IS_STOPPAGE_INCLUDED, p_finance_calc.CALC_MAIN_AMOUNT, p_finance_calc.CALC_MAIN_AMOUNT_INTEREST, p_finance_calc.CALC_TRIAL_AMOUNT, p_finance_calc.CALC_TRIAL_AMOUNT_IS_SAVED,
                    p_finance_calc.CALC_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_PAYMENT, p_finance_calc.CALC_COURT_LAWYER_IS_SAVED, p_finance_calc.CALC_EXPERTISE_AMOUNT, p_finance_calc.CALC_DETAIL_INTEREST,
                    p_finance_calc.CALC_SUB_TOTAL, p_finance_calc.CALC_ENF_PAYMENT, p_finance_calc.CALC_ENF_COURT_PAYMENT, p_finance_calc.CALC_ENF_COURT_IS_SAVED, p_finance_calc.CALC_TAHSIL_HARCI,
                    p_finance_calc.CALC_TAHSIL_HARCI_IS_SAVED, p_finance_calc.CALC_ENFORCEMENT_COST, p_finance_calc.CALC_ENFORCEMENT_COST_IS_SAVED, p_finance_calc.CALC_AFTER_ENF_INTEREST, p_finance_calc.CALC_TOTAL_AMOUNT,
                    p_finance_calc.IS_CALCULATE, p_finance_calc.IS_PAYING, p_finance_calc.ID, p_finance_calc.MAIN_AMOUNT_ORIGINAL, 55);


               for i in 1..p_finance_calc.v_claim.count loop

                Insert into CUSTOMER.ALZ_LAW_FINANCE_CLAIM
                   (ID, DETAIL_NO, EXT_REFERENCE, CASE_AMOUNT, MAIN_AMOUNT,
                    COURT_CORRECTION_AMOUNT, INTEREST_BEGIN_DATE, INTEREST_TYPE, INTEREST_AMOUNT, TAHSIL_HARCI,
                    COST, COURT_LAWYER_PAYMENT,enf_payment, MAIN_AMOUNT_ORIGINAL)
                 Values
                   (p_finance_calc.id, p_finance_calc.v_claim(i).detail_no, p_finance_calc.v_claim(i).EXT_REFERENCE, p_finance_calc.v_claim(i).CASE_AMOUNT, p_finance_calc.v_claim(i).MAIN_AMOUNT,
                    p_finance_calc.v_claim(i).COURT_CORRECTION_AMOUNT, p_finance_calc.v_claim(i).INTEREST_BEGIN_DATE, p_finance_calc.v_claim(i).INTEREST_TYPE, p_finance_calc.v_claim(i).INTEREST_AMOUNT, p_finance_calc.v_claim(i).TAHSIL_HARCI,
                    p_finance_calc.v_claim(i).COST, p_finance_calc.v_claim(i).COURT_LAWYER_PAYMENT, p_finance_calc.v_claim(i).enf_payment, p_finance_calc.v_claim(i).MAIN_AMOUNT_ORIGINAL);

                    sayac := 0;

                    for j in 1..p_finance_calc.v_claim(i).v_faiz.count loop
                       sayac := sayac + 1;
                       Insert into CUSTOMER.ALZ_LAW_FINANCE_INTEREST
                        (ID, DETAIL_NO, INTEREST_EXPL,
                         INTEREST_BASE_AMOUNT, INTEREST_START_DATE, INTEREST_END_DATE,
                         INTEREST_TYPE, CALCULATED_INTEREST, IS_SAVED, SIRA_NO)
                       Values
                        (p_finance_calc.id, p_finance_calc.v_claim(i).detail_no, p_finance_calc.v_claim(i).v_faiz(j).INTEREST_EXPL,
                         p_finance_calc.v_claim(i).v_faiz(j).INTEREST_BASE_AMOUNT, p_finance_calc.v_claim(i).v_faiz(j).INTEREST_START_DATE, p_finance_calc.v_claim(i).v_faiz(j).INTEREST_END_DATE,
                         p_finance_calc.v_claim(i).v_faiz(j).INTEREST_TYPE, p_finance_calc.v_claim(i).v_faiz(j).CALCULATED_INTEREST, p_finance_calc.v_claim(i).v_faiz(j).IS_SAVED, sayac);

                    end loop;

                    for  j in 1..p_finance_calc.v_claim(i).cost_detail.count loop
                       insert into customer.alz_law_finance_cost
                          (id, detail_no, seq_no, explanation, amount, created_by)
                        values
                          (p_finance_calc.id, p_finance_calc.v_claim(i).cost_detail(j).detail_no, p_finance_calc.v_claim(i).cost_detail(j). seq_no, p_finance_calc.v_claim(i).cost_detail(j).explanation, p_finance_calc.v_claim(i).cost_detail(j).amount, p_user_name);
                    end loop;

               end loop;

                  COMMIT;

                   v_error_msg :='kaydetme iþlemi tamamlandý ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    100,  -- -1 hata demek
                    'KAPAK HESABI',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );


              exception when others then
                   v_error_msg :='kapak hesabý kaydedilirken hata oluþtu ';
                   process_result(
                    1, --p_process_no
                    0,
                    9,
                    -1,  -- -1 hata demek
                    'KAPAK HESABI',
                    substr(sqlerrm,1,999),
                    v_error_msg,
                    null,
                    null,
                    'alz_litigation_utils1.GET_LAW_FINANCE_INFO',
                    p_process_results
                    );
                return;
              end;

          end if;
       end if;

    end if;


   end get_set_law_finance_info;




   procedure get_default_party_list(p_law_file_no in varchar2, p_law_case_type in varchar2,
                                     p_law_file_type in varchar2, p_list out law_party_tbl, p_process_results out customer.process_result_table)
    is
        v_part_id   number;
        v_part_name  varchar2(40);
        v_tax_number varchar2(40);
        v_taraf_rol_aciklama varchar2(100);
        v_role_type varchar2(10) := 'KRM';
        v_description varchar2(61);
        v_taraf_rol_kodu  number;
        v_error_msg  varchar2(100);
    begin
        if p_law_file_no is not null then
        v_error_msg := ' Hukuk dosyasý(p_law_file_no) boþ gelmeli';

        process_result(
            99, --p_process_no
            0,
            9,
            -1,
            'GET_DEFAULT_PARTY_LIST',
            v_error_msg,
            v_error_msg,
            null,
            null,
            'ALZ_LITIGATION_UTILS.GET_DEFAULT_PARTY_LIST',
            p_process_results
        );
        return;
        end if;

        select description into v_description from cp_role_types where object_type = 'LAW' and role_type = 'KRM';

        select parameter into v_part_id from  CUSTOMER.ALZ_LOOK_UP  where code = 'LAW_PART_ID_ALLIANZ';
        select parameter into v_part_name from  CUSTOMER.ALZ_LOOK_UP  where code = 'LAW_PART_NAME_ALLIANZ';
        select parameter into v_tax_number from  CUSTOMER.ALZ_LOOK_UP  where code = 'LAW_PART_TAX_ALLIANZ';

        if p_law_case_type = 'A' and p_law_file_type = 'HUKUK' then
           v_taraf_rol_kodu := 2;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'L' and  p_law_file_type = 'HUKUK' then
           v_taraf_rol_kodu := 1;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'A' and  p_law_file_type = 'TESPIT' then
           v_taraf_rol_kodu := 2;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'L' and  p_law_file_type = 'TESPIT' then
           v_taraf_rol_kodu := 1;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'A' and  p_law_file_type = 'CEZA' then
           v_taraf_rol_kodu := 3;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'L' and  p_law_file_type = 'CEZA' then
           v_taraf_rol_kodu := 7;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        end if;

        select LAW_PARTY_TYP(
                   koc_law_interested_parties_seq.nextval,
                   v_part_id,
                   koc_clm_utils.partner_name_bul(v_part_id),
                   v_taraf_rol_kodu,   --davalý davaxý müþteki sanýk vb. kodu  --role_code
                   v_taraf_rol_aciklama,  ----davalý davaxý müþteki sanýk  acýklama  --role
                   v_role_type,  --'SHS', 'KRM'  --type_code
                   v_description,   --þahýs, kurum  --type
                   null,
                   v_tax_number,
                   sysdate,
                   'MANUEL',
                   null,
                   null,
                   null
               ) BULK COLLECT
          into p_list
          from dual;

    end get_default_party_list;

    --varsayýlan taraf listesi
    function get_default_party_other_list(p_law_case_type in varchar2, p_law_file_type in varchar2) return sys_refcursor
    is
        v_list sys_refcursor;
        v_taraf_rol_kodu  number;
        v_taraf_rol_aciklama varchar2(100);
    begin

        if p_law_case_type = 'A' and p_law_file_type = 'HUKUK' then
           v_taraf_rol_kodu := 2;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'L' and  p_law_file_type = 'HUKUK' then
           v_taraf_rol_kodu := 1;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'A' and  p_law_file_type = 'TESPIT' then
           v_taraf_rol_kodu := 2;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'L' and  p_law_file_type = 'TESPIT' then
           v_taraf_rol_kodu := 1;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'A' and  p_law_file_type = 'CEZA' then
           v_taraf_rol_kodu := 3;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        elsif p_law_case_type = 'L' and  p_law_file_type = 'CEZA' then
           v_taraf_rol_kodu := 7;  --davalý
           select taraf_rol_aciklama into v_taraf_rol_aciklama  from alz_uyap_taraf_rolleri where  TARAF_ROL_KODU = v_taraf_rol_kodu;
        end if;

        open v_list for
         SELECT  null unique_id,
           a.part_id, koc_clm_utils.partner_name_bul(a.part_id) party_name ,
           v_taraf_rol_kodu role_code, v_taraf_rol_aciklama role,
           'KRM' type_code, (select description from cp_role_types where object_type = 'LAW' and role_type = 'KRM') type,
           null prosecution_status, C.tax_number, sysdate process_date, 'MANUEL' source, null source_id, null source_detail_id, null
          FROM   cp_v_partners a, cp_partner_roles b, koc_cp_partners_ext c
          WHERE  a.part_id = b.part_id
          AND b.end_date IS NULL
          AND b.role_type = 'ALZ'
          AND b.object_type = 'LAW'
          AND c.part_id = b.part_id;

        return v_list;
    end get_default_party_other_list;

    procedure get_auth_fields(p_auth_rule_id in number,
                                    p_law_file_no in varchar2,
                                    p_source_id in varchar2,
                                    p_old_indice number,
                                    p_new_indice number,
                                    p_old_rec in law_file_all_typ,
                                    p_new_rec in out law_file_all_typ,
                                    p_process_results in out customer.process_result_table)
    is

        cursor c_ruler is
            select *
            from alz_law_auth_rule
            where auth_rule_id = p_auth_rule_id ;

        v_ruler_rec alz_law_auth_rule%rowtype ;
        v_insert_cols varchar2(1000);
        v_insert_vals varchar2(1000);
        v_old_str varchar2(100);
        v_new_str varchar2(100);
        v_old_value varchar2(100);
        v_new_value varchar2(100);
        v_stmt  varchar2(1000);
        v_date_format varchar2(30):='DD.MM.YYYY';
        v_debug number := 0;
        v_mode varchar2(10) := 'UPDATE' ;
        v_error_msg varchar2(200);

    begin
        /*open c_ruler;
           fetch c_ruler
           into v_ruler_rec;
           close c_ruler;*/
           v_debug := 1 ;
           v_insert_cols := 'authorization_id,authorization_rule_id,law_file_no,source_id';
           v_insert_vals := 'null,'|| p_auth_rule_id||','''||p_law_file_no||''','''||p_source_id||'''';
           v_debug := 2 ;

           if p_old_rec is null then
                v_mode := 'INSERT' ;
           elsif p_new_indice>=0 and p_old_indice=0 then
                v_mode := 'INSERT' ;
           end if;

           for x_rec in ( select *  from alz_law_auth_rule_ext  where auth_rule_id = p_auth_rule_id AND AUTH_EXTENDED_RULE_COLUMN IS NOT NULL and source_type_attribute is not null )
           loop
                v_insert_cols := v_insert_cols||','||x_rec.AUTH_EXTENDED_RULE_COLUMN||','||x_rec.AUTH_EXTENDED_RULE_COLUMN||'_old' ;
                if v_mode = 'UPDATE' then
                    select 'v_old_rec.'||x_rec.source_type_name||DECODE(p_old_indice,-1,'.','('||p_old_indice||').')||x_rec.source_type_attribute into v_old_str from dual ;
                else
                    v_old_str := 'null' ;
                end if;
                select 'v_new_rec.'||x_rec.source_type_name||DECODE(p_new_indice,-1,'.','('||p_new_indice||').')||x_rec.source_type_attribute into v_new_str from dual ;
                v_debug := 3 ;
                if x_rec.SOURCE_COLUMN_TYPE = 'DATE' then
                    v_stmt := 'DECLARE v_old_rec law_file_all_typ; v_new_rec law_file_all_typ; BEGIN v_old_rec:= :eski ; v_new_rec:= :yeni ; SELECT TO_CHAR( '||v_old_str||' , '''||NVL(X_REC.SOURCE_COLUMN_FORMAT, v_date_format) ||''' ), to_char( '|| v_new_str ||', '''|| NVL(X_REC.SOURCE_COLUMN_FORMAT, v_date_format) ||''' ) INTO :X , :Y FROM DUAL; END;';
                elsif x_rec.SOURCE_COLUMN_TYPE = 'NUMBER' then
                    v_stmt := 'DECLARE v_old_rec law_file_all_typ; v_new_rec law_file_all_typ; BEGIN v_old_rec:= :eski ; v_new_rec:= :yeni ; SELECT TO_CHAR( '||v_old_str||'  ), to_char('|| v_new_str ||') INTO :X , :Y FROM DUAL; END;';
                else
                    v_stmt := 'DECLARE v_old_rec law_file_all_typ; v_new_rec law_file_all_typ; BEGIN v_old_rec:= :eski ; v_new_rec:= :yeni ; SELECT '||v_old_str||' , '|| v_new_str ||' INTO :X , :Y FROM DUAL; END;';
                end if;
                v_debug := 4 ;
                execute immediate v_stmt using in p_old_rec , in p_new_rec , out v_old_value , out v_new_value ;

                v_insert_vals := v_insert_vals||','''||v_new_value||''','''||v_old_value||'''' ;

           end loop;
           v_debug := 5 ;
           EXECUTE IMMEDIATE 'INSERT INTO ALZ_LAW_AUTH_EXT('||v_insert_cols||') VALUES('||v_insert_vals||')' ;

        exception when others then
            v_error_msg := p_auth_rule_id||' nolu otorizasyon kuralý iþletilirken hata oluþtu.';

                process_result(
                    20, --p_process_no
                    2,
                    v_debug,
                    -1,
                    'INSERT_AUTHED_ROW',
                    v_error_msg,
                    v_error_msg||sqlerrm,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.INSERT_AUTHED_ROW',
                    p_process_results
                );
                return;
    end;
    --degis
    procedure apply_authed_attributes( p_auth_id in number, p_indice in number, p_rec in out law_file_all_typ, p_process_results in out customer.process_result_table )
    is
        cursor c_fields is
            select *
            from alz_law_auth_ext
            where authorization_id = p_auth_id;

        cursor c_ruler( p_rule_id number ) is
            select *
            from alz_law_auth_rule_ext
            where auth_rule_id = p_rule_id;

        v_fields_rec alz_law_auth_ext%rowtype;
        v_ruler_rec alz_law_auth_rule_ext%rowtype;
        v_stmt varchar2(1000);
        v_new_value varchar2(100);
        V_SET_VALUE_STR varchar2(100);
        v_source_str varchar2(100);

    begin
        open c_fields;
        fetch c_fields
        into v_fields_rec;
        close c_fields;

        for x_auth_rec in ( select * from alz_law_auth_rule_ext where source_type_name is not null and source_type_attribute is not null and auth_rule_id = v_fields_rec.AUTHORIZATION_RULE_ID  )
        loop
            v_stmt := ' select '||x_auth_rec.auth_extended_rule_column||' from customer.alz_law_auth_ext where authorization_id = '||p_auth_id ;
            execute immediate v_stmt into v_new_value;
            if v_new_value IS NOT NULL THEN
                if v_ruler_rec.source_COLUMN_TYPE = 'DATE' THEN
                     V_SET_VALUE_STR:='TO_date( '''||v_new_value||''' , '''|| x_auth_rec.source_column_format ||''' )';
                ELSIF  v_ruler_rec.source_COLUMN_TYPE = 'NUMBER' THEN
                    v_set_value_str:= ' to_number('''|| v_new_value ||''')' ;
                ELSE
                    v_set_value_str:=''''||v_new_value||'''';
                end if;
            ELSE
                v_set_value_str := 'NULL';
            END IF;

            if p_indice = 0 then
                v_source_str := x_auth_rec.source_type_name||'.'||x_auth_rec.source_type_attribute;
            else
                v_source_str := x_auth_rec.source_type_name||'('||p_indice||').'||x_auth_rec.source_type_attribute;
            end if;
            v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_str||' := '||v_set_value_str||' ; :rec := v_rec; end;'  ;
            EXECUTE IMMEDIATE v_stmt using in out p_rec ;

        end loop;

    end;

    procedure apply_authed_fields( p_auth_id in number, p_user in varchar2,   p_process_results in out customer.process_result_table )
    is
        cursor c_fields is
            select *
            from alz_law_auth_ext
            where authorization_id = p_auth_id;

        cursor c_ruler( p_rule_id number ) is
            select *
            from alz_law_auth_rule
            where auth_rule_id = p_rule_id;

            v_fields_rec alz_law_auth_ext%rowtype;
            v_ruler_rec alz_law_auth_rule%rowtype;

            v_stmt varchar2(1000);
            v_insert_control_count number:=0;

            v_insert_cols varchar2(1000);
            v_insert_vals varchar2(1000);
            v_new_value varchar2(200);
            v_date_format varchar2(30):='DD.MM.YYYY';
            v_debug number := 0;
            v_error_msg varchar2(200);

    begin
       open c_fields;
       fetch c_fields
       into v_fields_rec;
       close c_fields;

       open c_ruler(v_fields_rec.AUTHORIZATION_RULE_ID);
       fetch c_ruler
       into v_ruler_rec;
       close c_ruler;

       v_stmt := 'SELECT COUNT(1) FROM '||v_ruler_rec.source_table||' WHERE LAW_FILE_NO ='''||v_fields_rec.law_file_no||''' AND '||v_ruler_rec.SOURCE_ID_COLUMN||' = '''||v_fields_rec.source_id||'''' ;
       execute immediate v_stmt into v_insert_control_count ;

        if v_insert_control_count = 0 then -- INSERT
           v_debug := 1 ;
           v_insert_cols := 'LAW_FILE_NO,'||v_ruler_rec.SOURCE_ID_COLUMN;
           v_insert_vals := ''''||v_fields_rec.law_file_no||''','''||v_fields_rec.source_id||'''';

           for x_rec in ( select *  from alz_law_auth_rule_ext  where auth_rule_id = v_fields_rec.AUTHORIZATION_RULE_ID AND SOURCE_COLUMN IS NOT NULL  )
           loop
                v_insert_cols := v_insert_cols||','||x_rec.source_column ;
                v_debug := 2 ;
                IF x_rec.SOURCE_COLUMN IN ('CREATION_DATE','LAST_UPDATE_DATE') THEN
                    v_insert_vals := v_insert_vals||',SYSDATE';
                ELSIF x_rec.SOURCE_COLUMN IN ('CREATED_BY','LAST_UPDATED_BY') THEN
                    v_insert_vals := v_insert_vals||','''||P_USER||'''';
                ELSE
                    v_stmt := 'select '||x_rec.AUTH_EXTENDED_RULE_COLUMN||' from alz_law_auth_ext where authorization_id = '||p_auth_id  ;
                    execute immediate v_stmt into v_new_value ;
                    v_debug := 3 ;
                    if x_rec.source_column_type = 'DATE' then
                        v_insert_vals := v_insert_vals||', to_date( '''||v_new_value||''' , '''||nvl( X_REC.SOURCE_COLUMN_FORMAT,v_date_format)||''' )' ;
                    elsif x_rec.SOURCE_COLUMN_TYPE = 'NUMBER' then
                        v_insert_vals := v_insert_vals||',to_number( '''||v_new_value||''' )';
                    else
                        v_insert_vals := v_insert_vals||','''||v_new_value||'''';
                    end if;

                END IF;

           end loop;
           v_debug := 4 ;
           EXECUTE IMMEDIATE 'INSERT INTO '||v_ruler_rec.source_table||'('||v_insert_cols||') VALUES('||v_insert_vals||')' ;
        elsif v_insert_control_count = 1 then -- UPDATE
           v_insert_cols := 'LAW_FILE_NO,'||v_ruler_rec.SOURCE_ID_COLUMN;
           v_insert_vals := ''''||v_fields_rec.law_file_no||''','''||v_fields_rec.source_id||'''';

           for x_rec in ( select *  from alz_law_auth_rule_ext  where auth_rule_id = v_fields_rec.AUTHORIZATION_RULE_ID AND SOURCE_COLUMN IS NOT NULL  )
           loop
                v_debug := 5 ;
                IF x_rec.SOURCE_COLUMN = 'LAST_UPDATE_DATE' THEN
                    v_insert_vals := v_insert_vals||',SYSDATE';
                    v_insert_cols := v_insert_cols||','||x_rec.source_column ;
                ELSIF x_rec.SOURCE_COLUMN = 'LAST_UPDATED_BY' THEN
                    v_insert_vals := v_insert_vals||','''||P_USER||'''';
                    v_insert_cols := v_insert_cols||','||x_rec.source_column ;
                ELSIF x_rec.SOURCE_COLUMN IN ('CREATED_BY','CREATION_DATE') THEN
                    NULL; --UPDATE KISMINDA BU DEÐERLERE DOKUNULMAYACAK
                ELSE
                    v_insert_cols := v_insert_cols||','||x_rec.source_column ;
                    v_stmt := 'select '||x_rec.AUTH_EXTENDED_RULE_COLUMN||' from alz_law_auth_ext where authorization_id = '||p_auth_id  ;
                    execute immediate v_stmt into v_new_value ;
                    v_debug := 6 ;
                    if x_rec.source_column_type = 'DATE' then
                        v_insert_vals := v_insert_vals||', to_date( '''||v_new_value||''' , '''||nvl( X_REC.SOURCE_COLUMN_FORMAT,v_date_format)||''' )' ;
                    elsif x_rec.SOURCE_COLUMN_TYPE = 'NUMBER' then
                        v_insert_vals := v_insert_vals||',to_number( '''||v_new_value||''' )';
                    else
                        v_insert_vals := v_insert_vals||','''||v_new_value||'''';
                    end if;

                END IF;

           end loop;
           v_debug := 7 ;
           EXECUTE IMMEDIATE 'UPDATE '||v_ruler_rec.source_table||' SET ('||v_insert_cols||') = ( SELECT '||v_insert_vals||' FROM DUAL ) WHERE LAW_FILE_NO ='''||v_fields_rec.law_file_no||''' AND '||v_ruler_rec.SOURCE_ID_COLUMN||' = '''||v_fields_rec.source_id||'''' ;
        else
            null;-- sýkýntýlý case
        end if;

        --insert ise insert ifi
        --update ise update ifi
        exception when others then
            v_error_msg := v_fields_rec.AUTHORIZATION_RULE_ID||' nolu otorizasyon kuralý iþletilirken hata oluþtu.';

                process_result(
                    20, --p_process_no
                    2,
                    v_debug,
                    -1,
                    'SAVE_AUTHED_ROW',
                    v_error_msg,
                    v_error_msg||sqlerrm,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.SAVE_AUTHED_ROW',
                    p_process_results
                );
                return;
    end;

    procedure send_auth_approve (p_law_file_no        in     varchar2,
                                          p_source_table in varchar2,
                                          p_source_id_column in varchar2,
                                          p_source_id          in     varchar2,
                                          p_source_column          in     varchar2,
                                          p_new_value          in     varchar2,
                                          p_new_value_format   in     varchar2 default null,
                                          p_helper_value in varchar2,
                                          p_user               in     varchar2,
                                          p_description in varchar2,
                                          p_process_results out customer.process_result_table,
                                          p_num out number ) is

        cursor c_rule_checker is
         select auth_rule_id, source_column_type,source_column_helper_name,is_required,auth_type
           from alz_law_auth_rule
          where  source_table = p_source_table
                and source_column_name = p_source_column
                and active = 1;

       cursor c_data_type
       is
        select data_type
            from all_tab_columns
            where table_name = p_source_table
            and column_name = upper(p_source_column);


      v_column_type   varchar2 (30);
      v_rule_id       number;
      v_helper_column varchar2(30);
      v_old_helper_value varchar2(300);
      v_is_required number;
      v_auth_type varchar2(30);

      v_old_value     varchar2 (300);
      v_old_status number;
      v_sql_stmt varchar2 (300);

      sikinti exception;
      v_auth_id number;
      p_create_ticket_id number;
      v_error_msg varchar2 (3000);
      v_count number;
      v_same_check number:=0;

   begin

      open c_rule_checker;
      fetch c_rule_checker
      into v_rule_id, v_column_type,v_helper_column,v_is_required,v_auth_type;
      close c_rule_checker;

      if v_rule_id is null then
         --ALZ_LITIGATION_UTILS.PROCESS_RESULT
         v_error_msg := 'Bu alani otorizasyon onayýna gönderemezsiniz.';
         process_result(
                    20, --p_process_no
                    1,
                    9,
                    -1,
                    'SEND_APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                    p_process_results
                );
        return;
      end if;

      if substr(v_auth_type,3,1) in ( 'L','G' ) then
            select count(1)
            into v_same_check
            from alz_law_auth_ext lae,
            alz_law_auth la,
            alz_law_auth_rule lar
            where lar.source_table = la.source_table
            and lar.source_column_name = la.source_column_name
            and lar.auth_rule_id = lae.AUTHORIZATION_RULE_ID
            and la.lawfile_no = p_law_file_no
            and la.source_id = p_source_id
            and la.is_approved = 0
            and la.is_cancelled = 0
            and lae.law_file_no = p_law_file_no
            and lae.source_id = p_source_id;
            if v_same_check > 0 then
                return;
            end if;
        end if;

      -- get old values
      if substr(v_auth_type,3,1) in ( 'F' ) then
          begin
                if v_helper_column is null then
                    v_sql_stmt := 'SELECT '||p_source_column||' FROM '||p_source_table||' WHERE LAW_FILE_NO='''||p_law_file_no||''' AND '||p_source_id_column||' = '''||nvl( p_source_id,p_law_file_no)||'''';
                    execute immediate v_sql_stmt into v_old_value ;
                else
                    v_sql_stmt := 'SELECT '||p_source_column||' , '||v_helper_column||' FROM '||p_source_table||' WHERE LAW_FILE_NO='''||p_law_file_no||''' AND '||p_source_id_column||' = '''||nvl( p_source_id,p_law_file_no)||'''';
                    execute immediate v_sql_stmt into v_old_value,v_old_helper_value ;
                end if;
          exception when no_data_found then
            v_old_value := null ;
            v_old_helper_value := null;
          end;
      end if;

       v_auth_id := koc_law_authorization_seq.nextval ;

      insert into alz_law_auth (authorization_id,
                                lawfile_no,
                                source_table,
                                source_id,
                                source_id_column,
                                source_column_name,
                                source_column_type,
                                source_column_old_value,
                                source_column_new_value,
                                source_column_format,
                                approval_date,
                                approval_username,
                                reject_reason,
                                create_user,
                                create_date,
                                is_approved,
                                is_cancelled,
                                src_column_helper_value_new,
                                src_column_helper_value_old,
                                is_required,
                                description)
           values (v_auth_id,
                   p_law_file_no,
                   p_source_table,
                   p_source_id,
                   p_source_id_column,
                   p_source_column,
                   v_column_type,
                   v_old_value,
                   p_new_value,
                   p_new_value_format,
                   null,
                   null,
                   null,
                   p_user,
                   sysdate,
                   0,
                   0,
                  p_helper_value,
                  v_old_helper_value,
                  v_is_required,
                  p_description);

        update koc_law_bases
        set is_approved= 0
        where law_file_no= p_law_file_no ;

        if substr(v_auth_type,3,1) in ( 'L','G' ) then
            update alz_law_auth_ext
            set authorization_id = v_auth_id
            where authorization_id is null
            and law_file_no = p_law_file_no
            and source_id = p_source_id;
        end if;

        p_num := v_auth_id;
   end send_auth_approve;

   --degis
    procedure auth_get_and_rollback_values( p_new_id in number,
                                                               p_old_id in number,
                                                               p_source_type_name in varchar2,
                                                               p_source_column_name in varchar2,
                                                               p_source_column_helper_name in varchar2,
                                                               p_source_column_type in varchar2,
                                                               p_source_column_helper_type in varchar2,
                                                               p_degisim in out number,
                                                               p_new_value out varchar2,
                                                               p_new_helper_value out varchar2,
                                                               p_new_data_format in out varchar2,
                                                               p_old_rec in law_file_all_typ,
                                                               p_new_rec in out law_file_all_typ )
    is
        v_get_value_str varchar2(200);
        v_stmt varchar2(2000);
        v_source_str_new varchar2(200);
        v_source_helper_str_new varchar2(200);
        v_source_str_old varchar2(200);
        v_source_helper_str_old varchar2(200);
        v_date_format varchar2(30):='DD.MM.YYYY';
    begin
        if p_new_id > 0 and  p_old_id >0 then --update
            v_source_str_old := 'V_OLD_REC.'||p_source_type_name||'('||p_old_id||').'||p_source_column_name;
            v_source_helper_str_old := 'V_OLD_REC.'||p_source_type_name||'('||p_old_id||').'||p_source_column_helper_name;
            v_source_str_new := 'V_NEW_REC.'||p_source_type_name||'('||p_new_id||').'||p_source_column_name;
            v_source_helper_str_new := 'V_NEW_REC.'||p_source_type_name||'('||p_new_id||').'||p_source_column_helper_name;
        elsif p_new_id <> 0 and  p_old_id = 0 then --insert new line in detail object
            v_source_str_old := 'null';
            v_source_helper_str_old := 'null';
            v_source_str_new := 'V_NEW_REC.'||p_source_type_name||'('||p_new_id||').'||p_source_column_name;
            v_source_helper_str_new := 'V_NEW_REC.'||p_source_type_name||'('||p_new_id||').'||p_source_column_helper_name;
        elsif  p_new_id < 0 and  p_old_id = 0 then -- insert new header object
            v_source_str_old := 'null';
            v_source_helper_str_old := 'null';
            v_source_str_new := 'V_NEW_REC.'||p_source_type_name||'.'||p_source_column_name;
            v_source_helper_str_new := 'V_NEW_REC.'||p_source_type_name||'.'||p_source_column_helper_name;
        elsif  p_new_id < 0 and  p_old_id < 0 then -- update
            v_source_str_old := 'V_OLD_REC.'||p_source_type_name||'.'||p_source_column_name;
            v_source_helper_str_old := 'V_OLD_REC.'||p_source_type_name||'.'||p_source_column_helper_name;
            v_source_str_new := 'V_NEW_REC.'||p_source_type_name||'.'||p_source_column_name;
            v_source_helper_str_new := 'V_NEW_REC.'||p_source_type_name||'.'||p_source_column_helper_name;
        end if;

        if p_source_column_type = 'DATE' then
            v_get_value_str:='TO_CHAR( '||v_source_str_new||' , '''|| v_date_format ||''' )';
            p_new_data_format := v_date_format;
        else
             v_get_value_str:=v_source_str_new;
        end if;

        v_stmt := 'DECLARE V_OLD_REC LAW_FILE_ALL_TYP; V_NEW_REC LAW_FILE_ALL_TYP; BEGIN V_OLD_REC:= :ESKI ; V_NEW_REC:= :YENI ; SELECT DECODE( '|| v_source_str_old ||' , '|| v_source_str_new ||' , 0, 1 ), '||v_get_value_str||' INTO :X , :Y FROM DUAL; END;';
        execute immediate v_stmt using in p_old_rec , in p_new_rec, out p_degisim , out p_new_value ;

        if p_degisim <> 1 then
            return;
        end if;

        if p_source_column_helper_type is not null and p_degisim = 1 then
            if p_source_column_helper_type = 'DATE' then
                v_stmt := 'DECLARE V_NEW_REC LAW_FILE_ALL_TYP; BEGIN V_NEW_REC:= :YENI ; :HELPER_VAL := TO_CHAR( '||v_source_helper_str_new||' , '''||v_date_format||''' )  ; END;';
            else
                v_stmt := 'DECLARE V_NEW_REC LAW_FILE_ALL_TYP; BEGIN V_NEW_REC:= :YENI ; :HELPER_VAL := '||v_source_helper_str_new||' ; END;';
            end if;
            execute immediate v_stmt using in p_new_rec, out p_new_helper_value ;
            if upper( v_source_helper_str_new ) like '%SWF' and ( p_new_helper_value is null or length(p_new_helper_value) < 1) then --BOÞ DEÐER GELÝRSE  DEFAULT DEÐER ATA
                p_new_helper_value := 'TL' ;
            end if;
        end if;

        if p_degisim = 1 then
            v_stmt:= 'DECLARE   V_OLD_REC LAW_FILE_ALL_TYP;V_NEW_REC LAW_FILE_ALL_TYP; BEGIN  V_OLD_REC:= :ESKI ; V_NEW_REC:= :YENI ;  '||v_source_str_new||' :=  '||v_source_str_old||' ; :YENI := V_NEW_REC ; END;' ;
            execute immediate v_stmt using  in p_old_rec , in out p_new_rec ;
            if p_new_helper_value is not null then
                v_stmt:= 'DECLARE   V_OLD_REC LAW_FILE_ALL_TYP;V_NEW_REC LAW_FILE_ALL_TYP; BEGIN  V_OLD_REC:= :ESKI ; V_NEW_REC:= :YENI ;  '||v_source_helper_str_new||' :=  '||v_source_helper_str_old||' ; :YENI := V_NEW_REC ; END;' ;
                execute immediate v_stmt using  in p_old_rec , in out p_new_rec ;
            end if;

        end if;

    end auth_get_and_rollback_values;

   PROCEDURE CHECK_LAW_FILE_AUTH_APPROVE (p_lawfile_no        in     varchar2,
                                          p_source_id          in     varchar2,
                                          p_source_table     in varchar2,
                                          p_source_column          in     varchar2,
                                          p_user               in     varchar2,
                                          p_old_rec in law_file_all_typ,
                                          p_new_rec in out law_file_all_typ,
                                          p_process_results in out customer.process_result_table )
   IS
      v_ruler alz_law_auth_rule%rowtype ;
      v_new_rec law_file_all_typ:= p_new_rec;
      v_rec_count_new number;
      v_rec_count_old number;
      v_old_id number:=0;
      V_DEGISIM NUMBER:=0;
      v_date_format varchar2(30):='DD.MM.YYYY';
      V_STMT varchar2(2000);
      V_NEW_VALUE VARCHAR2(200);
      V_NEW_HELPER_VALUE VARCHAR2(200);
      V_NEW_DATA_FORMAT VARCHAR2(30);
      v_error_msg VARCHAR2 (3000);
      V_COUNT NUMBER;
      V_GET_VALUE_STR VARCHAR2(200);
      V_DESC VARCHAR2(200);
      v_auth_id number;
      V_SOURCE_ID VARCHAR2(100);
      v_send_out_message number:= 0;
      v_rec_point number:=0;
      v_debug number:=0;
      v_mode varchar2(10) := 'UPDATE' ;
      v_list law_courts_tbl;
   BEGIN
      v_auth_from_ticket := 1;
      SELECT * INTO v_ruler FROM alz_law_auth_rule  where source_table = p_source_table and source_column_name = p_source_column AND active=1 and ROWNUM=1 ;
      V_SOURCE_ID := P_SOURCE_ID;
      IF P_OLD_REC IS NULL THEN
        v_mode := 'INSERT' ;
        v_old_id := 0; --header bilgileri insert edilirken 0 verilmesi gerekiyor
      else
        v_old_id := -1; --header bilgileri update edilirken -1 verilmesi gerekiyor
      END IF;

      if v_ruler.IS_NESTED_SOURCE_TYPE = 1 then
        v_stmt := 'DECLARE  v_old_rec law_file_all_typ; v_new_rec law_file_all_typ; BEGIN v_old_rec:= :eski ; v_new_rec:= :yeni ;  begin :old_count := v_old_rec.'|| v_ruler.source_type_name ||'.count ; exception when others then :old_count:=0; end; begin :new_count := v_new_rec.'|| v_ruler.source_type_name ||'.count; exception when others then :new_count:=0; end; END;' ;
        EXECUTE IMMEDIATE v_stmt using in p_old_rec , in v_new_rec, out v_rec_count_old , out v_rec_count_new ;
        -- kayýt sayýlarý uyuþmuyorsa sýkýntý var demektir.
        if v_rec_count_old > v_rec_count_new then
            v_error_msg := 'Otorizasyon kontrolünde gonderilen '||v_ruler.source_type_name||' detayý sayýlarý farklýdýr.';

            process_result(
                20, --p_process_no
                2,
                9,
                -1,
                'SEND_APPROVE',
                v_error_msg,
                v_error_msg||sqlerrm,
                null,
                null,
                'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                p_process_results
            );
            return;
        end if;

        for ind in 1..v_rec_count_new
        loop
            -- find in old record
            v_old_id := 0;
            if  v_mode <> 'INSERT' then
                for oldi in 1..v_rec_count_old
                loop
                     begin
                        if v_old_id = 0 then
                            EXECUTE IMMEDIATE 'DECLARE  v_old_rec law_file_all_typ; v_new_rec law_file_all_typ;  BEGIN v_old_rec := :old_rec ; v_new_rec := :new_rec; select decode( v_old_rec.'||v_ruler.source_type_name||'('||oldi||').'||v_ruler.source_id_column||' , v_new_rec.'||v_ruler.source_type_name||'('||ind||').'||v_ruler.source_id_column||' ,1,0 ) into :kk from dual; end;' using in p_old_rec ,  in v_new_rec, out v_rec_point;
                             if v_rec_point = 1 then
                                v_old_id := oldi ;
                             end if;
                         end if;
                     end;
                end loop;
            end if;
            v_debug:=1;
            -- find in old record
            begin
                auth_get_and_rollback_values(  p_new_id  => ind ,
                                                           p_old_id => v_old_id ,
                                                           p_source_type_name => v_ruler.source_type_name,
                                                           p_source_column_name => v_ruler.source_column_name,
                                                           p_source_column_helper_name => v_ruler.source_column_helper_name,
                                                           p_source_column_type => v_ruler.source_column_type ,
                                                           p_source_column_helper_type => v_ruler.source_column_helper_type ,
                                                           p_degisim => v_degisim ,
                                                           p_new_value => v_new_value ,
                                                           p_new_helper_value => v_new_helper_value ,
                                                           p_new_data_format => v_new_data_format ,
                                                           p_old_rec => p_old_rec ,
                                                           p_new_rec => v_new_rec );
                v_debug:=2;
                IF V_DEGISIM = 1 and v_old_id > 0 THEN
                    V_STMT:= 'DECLARE  V_OLD_REC LAW_FILE_ALL_TYP; BEGIN  V_OLD_REC:= :ESKI ;  :V_REC_ID := V_OLD_REC.'||V_RULER.SOURCE_TYPE_NAME||'('||V_OLD_ID||').'||V_RULER.SOURCE_ID_COLUMN||' ; END;' ;
                    EXECUTE IMMEDIATE v_stmt USING  in p_old_rec , OUT V_SOURCE_ID ;
                elsif V_DEGISIM = 1 and v_old_id = 0 then
                    V_STMT:= 'DECLARE  V_NEW_REC LAW_FILE_ALL_TYP; BEGIN  V_NEW_REC := :ESKI ;  :V_REC_ID := V_NEW_REC.'||V_RULER.SOURCE_TYPE_NAME||'('||IND||').'||V_RULER.SOURCE_ID_COLUMN||' ; END;' ;
                    EXECUTE IMMEDIATE v_stmt USING  in V_NEW_rec , OUT V_SOURCE_ID ;
                END IF;
                v_debug:=3;
                IF V_DEGISIM = 1 and substr( v_ruler.auth_type,3,1) in ( 'L','G' )  THEN
                    get_auth_fields(p_auth_rule_id => v_ruler.auth_rule_id ,
                                p_law_file_no =>p_lawfile_no,
                                p_source_id => v_source_id,
                                p_old_rec => p_old_rec,
                                p_new_rec => p_new_rec,
                                p_old_indice => v_old_id,
                                p_new_indice => ind,
                                p_process_results => p_process_results);
                END IF;
                -- EGER BOÞ DETAY NUMARASI GELMÝÞSE
                IF V_SOURCE_ID IS NULL THEN
                    V_SOURCE_ID := ind ;
                END IF;
                v_debug:=4;
                -- spasifik durumlar INTEREST_TYPE DESC ALANI
                IF V_DEGISIM = 1  AND p_source_table = 'KOC_LAW_BASES_DETAIL' AND upper(P_SOURCE_COLUMN) = 'INTEREST_TYPE' AND V_NEW_VALUE is not null THEN
                begin
                    select explanation ALZ_LAW_AUTH_RULE
                    INTO V_DESC
                    from koc_law_interest_type
                    where interest_type = V_NEW_VALUE ;

                    update alz_law_auth_ext
                    set field10 = V_DESC
                    where authorization_id is null
                    and law_file_no = p_lawfile_no
                    and source_id = v_source_id;
                exception when others then
                    V_DESC := null;
                end;
                END IF;
                -- spasifik durumlar COURT ID DESC ALANI
                IF V_DEGISIM = 1  AND p_source_table = 'KOC_LAW_BASE_COURTS' AND upper(P_SOURCE_COLUMN) = 'COURT_ID' AND V_NEW_VALUE is not null THEN
                begin
                    SELECT COURT_NAME
                    INTO V_DESC
                    FROM ALZ_LAW_COURTS_V
                    WHERE COURT_ID = V_NEW_VALUE
                    AND COURT_TYPE = V_NEW_HELPER_VALUE ;

                    v_new_rec.court_list(ind).court_name := p_old_rec.court_list(v_old_id).court_name ;

                exception when others then
                    V_DESC := null;
                end;
                END IF;
                v_debug:=45;
                if V_DEGISIM = 1 then
                   SEND_AUTH_APPROVE (p_lawfile_no,
                                   p_source_table ,
                                   v_ruler.source_id_column ,
                                   V_SOURCE_ID ,
                                   p_source_column ,
                                   v_new_value ,
                                   v_new_data_format ,
                                   v_new_helper_value,
                                   p_user ,
                                   v_desc,
                                   p_process_results ,
                                   v_auth_id );
                   v_debug:=5;
                   IF V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE IS NOT NULL AND v_old_id > 0   THEN
                        begin
                            v_stmt := 'DECLARE  v_new_rec law_file_all_typ; BEGIN  v_new_rec:= :yeni ; v_new_rec.'||v_ruler.source_type_name||'('||ind||').'||V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE||' := alz_litigation_utils.get_authorization('''||p_lawfile_no||''','''||p_source_column||''','''||V_SOURCE_ID||''') ; :yeni := v_new_rec ; END;';
                            EXECUTE IMMEDIATE v_stmt USING  IN OUT v_new_rec ;
                        exception when others then
                            select 'DECLARE  v_new_rec law_file_all_typ; BEGIN  v_new_rec:= :yeni ; select law_authorization_typ( '||v_auth_id||',1,null,'''||v_desc||' '|| v_new_value||' '||v_new_helper_value||''',null,null ) into v_new_rec.'||v_ruler.source_type_name||'('||ind||').'||V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE||' from dual; :yeni := v_new_rec ; END;'
                            into v_stmt
                            from dual;
                            EXECUTE IMMEDIATE v_stmt USING  IN OUT v_new_rec ;
                        end;
                        v_debug:=6;

                   ELSIF V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE IS NOT NULL AND substr( v_ruler.auth_type,3,1) = 'L' AND V_RULER.SOURCE_TABLE = 'KOC_LAW_BASE_COURTS' AND  v_old_id = 0  THEN -- TODO:YENÝ EKLENEN MAHKEME ÝÇÝN EKLENDÝ KONTROL EDÝLECEK
                        --
                        select LAW_COURTS_TYP( V_SOURCE_ID, null, null, null, null, null, null, null,null,null, get_authorization(p_lawfile_no,'court_id', V_SOURCE_ID ) ) BULK COLLECT into v_list from dual;
                        v_debug:=62;
                        if v_list.count > 0 then
                           v_new_rec.court_list(ind).COURT_ENF_TYPE := v_list(1).COURT_ENF_TYPE;
                           v_new_rec.court_list(ind).COURT_TYPE := v_list(1).COURT_TYPE;
                           v_new_rec.court_list(ind).COURT_ID := v_list(1).COURT_ID;
                           v_new_rec.court_list(ind).COURT_NAME := v_list(1).COURT_NAME;
                           v_new_rec.court_list(ind).COURT_FILE_NO := v_list(1).COURT_FILE_NO;
                           v_new_rec.court_list(ind).CASE_NOTIF_DATE := v_list(1).CASE_NOTIF_DATE;
                           v_new_rec.court_list(ind).DECISION_NO := v_list(1).DECISION_NO;
                           v_new_rec.court_list(ind).DECISION_DATE := v_list(1).DECISION_DATE;
                           v_new_rec.court_list(ind).DECISION_NOTIF_DATE := v_list(1).DECISION_NOTIF_DATE;
                           v_new_rec.court_list(ind).CASE_DATE := v_list(1).CASE_DATE;
                           v_new_rec.court_list(ind).COURT_CONTROL := v_list(1).COURT_CONTROL;
                           --tmp_log('ALZ_LITIGATION_UTILS','APPROVE_LAW_FILE_AUTH','3 : '||p_rec.court_list(ind).COURT_ID);
                           v_debug:=63;
                        end if;
                   else
                         begin
                            v_stmt := 'DECLARE  v_new_rec law_file_all_typ; BEGIN  v_new_rec:= :yeni ; v_new_rec.'||v_ruler.source_type_name||'('||ind||').'||V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE||' := alz_litigation_utils.get_authorization('''||p_lawfile_no||''','''||p_source_column||''','''||V_SOURCE_ID||''') ; :yeni := v_new_rec ; END;';
                            EXECUTE IMMEDIATE v_stmt USING  IN OUT v_new_rec ;
                        exception when others then
                            select 'DECLARE  v_new_rec law_file_all_typ; BEGIN  v_new_rec:= :yeni ; select law_authorization_typ( '||v_auth_id||',1,null,'''||v_desc||' '|| v_new_value||' '||v_new_helper_value||''',null,null ) into v_new_rec.'||v_ruler.source_type_name||'('||ind||').'||V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE||' from dual; :yeni := v_new_rec ; END;'
                            into v_stmt
                            from dual;
                            EXECUTE IMMEDIATE v_stmt USING  IN OUT v_new_rec ;
                        end;
                        v_debug:=6;
                   END IF;
                end if;
                V_DEGISIM := 0;
            exception when others then
                IF V_DEGISIM = 1 THEN
                        rollback;
                        v_error_msg := p_source_column||' alaný otorizasyona gönderilemedi';

                        process_result(
                            20, --p_process_no
                            2,
                            v_debug,
                            -1,
                            'SEND_APPROVE',
                            v_error_msg||sqlerrm,
                            v_error_msg||sqlerrm,
                            null,
                            null,
                            'ALZ_AUTHORIZATION_UTILS.CHECK_FIELDS_'||v_mode,
                            p_process_results
                        );
                        return;
                end if;
                return;
            end;

        end loop;

      else -- GENELDE HEADER BILGILERINININ BULUNDUÐU ALANLAR ICIN BURAYA GIRECEK

        begin
            auth_get_and_rollback_values( p_new_id  => -1 ,
                                                               p_old_id => v_old_id ,
                                                               p_source_type_name => v_ruler.source_type_name,
                                                               p_source_column_name => v_ruler.source_column_name,
                                                               p_source_column_helper_name => v_ruler.source_column_helper_name,
                                                               p_source_column_type => v_ruler.source_column_type ,
                                                               p_source_column_helper_type => v_ruler.source_column_helper_type ,
                                                               p_degisim => v_degisim ,
                                                               p_new_value => v_new_value ,
                                                               p_new_helper_value => v_new_helper_value ,
                                                               p_new_data_format => v_new_data_format ,
                                                               p_old_rec => p_old_rec ,
                                                               p_new_rec => v_new_rec );
                V_SOURCE_ID := P_SOURCE_ID;
                IF V_DEGISIM = 1 and substr( v_ruler.auth_type,3,1) = 'L' THEN
                        get_auth_fields(p_auth_rule_id => v_ruler.auth_rule_id ,
                                    p_law_file_no =>p_lawfile_no,
                                    p_source_id => v_source_id,
                                    p_old_rec => p_old_rec,
                                    p_new_rec => p_new_rec,
                                    p_old_indice => v_old_id,
                                    p_new_indice => -1,
                                    p_process_results => p_process_results);
                END IF;
                -- spasifik durumlar STATUS DESC ALANI
                IF V_DEGISIM = 1  AND p_source_table = 'KOC_LAW_BASES' AND upper(P_SOURCE_COLUMN) = 'STATUS_ID' AND V_NEW_VALUE is not null THEN
                    begin
                        SELECT EXPLANATION
                        INTO V_DESC
                        FROM koc_law_status_ref
                        WHERE STATUS_ID = TO_NUMBER( V_NEW_VALUE );

                        v_new_rec.general_info_rec.status_id_desc := p_old_rec.general_info_rec.status_id_desc;
                    exception when others then
                        V_DESC := null;
                    end;
                END IF;
              -- spasifik durumlar INTEREST_TYPE DESC ALANI
              IF V_DEGISIM = 1  AND p_source_table = 'KOC_LAW_BASES' AND upper(P_SOURCE_COLUMN) = 'INTEREST_TYPE' AND V_NEW_VALUE is not null THEN
                begin
                    select explanation
                    INTO V_DESC
                    from koc_law_interest_type
                    where interest_type = V_NEW_VALUE ;

                    update alz_law_auth_ext
                    set field10 = V_DESC
                    where authorization_id is null
                    and law_file_no = p_lawfile_no
                    and source_id = v_source_id;
                exception when others then
                    V_DESC := null;
                end;
              END IF;

              IF V_DEGISIM = 1  AND p_source_table = 'KOC_LAW_BASES' AND upper(P_SOURCE_COLUMN) = 'PROSECUTION_TYPE' AND V_NEW_VALUE is not null THEN
                begin
                    select explanation
                    into V_DESC
                    from koc_law_prosecution_type
                    WHERE TYPE_NO = V_NEW_VALUE ;
                exception when others then
                    V_DESC := null;
                end;
              END IF;

              if V_DEGISIM = 1 then
                   SEND_AUTH_APPROVE (p_lawfile_no,
                                   p_source_table ,
                                   v_ruler.source_id_column ,
                                   V_SOURCE_ID ,
                                   p_source_column ,
                                   v_new_value ,
                                   v_new_data_format ,
                                   v_new_helper_value,
                                   p_user ,
                                   v_desc,
                                   p_process_results ,
                                   v_auth_id );
                    v_send_out_message:= 1;

                    IF V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE IS NOT NULL THEN
                        begin
                            v_stmt := 'DECLARE  v_new_rec law_file_all_typ; BEGIN  v_new_rec:= :yeni ; v_new_rec.'||v_ruler.source_type_name||'.'||V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE||' := alz_litigation_utils.get_authorization('''||p_lawfile_no||''','''||p_source_column||''',null) ; :yeni := v_new_rec ; END;';
                            EXECUTE IMMEDIATE v_stmt USING  IN OUT v_new_rec ;
                        exception when others then
                            select 'DECLARE  v_new_rec law_file_all_typ; BEGIN  v_new_rec:= :yeni ; select law_authorization_typ( '||v_auth_id||',1,null,'''||v_desc||' '|| v_new_value||' '||v_new_helper_value||''',null,null ) into v_new_rec.'||v_ruler.source_type_name||'.'||V_RULER.SOURCE_TYPE_CONTROL_ATTRIBUTE||' from dual; :yeni := v_new_rec ; END;'
                            into v_stmt
                            from dual;
                            EXECUTE IMMEDIATE v_stmt USING  IN OUT v_new_rec ;
                        end;
                    END IF;
              end if;

        exception when others then
            IF V_DEGISIM = 1 THEN
                    rollback;
                    v_error_msg := p_source_column||' alaný otorizasyona gönderilemedi';

                    process_result(
                        20, --p_process_no
                        2,
                        9,
                        -1,
                        'SEND_APPROVE',
                        v_error_msg,
                        v_error_msg||sqlerrm,
                        null,
                        null,
                        'ALZ_AUTHORIZATION_UTILS.SEND_APPROVE',
                        p_process_results
                    );
                    return;
            end if;
            return;
        end;
      end if;

      p_new_rec := v_new_rec ;
   END;

   procedure auth_approve( p_authorization_id   in     number,
                                     p_approver           in     varchar2,
                                     p_approve_desc in varchar2 default null,
                                     p_process_results in out customer.process_result_table) is

        v_law_file_no varchar2(30);
      begin

        update alz_law_auth
        set is_approved = 1,
        approval_date = sysdate,
        approval_username = p_approver,
        reject_reason = p_approve_desc
        where authorization_id = p_authorization_id ;

        begin
            select distinct lawfile_no into v_law_file_no from alz_law_auth where authorization_id = p_authorization_id;

        exception when others then
            v_law_file_no := null;
        end;

        if v_law_file_no is not null then
            if auth_check_base_record( v_law_file_no ) = 0 then
                update koc_law_bases
                set is_approved= 1
                where law_file_no= v_law_file_no
                and nvl( is_approved,0) <> 2 ;
            end if;
        end if;

      end;


   PROCEDURE APPROVE_LAW_FILE_AUTH ( P_AUTHORIZATION_ID   IN     NUMBER,
                                                                P_APPROVER           IN     VARCHAR2,
                                                                p_rec in out law_file_all_typ,
                                                                p_simple_questions in out customer.simple_question_table,
                                                                p_process_results in out customer.process_result_table,
                                                                p_description in out varchar2 ,
                                                                p_status in out number )
  IS

        CURSOR C_AUTH IS
          SELECT *
          FROM ALZ_LAW_AUTH
          WHERE AUTHORIZATION_ID = P_AUTHORIZATION_ID;

          CURSOR C_RULER( P_SOURCE_TABLE VARCHAR2 , P_SOURCE_COLUMN VARCHAR2 ) IS
            SELECT *
            FROM alz_law_auth_rule
            WHERE source_table = p_source_table
            AND source_column_name = p_source_column
            AND active=1;

      v_error_msg VARCHAR2(2000);
      V_COUNT NUMBER;
      v_law_file_no varchar2(100);
      v_ruler_rec alz_law_auth_rule%rowtype ;
      V_auth_rec alz_law_auth%rowtype;

      v_date_format varchar2(30):='DD.MM.YYYY';
      V_STMT varchar2(2000);
      v_source_str varchar2(200);
      v_source_helper_str varchar2(200);
      v_source_control_str varchar2(200);
      V_SET_VALUE_STR varchar2(200);
      v_rec_count number;
      v_rec_point number:=0;
      v_user_group_check number;
      v_list law_courts_tbl;
      v_is_closed number;

   BEGIN
        OPEN C_AUTH;
        FETCH C_AUTH
        INTO V_AUTH_REC;
        CLOSE C_AUTH;

        OPEN C_RULER(V_AUTH_REC.SOURCE_TABLE,V_AUTH_REC.SOURCE_COLUMN_NAME);
        FETCH C_RULER
        INTO V_RULER_REC;
        CLOSE C_RULER;

        -- koc_law_bases koc_law_status_ref
        -- önce status mü diye bak
        if upper( V_AUTH_REC.source_column_name ) = 'STATUS_ID'  and p_approver is not null then
            -- ona gore eleman kontrolü var

            select count(1)
            into v_user_group_check
            from koc_clm_lookup
            where TYPE=98454
            and ICODE=0
            and SCODE=p_approver ;

            if  v_user_group_check = 0 then
                --DBMS_OUTPUT.put_line ('Dosya durum kodu degisikligine onay yetkiniz yok !');
                v_error_msg := 'Dosya durum kodu degisikligine onay yetkiniz yok !' ;
                process_result(
                    25, --p_process_no
                    0,
                    7,
                    -1,
                    'APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.APPROVE',
                    p_process_results
                );
                return;
            end if;

            begin
                SELECT nvl( is_closed , 0 )
                INTO v_is_closed
                FROM koc_law_status_ref
                WHERE STATUS_ID = TO_NUMBER( V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE );
            exception when others then
                v_is_closed := 1 ;
            end;

             -- baþka talep var mý kontrolü olacak
            if auth_check_base_record( V_AUTH_REC.lawfile_no ) > 1 and v_is_closed = 1  then
                --DBMS_OUTPUT.put_line ('Bu davada baþka otoroizasyon talepleri var. Durum deðiþikliðinden önce onlarý onaylayýnýz.');
                v_error_msg := 'Bu davada baþka otoroizasyon talepleri var. Durum deðiþikliðinden önce onlarý onaylayýnýz.' ;
                process_result(
                    25, --p_process_no
                    0,
                    8,
                    -1,
                    'APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.APPROVE',
                    p_process_results
                );
                return;
            end if;

        end if;

       IF V_RULER_REC.IS_NESTED_SOURCE_TYPE = 1 THEN
            v_stmt := 'DECLARE   v_rec law_file_all_typ; BEGIN v_rec := :rec  ; :old_count := v_rec.'|| v_ruler_rec.source_type_name ||'.count ; END;' ;
            EXECUTE IMMEDIATE v_stmt using in p_rec, out v_rec_count;
            for ind in 1..v_rec_count
            loop
                if v_rec_point = 0 then
                     begin
                        v_source_str := v_ruler_rec.source_type_name||'('||ind||').'||V_AUTH_REC.source_id_column;
                        v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; select decode( to_char( v_rec.'||v_source_str||' ) ,  '''||V_AUTH_REC.SOURCE_ID||''',1,0 ) into :kk from dual; end;'  ;
                        EXECUTE IMMEDIATE v_stmt using in p_rec , out v_rec_point;

                        if v_rec_point = 1 then

                            if substr( V_RULER_REC.auth_type,3,1 ) = 'L' and V_RULER_REC.source_table = 'KOC_LAW_BASE_COURTS' then
                                apply_authed_fields( P_AUTHORIZATION_ID, P_approver,   p_process_results );
                                begin
                                    v_count := p_process_results.count;
                                exception when others then
                                    v_count := 0;
                                end;

                                if v_count > 0 then
                                    if p_process_results(1).type = -1 then
                                        --rollback;
                                        v_error_msg := 'Otorizasyon onaylanýrken hata oluþtu. '||chr(10)||p_process_results(1).reason;
                                        process_result(
                                            25, --p_process_no
                                            0,
                                            12,
                                            -1,
                                            'APPROVE',
                                            v_error_msg,
                                            v_error_msg,
                                            null,
                                            null,
                                            'ALZ_AUTHORIZATION_UTILS.APPROVE',
                                            p_process_results
                                        );
                                        return;
                                    end if;
                                end if;
                                BEGIN
                                    select LAW_COURTS_TYP(
                                            lbc.court_enf_type,
                                            lbc.court_type,
                                            lbc.court_id,
                                            alc.court_name,
                                            lbc.court_file_no,
                                            lbc.case_date,
                                            lbc.case_notif_date,
                                            lbc.decision_no,
                                            lbc.decision_date,
                                            lbc.decision_notif_date,
                                            null  --court_control
                                           ) BULK COLLECT
                                      into v_list
                                      from koc_law_base_courts lbc,
                                           alz_law_courts_v alc
                                     where lbc.law_file_no =  V_AUTH_REC.LAWFILE_NO
                                       and lbc.court_type = alc.court_type
                                       and lbc.court_id = alc.court_id
                                       AND LBC.COURT_ENF_TYPE = V_AUTH_REC.SOURCE_ID ;

                                       if v_list.count > 0 then
                                           p_rec.court_list(ind).COURT_ENF_TYPE := v_list(1).COURT_ENF_TYPE;
                                           p_rec.court_list(ind).COURT_TYPE := v_list(1).COURT_TYPE;
                                           p_rec.court_list(ind).COURT_ID := v_list(1).COURT_ID;
                                           p_rec.court_list(ind).COURT_NAME := v_list(1).COURT_NAME;
                                           p_rec.court_list(ind).COURT_FILE_NO := v_list(1).COURT_FILE_NO;
                                           p_rec.court_list(ind).CASE_NOTIF_DATE := v_list(1).CASE_NOTIF_DATE;
                                           p_rec.court_list(ind).DECISION_NO := v_list(1).DECISION_NO;
                                           p_rec.court_list(ind).DECISION_DATE := v_list(1).DECISION_DATE;
                                           p_rec.court_list(ind).DECISION_NOTIF_DATE := v_list(1).DECISION_NOTIF_DATE;
                                           p_rec.court_list(ind).CASE_DATE := v_list(1).CASE_DATE;
                                           --tmp_log('ALZ_LITIGATION_UTILS','APPROVE_LAW_FILE_AUTH','3 : '||p_rec.court_list(ind).COURT_ID);
                                       end if;
                                END;
                            elsif substr( V_RULER_REC.auth_type,3,1 ) = 'G' then
                                apply_authed_attributes(p_authorization_id,ind, p_rec,  p_process_results );
                            else
                                if V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE IS NOT NULL THEN
                                    if v_ruler_rec.source_COLUMN_TYPE = 'DATE' THEN
                                         V_SET_VALUE_STR:='TO_date( '''||V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE||''' , '''|| v_date_format ||''' )';
                                    ELSIF  v_ruler_rec.source_COLUMN_TYPE = 'NUMBER' THEN
                                        V_SET_VALUE_STR:= ' to_number('''|| V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE ||''')' ;
                                    ELSE
                                          V_SET_VALUE_STR:=''''||V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE||'''';
                                    end if;
                                ELSE
                                    V_SET_VALUE_STR := 'NULL';
                                END IF;
                                v_rec_point:=0;
                                v_source_str := v_ruler_rec.source_type_name||'('||ind||').'||v_ruler_rec.source_column_name;
                                v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_str||' := '||V_SET_VALUE_STR||' ; :rec := v_rec; end;'  ;
                                EXECUTE IMMEDIATE v_stmt using in out p_rec ;

                                if V_RULER_REC.SOURCE_COLUMN_HELPER_NAME is not null  then
                                    v_source_helper_str := v_ruler_rec.source_type_name||'('||ind||').'||v_ruler_rec.source_column_helper_name;
                                    if v_ruler_rec.SOURCE_COLUMN_HELPER_TYPE = 'DATE' then
                                        v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_helper_str||' := to_date( '''||V_AUTH_REC.SRC_COLUMN_HELPER_VALUE_NEW||''','''||v_date_format||''' ) ; :rec := v_rec; end;'  ;
                                    else
                                        v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_helper_str||' := '''||V_AUTH_REC.SRC_COLUMN_HELPER_VALUE_NEW||''' ; :rec := v_rec; end;'  ;
                                    end if;

                                    EXECUTE IMMEDIATE v_stmt using in out p_rec ;
                                end if;
                            end if;
                        end if;
                    end;
               end if;
            end loop;
        ELSE
            begin
                if substr( V_RULER_REC.auth_type,3,1 ) = 'G' then
                    apply_authed_attributes( p_authorization_id, 0, p_rec,  p_process_results );
                else
                    if V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE IS NOT NULL THEN
                        if v_ruler_rec.source_COLUMN_TYPE = 'DATE' THEN
                             V_SET_VALUE_STR:='TO_date( '''||V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE||''' , '''|| v_date_format ||''' )';
                        ELSIF  v_ruler_rec.source_COLUMN_TYPE = 'NUMBER' THEN
                            V_SET_VALUE_STR:= ' to_number('''|| V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE ||''')' ;
                        ELSE
                              V_SET_VALUE_STR:=''''||V_AUTH_REC.SOURCE_COLUMN_NEW_VALUE||'''';
                        end if;
                    ELSE
                        V_SET_VALUE_STR := 'NULL';
                    END IF;

                    v_source_str := v_ruler_rec.source_type_name||'.'||v_ruler_rec.source_column_name;
                    v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_str||' := '||V_SET_VALUE_STR||' ; :rec := v_rec; end;'  ;
                    EXECUTE IMMEDIATE v_stmt using in out p_rec ;

                    if V_RULER_REC.SOURCE_COLUMN_HELPER_NAME is not null  then
                        v_source_helper_str := v_ruler_rec.source_type_name||'.'||v_ruler_rec.source_column_helper_name;
                        if v_ruler_rec.SOURCE_COLUMN_HELPER_TYPE = 'DATE' then
                            v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_helper_str||' := to_date( '''||V_AUTH_REC.SRC_COLUMN_HELPER_VALUE_NEW||''','''||v_date_format||''' ) ; :rec := v_rec; end;'  ;
                        else
                            v_stmt := 'DECLARE  v_rec law_file_all_typ;  BEGIN v_rec := :rec ; v_rec.'||v_source_helper_str||' := '''||V_AUTH_REC.SRC_COLUMN_HELPER_VALUE_NEW||''' ; :rec := v_rec; end;'  ;
                        end if;
                        EXECUTE IMMEDIATE v_stmt using in out p_rec ;
                    end if;
                end if;
            end;
       END IF;
        AUTH_APPROVE(P_AUTHORIZATION_ID,P_APPROVER,p_description,p_process_results);
        -- getting law_file_no
        select lawfile_no
        into v_law_file_no
        from alz_law_auth
        where authorization_id = p_authorization_id;
        --KAYDET--
        p_description := null ;
        ALZ_LITIGATION_UTILS.save_lawfile( v_law_file_no,
                                            P_APPROVER,
                                            p_rec,
                                            p_simple_questions,
                                            p_process_results,
                                            p_description,
                                            p_status
                                            );
        begin
            v_count := p_process_results.count;
        exception when others then
            v_count := 0;
        end;

        if v_count > 0 then
            if p_process_results(1).type = -1 then
                --rollback;
                v_error_msg := 'Hukuk Dosyasý kaydý yapýlýrken hata oldu:'||chr(10)||p_process_results(1).reason;
                process_result(
                    25, --p_process_no
                    0,
                    9,
                    -1,
                    'APPROVE',
                    v_error_msg,
                    v_error_msg,
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.APPROVE',
                    p_process_results
                );
                return;
            end if;
        end if;
        -- KAYIT YAPILDI
   END;

   procedure auth_reject (
      p_authorization_id   in     number,
      p_approver           in     varchar2,
      p_reject_reason      in     varchar2,
      p_law_file_no        in     varchar2,
      p_process_results    in   out customer.process_result_table)
   is
   begin
        if p_reject_reason is null then
            process_result(
                    25, --p_process_no
                    0,
                    5,
                    -1,
                    'REJECT',
                    'Red açýklamasý girmeniz gerekmektedir.' ,
                    'Red açýklamasý girmeniz gerekmektedir.',
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.REJECT',
                    p_process_results
                );
            return;
        end if;

        update alz_law_auth
        set approval_date = sysdate,
            approval_username = p_approver,
            reject_reason = p_reject_reason,
            is_approved = -1
        where authorization_id = p_authorization_id ;

        if auth_check_base_record( p_law_file_no ) = 0 then
            update koc_law_bases
            set is_approved= 1
            where law_file_no= p_law_file_no
            and nvl( is_approved,0) <> 2 ;
        end if;

   end;

   procedure auth_cancel (
      p_authorization_id   in     number,
      p_approver           in     varchar2,
      p_cancel_reason      in     varchar2,
      p_law_file_no        in     varchar2,
      p_process_results    in   out customer.process_result_table)
   is
   begin
      if p_cancel_reason is null then
            process_result(
                    25, --p_process_no
                    0,
                    6,
                    -1,
                    'CANCEL',
                    'Ýptal açýklamasý girmeniz gerekmektedir.',
                    'Ýptal açýklamasý girmeniz gerekmektedir.',
                    null,
                    null,
                    'ALZ_AUTHORIZATION_UTILS.CANCEL',
                    p_process_results
                );
      end if;

        update alz_law_auth
        set approval_date = sysdate,
            approval_username = p_approver,
            reject_reason = p_cancel_reason,
            is_cancelled = 1
        where authorization_id = p_authorization_id ;

        if auth_check_base_record( p_law_file_no ) = 0 then
            update koc_law_bases
            set is_approved= 1
            where law_file_no= p_law_file_no;
        end if;
   end;

   function auth_check_base_record( p_source_ref_id in varchar2 ) return number is
        v_ret number;
   begin
        select count(1)
          into v_ret
          from alz_law_auth
         where lawfile_no = p_source_ref_id
           and is_approved = 0
           and is_cancelled = 0;

        return v_ret;
   exception when others then
    return 0;
   end;

   function is_auth_field( p_source_table in varchar2 ,p_source_column in varchar2 ) return number is
        v_return number;
   begin
        select count(1)
        into v_return
        from alz_law_auth_rule
        where     source_table = p_source_table
        and source_column_name = p_source_column
        and active = 1;

        return  v_return ;
   end;

    procedure interest_amount(p_amt NUMBER,p_type VARCHAR2,p_date1 DATE,p_date2 DATE,p_tutar OUT NUMBER) IS

    CURSOR c1 IS

        SELECT validity_start_date,validity_end_date,interest_rate
        FROM koc_law_interest_rate
        WHERE interest_type = p_type AND
              validity_start_date >= (SELECT MAX(validity_start_date) FROM koc_law_interest_rate
                                      WHERE validity_start_date <= p_date1 AND --to_date('06/09/2000','dd/mm/yyyy') and
                                      interest_type = p_type) AND

              NVL(validity_end_date,TO_DATE('01/01/9999','dd/mm/yyyy')) <= (SELECT NVL(MIN(validity_end_date),TO_DATE('01/01/9999','dd/mm/yyyy')) FROM koc_law_interest_rate
                                    WHERE validity_end_date >= p_date2 AND --to_date('01/07/2002','dd/mm/yyyy') or
                                    interest_type = p_type);
              --or validity_end_date is null;


    v_toplam  NUMBER:=0;
    v_faiz      NUMBER:=0;
    v_tutar NUMBER :=0;
    v_gun NUMBER :=0;
    say NUMBER:=1;

    BEGIN

      FOR c1rec IN c1
      LOOP
        IF c1rec.validity_end_date IS NOT NULL THEN
          IF c1rec.validity_end_date < TO_DATE(p_date2,'dd/mm/yyyy') THEN
            IF c1rec.validity_start_date < TO_DATE(p_date1,'dd/mm/yyyy') THEN
              v_gun := (c1rec.validity_end_date ) - TO_DATE(p_date1,'dd/mm/yyyy');
            ELSE
              v_gun := (c1rec.validity_end_date ) - c1rec.validity_start_date;
            END IF;
          ELSE
            IF c1rec.validity_start_date < TO_DATE(p_date1,'dd/mm/yyyy') THEN
              v_gun := TO_DATE(p_date2,'dd/mm/yyyy') - TO_DATE(p_date1,'dd/mm/yyyy');
            ELSE
              v_gun := TO_DATE(p_date2,'dd/mm/yyyy') - c1rec.validity_start_date; --to_date(:p_date1,'dd/mm/yyyy');
            END IF;
          END IF;

        ELSE --validity_end_date is null
          IF TO_DATE(p_date1,'dd/mm/yyyy') > c1rec.validity_start_date THEN
            v_gun := TO_DATE(p_date2,'dd/mm/yyyy') - TO_DATE(p_date1,'dd/mm/yyyy'); --to_date(:p_date1,'dd/mm/yyyy');
          ELSE
            v_gun := TO_DATE(p_date2,'dd/mm/yyyy') - c1rec.validity_start_date; --to_date(:p_date1,'dd/mm/yyyy');
          END IF;

        END IF;
        v_faiz := p_amt * (v_gun / 365) * (c1rec.interest_rate / 100);
        v_faiz := ROUND(v_faiz,Find_Round_Digit(Base_Swift_Code,'S'));

        v_toplam := v_toplam + v_faiz;
        say := say + 1;
      END LOOP;
      p_tutar := v_toplam;

    END;

end;
/
